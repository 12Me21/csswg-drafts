<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: text.src,v 2.25 2002-04-23 16:01:21 bbos Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Text</TITLE>
</HEAD>
<BODY>
<H1 align="center">Text</H1>

<P>The properties defined in the following sections affect the visual
presentation of characters, spaces, words, and paragraphs.

<H2><a name="indentation-prop">Indentation</a>: the <span
class="propinst-text-indent">'text-indent'</span> property</H2>

<!-- #include src=properties/text-indent.srb -->

<P>This property specifies the indentation of the first line of text
in a block. More precisely, it specifies the indentation of the
first box that flows into the block's first <a
href="visuren.html#line-box">line box</a>.  The box is indented with
respect to the left (or right, for right-to-left layout) edge of the
line box. User agents should render this indentation as blank space.

<P>Values have the following meanings:</P>

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span
class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>The indentation is a fixed length.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span
class="value-inst-percentage"><strong>&lt;percentage&gt;</strong>
</span></span>
<dd>The indentation is a percentage of the containing
block width.
</dl>

<P>The value of <span
class="propinst-text-indent">'text-indent'</span> may be negative, but
there may be implementation-specific limits.  If the value of <span
class="propinst-text-indent">'text-indent'</span> is negative, the
value of <span class="propinst-overflow">'overflow'</span> will affect
whether the text is visible.

<div class="example"><P>
The following example causes a '3em' text indent.

<PRE>
  P { text-indent: 3em }
</PRE>
</div>

<H2><a name="alignment-prop">Alignment:</a> the <span
class="propinst-text-align">'text-align'</span> property</H2>

<!-- #include src=properties/text-align.srb -->

<P>This property describes how inline content of a block is aligned.  Values
have the following meanings:</P>

<dl>
<dt><strong>left</strong>, <strong>right</strong>, 
<strong>center</strong>, and <strong>justify</strong>
<dd>Left, right, center, and justify text, respectively.
<dt><span class="index-inst" title="&lt;string&gt;"><span
class="value-inst-string"><strong>&lt;string&gt;</strong></span></span>
<dd>Specifies a string on which cells in a table column will
align (see the section on <a href="tables.html#column-alignment">
horizontal alignment in a column</a> for details and an example).
This value applies <em>only</em> to <a href="tables.html">table</a> 
cells. If set on other elements, it will be treated as 'left' or
'right', depending on whether <span
class="propinst-direction">'direction'</span> is 'ltr', or 'rtl',
respectively.
</dl>

<P>A block of text is a stack of <a href="visuren.html#line-box">line
boxes</a>.  In the case of 'left', 'right' and 'center', this property specifies
how the inline boxes within each line box align with respect to the line
box's left and right sides; alignment is not with respect to the <a
href="visuren.html#viewport">viewport</a>.  In the case of 'justify',
the UA may stretch the inline boxes in addition to adjusting their
positions. (See also <span
class="propinst-letter-spacing">'letter-spacing'</span> and <span
class="propinst-word-spacing">'word-spacing'</span>.)

<div class="example"><P> 
In this example, note that since <span
class="propinst-text-align">'text-align'</span> is inherited, all
block-level elements inside the DIV element with 'class=center' will
have their inline content centered. 

<PRE>
DIV.center { text-align: center }
</PRE>
</div>

<div class="note"><P>
<em><strong>Note.</strong>
The actual justification algorithm used is user-agent and written language
dependent.</em>

<P><em><span class="index-inst" title="conformance"><a
href="conform.html#conformance">Conforming <!--HTML [What is an "HTML
UA"? BB--> user agents</a></span> may
interpret the value 'justify' as 'left' or 'right', depending on
whether the element's default writing direction is left-to-right or
right-to-left, respectively.</em>
</div>

<H2>Decoration</H2>

<H3><a name="lining-striking-props">Underlining, overlining, striking, and
blinking</a>: the <span
class="propinst-text-decoration">'text-decoration'</span>
property</H3>

<!-- #include src=properties/text-decoration.srb -->

<P> This property describes decorations that are added to the text of
an element. If the property is specified for a <a
href="visuren.html#block-level">block-level</a> element, it affects
all inline-level descendants of the element. If it is specified for (or
affects) an <a href="visuren.html#inline-level">inline-level</a> element, it
affects all boxes generated by the element.  If the element has no
content or no text content (e.g., the IMG element in HTML), user
agents must <a href="syndata.html#ignore">ignore</a> this property.

<P>Values have the following meanings:</p>

<dl>
<dt><strong>none</strong>
<dd>Produces no text decoration.
<dt><strong>underline</strong>
<dd>Each line of text is underlined.
<dt><strong>overline</strong>
<dd>Each line of text has a line above it.
<dt><strong>line-through</strong>
<dd>Each line of text has a line through the middle
<dt><strong>blink</strong>
<dd>Text blinks (alternates between visible and invisible).
<a href="conform.html#conformance">Conforming user agents</a>
may simply not blink the text. Note that not blinking the text 
is one technique to satisfy 
<a href="http://www.w3.org/TR/UAAG/guidelines.html#tech-on-off-blinking-text">checkpoint 3.3 of WAI-UAAG</a>.
</dl>

<P> The color(s) required for the text decoration should be derived
from the <span class="propinst-color">'color'</span> property value.

<P> This property is not inherited, but descendant boxes of a
block box should be formatted with the same decoration (e.g.,
they should all be underlined). The color of decorations should remain
the same even if descendant elements have different <span
class="propinst-color">'color'</span> values.

<div class="example"><P>
In the following example for HTML, the text content of all 
A elements acting as hyperlinks will be underlined:</p>

<PRE>
A[href] { text-decoration: underline }
</PRE>
</div>


<H2><a name="spacing-props">Letter and word spacing</a>: the <span
class="propinst-letter-spacing">'letter-spacing'</span> and <span
class="propinst-word-spacing">'word-spacing'</span> properties</H2>

<!-- #include src=properties/letter-spacing.srb -->

<P>This property specifies spacing behavior between
text characters. Values have the following meanings:</P>

<dl>
<dt><strong>normal</strong>
<dd>The spacing is the normal spacing for the current font.
This value allows the user agent to alter the space
between characters in order to justify text.
<dt><span class="index-inst" title="&lt;length&gt;"><span
class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>This value indicates inter-character space <em>in
addition to</em> the default space between
characters.  Values may be negative, but there may be
implementation-specific limits. 
User agents may not further increase or decrease the inter-character
space in order to justify text.
</dl>

<P>Character spacing algorithms are user agent-dependent.  Character
spacing may also be influenced by justification (see the <span
class="propinst-text-align">'text-align'</span> property).

<div class="example"><P>
In this example, the space between characters in
BLOCKQUOTE elements is increased by '0.1em'.

<PRE>
BLOCKQUOTE { letter-spacing: 0.1em }
</PRE>

<P>In the following example, the user agent is not permitted
to alter inter-character space:</p>

<PRE>
BLOCKQUOTE { letter-spacing: 0cm }   /* Same as '0' */
</PRE>
</div>

<P> When the resultant space between two characters is not the same as
the default space, user agents should not use 
<span class="index-inst" title="ligatures">ligatures.</span>

<!-- #include src=properties/word-spacing.srb -->

<P>This property specifies spacing behavior between words.
Values have the following meanings:</p>

<dl>
<dt><strong>normal</strong>
<dd>The normal inter-word space, as defined by the current font and/or
the UA.
<dt><span class="index-inst" title="&lt;length&gt;"><span
class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>This value indicates inter-word space <em>in
addition to</em> the default space between
words.  Values may be negative, but there may be
implementation-specific limits. 
</dl>

<P>Word spacing algorithms are user agent-dependent.  Word spacing is
also influenced by justification (see the <span
class="propinst-text-align">'text-align'</span> property).

<div class="example"><P>
In this example, the word-spacing between each word in H1 elements is
increased by '1em'.

<PRE>
H1 { word-spacing: 1em }
</PRE>
</div>

<H2><a name="caps-prop">Capitalization</a>: the <span
class="propinst-text-transform">'text-transform'</span> property</H2>

<!-- #include src=properties/text-transform.srb -->

<P>This property controls capitalization effects of
an element's text. Values have the following meanings:</p>

<DL>
  <DT><strong>capitalize</strong>
  <DD>Puts the first character of each word in uppercase.
  <DT><strong>uppercase</strong>
  <DD>Puts all characters of each word in uppercase.
  <DT><strong>lowercase</strong>
  <DD>Puts all characters of each word in lowercase.
  <DT><strong>none</strong>
  <DD>No capitalization effects.
</DL>

<P> The actual transformation in each case is written language
dependent. See RFC 2070 ([[RFC2070]]) for ways to find the language of
an element.

<P><span class="index-inst" title="conformance"><a
href="conform.html#conformance">Conforming user agents</a></span>
may consider the value of <span
class="propinst-text-transform">'text-transform'</span> to be 'none'
for characters that are not from the Latin-1 repertoire and for
elements in languages for which the transformation is different from
that specified by the case-conversion tables of ISO 10646
([[ISO10646]]).

<div class="example"><P>
In this example, all text in an H1 element is transformed to uppercase
text.
<PRE>
H1 { text-transform: uppercase }
</PRE>
</div>

<H2><a name="white-space-prop">Whitespace</a>: the <span
class="propinst-white-space">'white-space'</span> property</H2>

<!-- #include src=properties/white-space.srb -->

<P> This property declares how <a
href="syndata.html#whitespace">whitespace</a> inside the element is
handled. Values have the following meanings:</P>


<!-- See the HTML definition of whitespace -IJ -->
<dl>
<dt><strong>normal</strong>
<dd>This value directs user agents to collapse sequences
of whitespace, and break lines as necessary to fill line boxes.
Additional line breaks may be created by occurrences of "\A" in
generated content (e.g., for the BR element in HTML).
<dt><strong>pre</strong>
<dd>This value prevents user agents from collapsing sequences
of whitespace. Lines are only broken at newlines in the source, or
at occurrences of "\A" in generated content.
<dt><strong>nowrap</strong>
<dd>This value collapses whitespace as for 'normal', but suppresses
line breaks within text except for those created by "\A" in generated
content (e.g., for the BR element in HTML).

</dl>

<div class="example"><P> The following examples show what <a
href="syndata.html#whitespace">whitespace</a> behavior is expected
from the PRE and P elements, and the "nowrap" attribute in HTML.
<PRE>
PRE        { white-space: pre }
P          { white-space: normal }
TD[nowrap] { white-space: nowrap }
</PRE>
</div>


</BODY>
</HTML>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
