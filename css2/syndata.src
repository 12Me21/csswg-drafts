<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: syndata.src,v 1.8 1997-08-21 21:02:10 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>CSS2 syntax and basic data types</TITLE>
<LINK rel="next" href="selector.html">
<LINK rel="previous" href="doctree.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">CSS2 syntax and basic data types</H1>
<H2>Syntax</H2>
<H3>Rules</H3>
<H3>At-rules (@-rules)</H3>
<H3><a name="comments">Comments</a></H3>

<H2>Basic Data types</H2>

<H3>Integers and numbers</H3>

<P>Some value types may have integer values, denoted by <span
	  class="index-def" title="&lt;integer&gt;, definition of"><a
	    name="value-def-integer"
	    class="value-def">&lt;integer&gt;</a></span> in this
	specification.

<P>Some value types may have real number values, denoted by <span
	  class="index-def" title="&lt;number&gt;, definition of"><a
	    name="value-def-number"
	    class="value-def">&lt;number&gt;</a></span> in this
	specification.

<H3><A NAME="length-units">Length units</A></H3>

<P> The format of a length value (denoted by <span class="index-def"
title="&lt;length&gt;, definition of"><a name="value-def-length"
class="value-def">&lt;length&gt;</a></span> in this specification) is
an optional sign character ('+' or '-', with '+' being the default)
immediately followed by a number (with or without a decimal point)
immediately followed by a unit identifier (a two-letter
abbreviation). After a '0' number, the unit identifier is optional.

<P> Some properties allow negative length units, but this may
complicate the formatting model and there may be
implementation-specific limits. If a negative length value cannot be
supported, it should be clipped to the nearest value that can be
supported.

<P><a href="absrel-units">There are two types of length units: relative and absolute.</a> <span
class="index-def" title="relative units"><em>Relative
length</em></span> units specify a length relative to another length
property. Style sheets that use relative units will more easily scale
from one medium to another (e.g., from a computer display to a laser
printer).

<P><A HREF="#percentage-units">Percentage units</A> (described below) and
keyword values (e.g. 'x-large') offer similar advantages.

<P> These relative units are supported: em, ex, and px.

<div class="example"><P>
<PRE>
  H1 { margin: 0.5em }      /* ems, the height of the element's font */
  H1 { margin: 1ex }        /* x-height, ~ the height of the letter 'x' */
  P  { font-size: 12px }    /* pixels, relative to canvas */
</PRE>
</div>

<P>The 'em' unit is is equal to the <span class="index-inst"
title="font size">font size</span> used when rendering an element's
text. The 'ex' unit is equal to the font's x-height (the height of the
letter 'x') of the element's font. A font need not contain the letter
"M" to have an 'em' size or the letter "x" to have an x-height; the
font should still define the two units.

<!-- Incomplete -->

<P>Both 'em' and 'ex' refer to the font size of an element except when
used in the <span class="propinst-font-size">'font-size'</span>
property, where they are relative to the font size inherited from the parent
element. 

<div class="example"><P>
<P>The rule:

<PRE>
H1 { line-height: 1.2em }
</PRE>

<P>means that the line height of the H1 elements will be 20% greater
than the font size of the H1 elements. On the other hand:

<PRE>
H1 { font-size: 1.2em }
</PRE>

<P>means that the font-size of H1 elements will be 20% greater than
the font size inherited by H1 elements.
</div>

<P><span class="index-def" title="pixel units">Pixel units</span> are
relative to the resolution of the canvas, i.e., most often a computer
display. If the pixel density of the output device is very different
from that of a typical computer display, the UA should rescale pixel
values. The suggested <span class="index-def" title="reference
pixel"><EM>reference pixel</EM></span> is the visual angle of one
pixel on a device with a pixel density of 90dpi and a distance from
the reader of an arm's length. For a nominal arm's length of 28
inches, the visual angle is about 0.0227 degrees.

<P> Child elements inherit the computed value, not the relative value.

<div class="example"><P>
For example:
<PRE>
  BODY {
    font-size: 12pt;
    text-indent: 3em;  /* i.e. 36pt */
  }
  H1 { font-size: 15pt }
</PRE>

<P> In the example above, the 'text-indent' value of 'H1' elements
will be 36pt, not 45pt.
</div>

<P><span class="index-def" title="absolute length"><em> Absolute
length</em></span> units are only useful when the physical properties
of the output medium are known. These absolute units are supported:
	in, cm, mm, pt, and pc. 

<div class="example"><P>
For example:
<PRE>
  H1 { margin: 0.5in }      /* inches, 1in = 2.54cm */
  H2 { line-height: 3cm }   /* centimeters */
  H3 { word-spacing: 4mm }  /* millimeters */
  H4 { font-size: 12pt }    /* points, 1pt = 1/72 in */
  H4 { font-size: 1pc }     /* picas, 1pc = 12pt */
</PRE>
</div>

<P> In cases where the specified length cannot be supported, UAs
should try to approximate. For all CSS2 properties, further
computations and inheritance should be based on the approximated
value.

<H3> <A NAME="percentage-units">Percentage units</A></H3>

<P> The format of a percentage value (denoted by <span
class="index-def" title="&lt;percentage&gt;, definition of"><a
name="value-def-percentage"
class="value-def">&lt;percentage&gt;</a></span> in this specification)
is an optional sign character ('+' or '-', with '+' being the default)
immediately followed by a number (with or without a decimal point)
immediately followed by '%'.

<P> Percentage values are always relative to another value, for
example a length unit. Each property that allows percentage units also
defines what value the percentage value refer to.

<div class="example"><P>
For example, Children elements of P will inherit the
computed value of <span class="propinst-line-height">'line-height'</span>
(i.e., 12pt), not the percentage (see
the <span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage">&lt;percentage&gt;</span></span>value).

<PRE>
  P { font-size: 10pt }
  P { line-height: 120% }  /* relative to 'font-size', i.e. 12pt */
</PRE>
</div>

<P> In all inherited CSS2 properties, if the value is specified as a
percentage, child elements inherit the resultant value, not the
percentage value.

<H3><A NAME="url">URLs</A></H3>

<P> A Uniform Resource Locator, or <span class="index-def"
title="URL">URL</span> (denoted by <span class="index-def"
title="&lt;url&gt;, definition of"><a name="value-def-url"
class="value-def">&lt;url&gt;</a></span> in this specification) is
identified with a functional notation. 

<div class="example"><P>
For example:
<PRE>
  BODY { background: url(http://www.bg.com/pinkish.gif) }
</PRE>
</div>

<P> The format of a URL value is 'url(' followed by optional white
space followed by an optional single quote (') or double quote (")
<!-- " --> character followed by the URL itself (as defined in <a
rel="biblioentry" href="./refs.html#ref-RFC1738">[RFC1738]</a>)
followed by an optional single quote (') or double quote (") <!-- "
--> character followed by optional whitespace followed by ')'. Quote
characters that are not part of the URL itself must be balanced.

<P> Parentheses, commas, whitespace characters, single quotes (') and
double quotes (") <!-- " --> appearing in a URL must be escaped with a
backslash: '\(', '\)', '\,'.

<P> In order to create modular style sheets that are not dependent on
the absolute location of a resource, authors may specify the location
of background images with partial URLs.  Partial URLs (as defined in
<a rel="biblioentry" href="./refs.html#ref-RFC1808">[RFC1808]</a>) are
interpreted relative to the source of the style sheet, not relative to
the document (i.e., the URL of the style sheet containing the partial
URL serves as the base URL for the resolution of the partial URL).

<div class="example">
<P>For example, suppose the following rule is located in a style sheet
named <tt>basic.css</tt>:
<PRE>
  BODY { background: url(yellow) }
</PRE>

<P>The background of the source document's BODY will be tiled with
whatever image is described by the resource named "yellow" in the same
directory as <tt>basic.css</tt>.
</div>

<H3>Angles</H3>

<P>Angle units (denoted by <span class="index-def"
title="&lt;angle&gt;, definition of"><a
name="value-def-angle">&lt;angle&gt;</a></span> in the text) are used
with <a href="./media.html#aural">aural cascading style sheets</a>.

<P>These following are legal angle units:

<UL>
<LI>deg: degrees
<LI>grad: gradians
<LI>rad: radians
</UL>

<p>Values in these units may be negative. They should be normalised to
the range 0-360deg by the UA. For example, 10deg and 350 deg are
equivalent.

<H3>Time</H3>

<P>Time units (denoted by <span class="index-def" title="&lt;time&gt;,
definition of"><a name="value-def-time">&lt;time&gt;</a></span> in the
text) are used with <a href="./media.html#aural">aural cascading style
sheets</a>.

<P>These following are legal time units:

<UL>
<LI>ms: milliseconds
<LI>s: seconds
</UL>

<p>Time values may not be negative.

<H3>Frequency</H3>

<P>Frequency units (denoted by <span class="index-def"
title="&lt;frequency&gt;, definition of"><a
name="value-def-frequency">&lt;frequency&gt;</a></span> in the text)
are used with <a href="./media.html#aural">aural cascading style
sheets</a>.

<p>There are two legal frequency units:

<ul><li>Hz: Hertz 
<li>kHz: kiloHertz
</ul>

<div class="example"><P>
For example, 200Hz is a bass sound, and 6kHz is a trebble sound.
</div>

</BODY>
</html>
