<!doctype html public '-//W3C//DTD HTML 4.0//EN'>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Generated text</title>
<link rel="next" href="page.html">
<link rel="previous" href="flowobj2.html">
<link href="style/default.css" rel="STYLESHEET" type="text/css">
</head>
<body>
<h1>Generated text and automatic numbering</h1>

<p>[Note: no system for automatic numbering has been agreed upon yet]

<p>For a readable display of a document, it may sometimes be necessary
to add certain fixed texts or images that are not part of the source
document. Examples are the insertion of the word "Figure" before the
caption of a figure, or "Chapter 7" before the 7th chapter
title. Especially in renderings for audio or braille it is important
to be able to insert these strings.

<p>The inserted content can consist of fixed strings (e.g., "Figure"),
fixed images (such as an icon), or counters that automatically
increment. Combinations are also possible ("Chapter 7").

<h2>:before, :after and the 'content' property</h2>

<p>The inserted content is the content of the :before and :after
pseudo-elements. The 'content' property of these pseudo-elements
specifies what is inserted. :before and :after inherit any inheritable
properties from the element to which they are attached.</p>

<div class=example>
<p>For example, the following style rule inserts a quote before and
after every Q element. The color of the quote will be red, but the
font will be the same as the font of the rest of the Q element:</p>

<pre>
Q:before, Q:after {
    content: "\"";
    color: red
}
</pre>
</div>

<p>Non-inherited properties have their initial value, except for the
'display' property, which will by default be 'inline' in a :before or :after
pseudo-element, whereas its normal initial value is 'block'.</p>

<div class=example>
<p>Because of this, the quote in the previous example is inserted as
an inline box, and not above (or below) the content of the Q. The next
example explicitly sets the 'display' property to 'block', so that the
inserted text becomes a block:</p>

<pre>
BODY:after {
    content: "The End";
    display: block;
    margin-top: 2em;
    text-align: center;
}
</pre>
</div>

<!-- #include src=properties/content.srb -->

<p>The value of the 'content' property is a sequence of strings, URLs,
and counters. The various parts are laid out as inline boxes inside
the element.</p>

<div class=note>
<p>In a future level of CSS, the 'content' property may accept
additional values, allowing it to vary the style of the generated
text, but in CSS2 the content of the :before or :after pseudo-element
is all in one style.</p>
</div>

<p>[How to do language-dependent quotes? [LANG=fr] Q:before{content:
"«"} doesn't work. How about Q:fr-fr:before {content: "«"} ? or @lang
fr-fr {Q:before{content: "«"}} ?]</p>

<h2>Automcatic counters</h2>

<p>[TBD]</p>

</body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
