<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Generated content</title>
<link rel="next" href="page.html">
<link rel="previous" href="visufx.html">
<link href="style/default.css" rel="STYLESHEET" type="text/css">
</head>
<body>
<h1 align="center">
<a name="generated-text">Generated content and automatic numbering</a></h1>

<p>In some cases, authors may want user agents to display content
that does not come from the <a href="conform.html#doctree">document
tree</a>. One familiar example of this is a numbered list; the author
does not want to list the numbers explicitly, he or she wants the
user agent to generate them automatically. Similarly, authors
may want the user agent to insert the word
"Figure" before the caption of a figure, or "Chapter 7" before the
seventh chapter title. For audio or braille in particular, user agents
should be able to insert these strings.

<p>In CSS2, inserted content can consist of combinations
of the following:</p>

<ul>
<li>fixed strings (e.g., "Figure"),</li>
<li>fixed images (such as an icon: [ICON HERE]),</li>
<!-- This icon is causing PS generation problems for now... -IJ
<img id="caution-img" src="images/caution.gif" alt="caution icon">
-->
<li>counters that are automatically incremented.</li>
</ul>

<P>Below we describe the mechanisms CSS2 offers
for specifying generated content.

<h2><a name="before-after-content">The</a> <span class="index-def"
title=":before|pseudo-elements:::before">:before</span> and <span
class="index-def" title=":after|pseudo-elements:::after">:after</span>
pseudo elements and the <span
class="propinst-content">'content'</span> property</h2>

<p>Authors specify generated content with the :before and :after
pseudo-elements. The <span class="propinst-content">'content'</span>
property of these pseudo-elements specifies what is inserted. :before
and :after <a href="cascade.html#inheritance">inherit</a> any
inheritable properties from the element to which they are
attached.</p>

<div class=example>
<p>For example, the following rule inserts a double quote mark 
before and after every Q element. The color of the quote will be red, but the
font will be the same as the font of the rest of the Q element:</p>

<pre>
Q:before, Q:after {
    content: "\"";
    color: red
}
</pre>
</div>

<p>In a :before or :after pseudo-element declaration, non-inherited
properties take their <a href="cascade.html#initial-value">initial
value</a>.</p>

<div class=example>
<p>Because the initial value of the <span
class="propinst-display">'display'</span> property is 'inline', the
quote in the previous example is inserted as an inline box, and not
above (or below) the content of the Q. The next example explicitly
sets the <span class="propinst-display">'display'</span> property to
'block', so that the inserted text becomes a block:</p>

<pre>
BODY:after {
    content: "The End";
    display: block;
    margin-top: 2em;
    text-align: center;
}
</pre>
</div>

<!-- #include src=properties/content.srb -->

<p>The value of the <span class="propinst-content">'content'</span>
property is a sequence of strings, URIs, and counters. The various
parts are laid out as inline boxes inside the element.</p>

<P>The values have the following meanings:</p>

<dl>
<dt><span class="index-def" title="&lt;string&gt;, definition of"><a
name="value-def-string"><strong>&lt;string&gt;</strong></a></span>
<dd>??
<dt><span class="index-def" title="&lt;counter&gt;, definition of"><a
name="value-def-counter"><strong>&lt;counter&gt;</strong></a></span>
<dd>??
</dl>

<div class=note>
<p><em><strong>Note.</strong> In future levels of CSS, the <span
class="propinst-content">'content'</span> property may accept
additional values, allowing it to vary the style of the generated
content, but in CSS2 the content of the :before or :after
pseudo-element is all in one style.
</em></p>
</div>

<p>[How to do language-dependent quotes? [LANG=fr] Q:before{content:
"«"} doesn't work. How about Q:fr-fr:before {content: "«"} ? or @lang
fr-fr {Q:before{content: "«"}} ?]</p>

<p>Newlines can be included in the generated content by writing the
"\A" (or "\00000A") escape sequence in one of the strings after the
<span class="propinst-content">'content'</span> property. This inserts
a forced line break, similar to the BR element in HTML. See <a
href="syndata.html#strings">"Strings"</a> and <a
href="syndata.html#escaped-characters">"Characters and case"</a> for
more information on the "\A" escape sequence. 

<div class="example"><P>
Example:

<PRE>
H1:before {
    display: block;
    content: "chapter\00000Achapter\00000Achapter"
}
</pre>
</div>

<h2>Automatic counters and numbering</h2>

<P><em>This is a placeholder.</em>

</body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
