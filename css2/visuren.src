<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: visuren.src,v 1.5 1997-08-07 15:16:01 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Visual flow model</TITLE>
<LINK rel="next" href="flowobj2.html">
<LINK rel="previous" href="media.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Visual flow model</H1>
The following sections specifies how user agents lay out
a stream of elements on the canvas. 

<H2><a name="box-model">The box model</a></H2>
<!--
   Box model (basis of visual CSS. everything in boxes)
       Defined.

   Boxes are hierarchical (see document tree). Children are placed
    inside of their parent element unless positioned
    explicitly. 
-->
<P>For each element to be laid out, the user agent creates a
rectangular box. The dimensions of each box, the relationship of the
element to its parent and children, and other factors affect how
the boxes are laid out on the canvas.

<P>Just as elements are hierarchically organized in the <a
href="doctree.html">document tree</a>, the rectangular boxes they
generate are also hierarchical. 

<P>Normally, child boxes are positioned within the box of their
parent. However, a child box may extend horizontally beyond the
bounding box of its parent in certain situations. These are described
in the section on <a href="flowobj2.html#overflow">overflow</a>.

<P>Not all elements result in boxes (see the section on <a
href="flowobj2.html#presentation-position">presentation and
positioning)</a>.

<H3><a name="box-dimensions">Box dimensions</a></H3>
<P>Each box has a core content area (e.g., text, an image, etc.) and
optional surrounding padding, border and margin areas. The following
diagram illustrates how these areas relate:

<PRE>
    _______________________________________
   |                                       |
   |           margin (transparent)        |
   |   _________________________________   |
   |  |                                 |  |
   |  |        border                   |  |
   |  |   ___________________________   |  |
   |  |  |                           |  |  |
   |  |  |     padding               |  |  |
   |  |  |   _____________________   |  |  |
   |  |  |  |                     |  |  |  |
   |  |  |  |  content            |  |  |  |
   |  |  |  |_____________________|  |  |  |
   |  |  |___________________________|  |  |
   |  |_________________________________|  |
   |_______________________________________|

            |    content width    |

   |               box width               |

</PRE>

<P> The height and width of the box are given by the sum of the
content width, the padding, the border, and the margin lengths.

<P> The size of the margin, border and padding are set with the <a
href="#margin-properties">margin</a>, <a
href="#padding-properties">padding</a>, and <a
href="#border-properties">border</a> properties, respectively.  

<P>The padding area uses the same background as the element itself
(set with the <a href="./colors.html#background-properties">background
properties </a>). The color and style for the border is set with the
<a href="#border-properties">border properties</a>.  The margins are
always transparent, so the parent element will shine through.

<P>The following diagram defines more precise terminology used to
describe pieces of margin, border, and padding:

<PRE>
                               --------------- <B>&lt;-- top</B>
                                 top margin
                               ---------------
                                 top border
                               ---------------
                                top padding
                               +-------------+ <B>&lt;-- inner top</B>
    |        |        |        |             |         |         |         |
    |--left--|--left--|--left--|-- content --|--right--|--right--|--right--|
    | margin | border | padding|             | padding | border  | margin  |
    |        |        |        |             |         |         |         |
                               +-------------+ <B>&lt;-- inner bottom</B>
    <B>^</B>                          <B>^</B>             <B>^</B>                             <B>^</B>
    <B>left</B>         <B>left inner edge</B>             <B>right inner edge</B>          <B>right</B>
    <B>outer</B>                                                              <B>outer</B>
    <B>edge</B>                        bottom padding                          <B>edge</B>
                               ---------------
                                 bottom border
                               ---------------
                                 bottom margin
                               --------------- <B>&lt;-- bottom</B>
</PRE>


<P> The <EM>left outer edge</EM> is the edge of an element with its
padding, border and margin taken into account. The <EM>left inner
edge</EM> is the edge of the content only, inside any padding, border
or margin. The same holds for the <em>right inner edge</em>.

<P>The <EM>top</EM> is the top of the object including any padding,
border and margin; it is only defined for inline and floating
elements, not for non-floating block-level elements. The <EM>inner
top</EM> is the top of the content, inside any padding, border or
margin. The <EM>bottom</EM> is the bottom of the element, outside any
padding border and margin; it is only defined for inline and floating
elements, not for non-floating block-level elements. The <EM>inner
bottom</EM> is the bottom of the element, inside any padding, border
and margin.

<P> The <EM>width</EM> of an element is the width of the content,
i.e., the distance between left inner edge and right inner edge. The
<EM>height</EM> is the height of the content, i.e., the distance from
inner top to inner bottom.

<div class="example"><p>
The following example shows how margins and padding format a UL
element in HTML with two children. To simplify the diagram there are no
borders. Also, the single-letter "constants" in this example are not
legal CSS2 syntax, but is a convenient way to tie the style sheet
values to the figure.

<PRE>
    &lt;STYLE type="text/css"&gt;
      UL { 
        background: red; 
        margin: A B C D;      
        padding: E F G H;
      }
      LI { 
        color: white;    
        background: blue;     /* so text is white on blue */ 
        margin: a b c d; 
        padding: e f g h;
      }
    &lt;/STYLE&gt;
    ..
    &lt;UL&gt;
      &lt;LI&gt;1st element of list
      &lt;LI&gt;2nd element of list
    &lt;/UL&gt;
</PRE>

<PRE>
   _______________________________________________________
  |                                                       |
  |    A      UL margin (transparent)                     |
  |    _______________________________________________    |
  | D |                                               | B |
  |   |    E   UL padding (red)                       |   |
  |   |    _______________________________________    |   |
  |   | H |                                       | F |   |
  |   |   |    a   LI margin (transparent,        |   |   |
  |   |   |        so red shines through)         |   |   |
  |   |   |    _______________________________    |   |   |
  |   |   | d |                               | b |   |   |
  |   |   |   |    e    LI padding (blue)     |   |   |   |
  |   |   |   |                               |   |   |   |
  |   |   |   | h  1st element of list      f |   |   |   |
  |   |   |   |                               |   |   |   |
  |   |   |   |    g                          |   |   |   |
  |   |   |   |_______________________________|   |   |   |
  |   |   |                                       |   |   |
  |   |   |     max(a, c)                         |   |   | &lt;- note the max
  |   |   |    _______________________________    |   |   |
  |   |   |   |                               |   |   |   |
  |   |   | d |    e    LI padding (blue)     |   |   |   |
  |   |   |   |                               |   |   |   |
  |   |   |   | h  2nd element of list      f |   |   |   |
  |   |   |   |                               |   |   |   |
  |   |   |   |    g                          |   |   |   |
  |   |   |   |_______________________________|   |   |   |
  |   |   |                                       |   |   |
  |   |   |   c    LI margin (transparent,        |   |   |
  |   |   |        so red shines through)         |   |   |
  |   |   |_______________________________________|   |   |
  |   |                                               |   |
  |   |    G                                          |   |
  |   |_______________________________________________|   |
  |                                                       |
  |   C                                                   |
  |_______________________________________________________|
</PRE>

<P> Technically, padding and margin properties are not inherited. But,
as the example shows, the placement of an element is relative to
ancestors and siblings, so these elements' padding and margin
properties have an effect on their children.

<P> If there had been borders in the above example they would have
appeared between the padding and the margins.
</div>


<H3><a name="margin-properties">Margin properties</a></H3>

<P>The margin properties properties set the margin of an element. The
<span class="propinst-margin">'margin'</span> property sets the border
for all four sides while the other margin properties only set their
respective side.

<P>Negative values for margin properties are allowed, but there may be
implementation-specific limits.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-margin-top">
       <span class="index-def" title="'margin-top', definition of">
       'margin-top'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>margin-top</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span> | auto</TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P>This property sets the top margin of an element:

<div class="example"><P>
<PRE>
  H1 { margin-top: 2em }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-margin-right">
       <span class="index-def" title="'margin-right', definition of">
       'margin-right'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>margin-right</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span
class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span class="value-inst-percentage">&lt;percentage&gt;</span></span> | auto</TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>r to parent element's width</TR>
</TABLE>
</DIV>

<P>This property sets the right margin of an element:

<div class="example"><p>
<PRE>
  H1 { margin-right: 12.3% }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-margin-bottom">
       <span class="index-def" title="'margin-bottom', definition of">
       'margin-bottom'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>margin-bottom</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span class="value-inst-percentage">&lt;percentage&gt;</span></span> | auto</TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> This property sets the bottom margin of an element:

<div class="example"><P>
<PRE>
  H1 { margin-bottom: 3px }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-margin-left">
       <span class="index-def" title="'margin-left', definition of">
       'margin-left'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>margin-left</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span> | auto</TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> This property sets the left margin of an element:

<div class="example"><P>
<PRE>
  H1 { margin-left: 2em }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-margin">
       <span class="index-def" title="'margin', definition of">
       'margin'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>margin</TR>
<TR><TH align="right">Value:<TD>[
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span> | auto ]{1,4}</TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> The <span class="propinst-margin">'margin'</span> property is a shorthand
property for setting <span class="propinst-margin-top">'margin-top'</span>, <span
class="propinst-margin-right">'margin-right'</span> <span
class="propinst-margin-bottom">'margin-bottom'</span> and <span
class="propinst-margin-left">'margin-left'</span> at the same place in the style
sheet.

<P> If four length values are specified they apply to top, right,
bottom and left respectively. If there is only one value, it applies
to all sides, if there are two or three, the missing values are taken
from the opposite side.

<div class="example"><P>
<PRE>
  BODY { margin: 2em } /* all margins set to 2em */
  BODY { margin: 1em 2em } /* top &amp; bottom = 1em, right &amp; left = 2em */
  BODY { margin: 1em 2em 3em } /* top=1em, right=2em, bottom=3em, left=2em */
</PRE>

<P> The last rule of the example above is equivalent to the example
below:

<PRE>
  BODY {
    margin-top: 1em;
    margin-right: 2em;
    margin-bottom: 3em;
    margin-left: 2em;        /* copied from opposite side (right) */
  }
</PRE>
</div>

<H3><a name="padding-properties">Padding properties</a></H3> <P> The
padding properties describe how much space to insert between the
border and the content (e.g., text or image). The <span
class="propinst-padding">'padding'</span> property sets the padding
for all four sides while the other padding properties only set their
respective side.

<P>Unlike margin properties, values for padding values cannot be
negative. 

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-padding-top">
       <span class="index-def" title="'padding-top', definition of">
       'padding-top'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>padding-top</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> This property sets the top padding of an element.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-top: 0.3em }
</PRE>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-padding-right">
       <span class="index-def" title="'padding-right', definition of">
       'padding-right'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>padding-right</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> This property sets the right padding of an element.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-right: 10px }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-padding-bottom">
       <span class="index-def" title="'padding-bottom', definition of">
       'padding-bottom'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>padding-bottom</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> This property sets the bottom padding of an element.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-bottom: 2em }
</PRE>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-padding-left">
       <span class="index-def" title="'padding-left', definition of">
       'padding-left'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>padding-left</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P>  This property sets the left padding of an element.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-left: 20% }
</PRE>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-padding">
       <span class="index-def" title="'padding', definition of">
       'padding'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>padding</TR>
<TR><TH align="right">Value:<TD> [
<span class="index-inst"
title="&lt;length&gt;"><span class="value-inst-length">&lt;length&gt;</span></span> | <span class="index-inst"
title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span> ]{1,4}</TR>
<TR><TH align="right">Initial:<TD>0</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>refer to parent element's width</TR>
</TABLE>
</DIV>

<P> The <span class="propinst-padding">'padding'</span> property is a
shorthand property for setting <span
class="propinst-padding-top">'padding-top'</span>, <span
class="propinst-padding-right">'padding-right'</span>, <span
class="propinst-padding-bottom">'padding-bottom'</span>, and <span
class="propinst-padding-left">'padding-left'</span> at the same place in the style
sheet.

<P> If four values are specified they apply to top, right, bottom and
left respectively. If there is only one value, it applies to all
sides, if there are two or three, the missing values are taken from
the opposite side.

<P> The surface of the padding area is set with the <span
class="propinst-background">'background'</span> property:

<div class="example"><P>
<PRE>
  H1 { 
    background: white; 
    padding: 1em 2em;
  } 
</PRE>

<P> The example above sets a '1em' padding vertically (<span
class="propinst-padding-top">'padding-top'</span> and <span
class="propinst-padding-bottom">'padding-bottom'</span>) and a '2em' padding
horizontally (<span class="propinst-padding-right">'padding-right'</span> and <span
class="propinst-padding-left">'padding-left'</span>). The 'em' unit is relative to
the element's font size: '1em' is equal to the size of the font in
use.
</div>

<H3><a name="border-properties">Border properties</a></H3>
<P>The border properties set the borders of an element. Each element
has four borders, one on each side, that are defined by their width,
color and style.

<H4><a name="border-width-defs">Values for <span class="index-def"
title="&lt;border-width&gt;, definition of"><a
name="value-def-border-width"
class="value-def">&lt;border-width&gt;</a></span></H4> <P>The
properties defined in this section refer to the <span
class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span>
value type, whose possible values may be 'thin', 'medium', 'thick', or
a <span class="index-inst" title="&lt;length&gt;"><span
class="value-inst-length">&lt;length&gt;</span></span>.

<P>The interpretation of the first three values depends on the user
agent. The following must hold, however:

<P>'thin' &lt;='medium' &lt;= 'thick'.  

<P>Furthermore, these widths must be constant throughout a document.

<P> Border widths cannot be negative.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-top-width">
       <span class="index-def" title="'border-top-width', definition of">
       'border-top-width'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-top-width</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>medium</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This property sets the width of an element's top border. 

<div class="example"><P>
<PRE>
  H1 { border: solid thick red }
  P  { border: solid thick blue }
</PRE>

<P> In the example above, H1 and P elements will have the same
border width regardless of font size. To achieve relative widths, the
'em' unit can be used:

<PRE>
  H1 { border: solid 0.5em }
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-right-width">
       <span class="index-def" title="'border-right-width', definition of">
       'border-right-width'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-right-width</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>medium</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This property sets the width of an element's right
border. 

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-bottom-width">
       <span class="index-def" title="'border-bottom-width', definition of">
       'border-bottom-width'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-bottom-width</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>medium</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This property sets the width of an element's bottom border.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-left-width">
       <span class="index-def" title="'border-left-width', definition of">
       'border-left-width'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-left-width</TR>
<TR><TH align="right">Value:<TD>
<span class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>medium</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This property sets the width of an element's left border. 

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-width">
       <span class="index-def" title="'border-width', definition of">
       'border-width'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-width</TR>
<TR><TH align="right">Value:<TD> 
<span class="index-inst" title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span> {1,4}</TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>


<P> This property is a shorthand property for setting
<span class="propinst-border-width-top">'border-width-top'</span>, <span class="propinst-border-width-right">'border-width-right'</span>, <span class="propinst-border-width-bottom">'border-width-bottom'</span> and
<span class="propinst-border-width-left">'border-width-left'</span> at
the same place in the style sheet. 

<P> There can be from one to four values, with the following
interpretation:
  <UL>
    <LI>
      one value: all four border widths are set to that value
    <LI>
      two values: top and bottom border widths are set to the first
      value, right and left are set to the second
    <LI>
      three values: top is set to the first, right and left are set to
      the second, bottom is set to the third
    <LI>
      four values: top, right, bottom and left, respectively
  </UL>

<div class="example"><P>
In the examples below, the comments indicate the resulting widths
of the top, right, bottom and left borders:

<PRE>
  H1 { border-width: thin }                   /* thin thin thin thin */
  H1 { border-width: thin thick }             /* thin thick thin thick */
  H1 { border-width: thin thick medium }      /* thin thick medium thin */
  H1 { border-width: thin thick medium none } /* thin thick medium none */
</PRE>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-color">
       <span class="index-def" title="'border-color', definition of">
       'border-color'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-color</TR>
<TR><TH align="right">Value:<TD><span class="index-inst" title="&lt;color&gt;"><span class="value-inst-color">&lt;color&gt;</span></span>{1,4}</TR>
<TR><TH align="right">Initial:<TD>the value of the <span
class="propinst-color">'color'</span> property</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> The <span class="propinst-border-color">'border-color'</span>
property sets the color of the four borders. <span
class="propinst-border-color">'border-color'</span> can have from one
to four values, and the values are set on the different sides as for
<span class="propinst-border-width">'border-width'</span> above.

<P> If no color value is specified, the value of the <span
class="propinst-color">'color'</span> property of the element itself
will take its place:

<div class="example"><P>
<PRE>
  P { 
    color: black; 
    background: white; 
    border: solid;
  }
</PRE>
<P> In the above example, the border will be a solid black line.
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-style">
       <span class="index-def" title="'border-style', definition of">
       'border-style'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-style</TR>
<TR><TH align="right">Value:<TD>none | dotted | dashed | solid |
double | groove | ridge  | inset | outset</TR> 
<TR><TH align="right">Initial:<TD>none</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>


<P> The <span
class="propinst-border-style">'border-style'</span>property sets the
style of the four borders. It can have from one to four values, and
the values are set on the different sides as for <span
class="propinst-border-width">'border-width'</span> above.

<div class="example"><P>
<PRE>
  #xy34 { border-style: solid dotted }
</PRE>
<P> In the above example, the horizontal borders will be 'solid' and
the vertical borders will be 'dotted'.
</div>

<P> Since the initial value of the border styles is 'none', no borders
will be visible unless the border style is set.

<P>
  The border styles mean:
  <DL>
    <DT>
      none
    <DD>
      no border is drawn (regardless of the <span
      class="propinst-border-width">'border-width'</span> property's value)
    <DT>
      dotted
    <DD>
      the border is a dotted line drawn on top of the background of the element
    <DT>
      dashed
    <DD>
      the border is a dashed line drawn on top of the background of the element
    <DT>
      solid
    <DD>
      the border is a solid line
    <DT>
      double
    <DD>
      the border is a double line drawn on top of the background of the element.
      The sum of the two single lines and the space between equals the
value of <span class="propinst-border-width">'border-width'</span>.
    <DT>
      groove
    <DD>
      a 3D groove is drawn in colors based on the value of the <span
class="propinst-color">'color'</span> property.
    <DT>
      ridge
    <DD>
      a 3D ridge is drawn in colors based on the value of the <span
class="propinst-color">'color'</span> property.
    <DT>
      inset
    <DD>
      a 3D inset is drawn in colors based on the value of the <span
class="propinst-color">'color'</span> property.
    <DT>
      outset
    <DD>
      a 3D outset is drawn in colors based on the value of the <span
class="propinst-color">'color'</span> property.
  </DL>

<div class="note"><P>
<em><strong>Note.</strong>
UAs may interpret all of 'dotted', 'dashed', 'double',
'groove', 'ridge', 'inset' and 'outset' as 'solid'.
</em>
</div>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-top">
       <span class="index-def" title="'border-top', definition of">
       'border-top'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-top</TR>
<TR><TH align="right">Value:<TD><span class="index-inst"
title="&lt;border-top-width&gt;"><span
class="value-inst-border-top-width">&lt;border-top-width&gt;</span></span>
|| <span class="index-inst" title="&lt;border-style&gt;"><span
class="value-inst-border-style">&lt;border-style&gt;</span></span> || <span class="index-inst" title="&lt;color&gt;"><span class="value-inst-color">&lt;color&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This is a shorthand property for setting the width, style and
color of an element's top border. The values of <span class="index-def"
title="&lt;border-top-width&gt;, definition of"><a
name="value-def-border-top-width"
class="value-def">&lt;border-top-width&gt;</a></span> are the same as
those of the <span
class="propinst-border-top-width">'border-top-width'</span> property.

<div class="example"><P>
<PRE>
  H1 { border-bottom: thick solid red }
</PRE>

<P> The above rule will set the width, style and color of the border
below the H1 element. Omitted values will be set to their initial
values:
<PRE>
  H1 { border-bottom: thick solid }
</PRE>
<P> Since the color value is omitted in the example above, the border
color will be the same as the 'color' value of the element itself.
</div>

<P> Note that while the <span
class="propinst-border-style">'border-style'</span> property accepts
up to four values, this property only accepts one style value.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-right">
       <span class="index-def" title="'border-right', definition of">
       'border-right'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-right</TR>
<TR><TH align="right">Value:<TD><span class="index-inst"
title="&lt;border-right-width&gt;"><span
class="value-inst-border-right-width">&lt;border-right-width&gt;</span></span>
|| <span class="index-inst" title="&lt;border-style&gt;"><span
class="value-inst-border-style">&lt;border-style&gt;</span></span> || <span class="index-inst" title="&lt;color&gt;"><span class="value-inst-color">&lt;color&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This is a shorthand property for setting the width, style and
color of an element's right border. The values of <span
class="index-def" title="&lt;border-right-width&gt;, definition of"><a
name="value-def-border-right-width"
class="value-def">&lt;border-right-width&gt;</a></span> are the same
as the values of the <span
class="propinst-border-right-width">'border-right-width'</span> property.

<P>Otherwise it is equivalent to the
<span class="propinst-border-top">'border-top'</span>.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border-left">
       <span class="index-def" title="'border-left', definition of">
       'border-left'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border-left</TR>
<TR><TH align="right">Value:<TD><span class="index-inst"
title="&lt;border-left-width&gt;"><span
class="value-inst-border-left-width">&lt;border-left-width&gt;</span></span>
|| <span class="index-inst" title="&lt;border-style&gt;"><span
class="value-inst-border-style">&lt;border-style&gt;</span></span> || <span class="index-inst" title="&lt;color&gt;"><span class="value-inst-color">&lt;color&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> This is a shorthand property for setting the width, style and
color of an element's left border. The values of <span
class="index-def" title="&lt;border-left-width&gt;, definition of"><a
name="value-def-border-left-width"
class="value-def">&lt;border-left-width&gt;</a></span> are the same as
the values of the <span
class="propinst-border-left-width">'border-left-width'</span> property.

<P>Otherwise it is equivalent to the
<span class="propinst-border-top">'border-top'</span>.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-border">
       <span class="index-def" title="'border', definition of">
       'border'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>border</TR>
<TR><TH align="right">Value:<TD><span class="index-inst"
title="&lt;border-width&gt;"><span
class="value-inst-border-width">&lt;border-width&gt;</span></span> ||
<span class="index-inst" title="&lt;border-style&gt;"><span
class="value-inst-border-style">&lt;border-style&gt;</span></span> || <span class="index-inst" title="&lt;color&gt;"><span class="value-inst-color">&lt;color&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>see individual properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> The <span class="propinst-border">'border'</span> property is a
shorthand property for setting the same width, color and style on all
four borders of an element. 

<P> Unlike the shorthand <span class="propinst-margin">'margin'</span>
and <span class="propinst-padding">'padding'</span> properties, the
<span class="propinst-border">'border'</span> property cannot set
different values on the four borders. To do so, one or more of the
other border properties must be used.

<P> Note that while the <span
class="propinst-border-width">'border-width'</span> property accepts
up to four length values, this property only accepts one.


<P>The values of <span class="index-def" title="&lt;border-style&gt;,
definition of"><a name="value-def-border-style"
class="value-def">&lt;border-style&gt;</a></span> are the same as
those of the <span class="propinst-border-style">'border-style'</span>
property.

<div class="example"><P>
For example, the first rule below is
equivalent to the set of four rules shown after it:

<PRE>
  P { border: solid red }
  P {
    border-top: solid red;
    border-right: solid red;
    border-bottom: solid red;
    border-left: solid red
  }
</PRE>
</div>


<P> Since the properties to some extent have overlapping
functionality, the order in which the rules are specified becomes
important. 

<div class="example"><P>
Consider this example:
<PRE>
  BLOCKQUOTE {
    border-color: red;
    border-left: double
    color: black;
  }
</PRE>

<P> In the above example, the color of the left border will be black,
while the other borders are red. This is due to <span
class="propinst-border-left">'border-left'</span>&gt; setting the
width, style and color. Since the color value is not specified on the
<span class="propinst-border-left">'border-left'</span> property, it
will be taken from the <span class="propinst-color">'color'</span>
property. The fact that the <span
class="propinst-color">'color'</span> property is set after the <span
class="propinst-border-left">'border-left'</span> property is not
relevant.
</div>


<H2>The flow</H2>
The <span class="index-def" title="flow, definition of">flow </span>
of elements describes how sibling boxes (i.e., of elements who share
the same parent) are laid out.

<P>Sibling boxes may be laid out horizontally or vertically. Inline
elements generate boxes that are laid out horizontally. Block level
elements generate boxes that are laid out vertically.

<P>In the normal flow, the initial position of each box is calculated
relative to boxes that come before it (ancestor and sibling
boxes). 

<P>All elements that have text content (block or inline) generate
"anonymous" boxes that contain chunks of text. These anonymous boxes
inherit properties (colors, fonts, etc.) from their ancestors. By
default, anonymous boxes are inline, i.e., text is laid out
horizontally. 

<P>Decisions about the construction of anonymous boxes depends on many
factors (language, hyphenation, etc.) and lies outside the 
scope of this specification.

<H3><span class="index-def" title="Block level layout">Block level layout</span></H3>

<P>Block level boxes are laid out one after the other, vertically. Their
horizontal position and vertical separation depends on the
<span class="propinst-margin">'margin'</span> properties. Top and
bottom margins <em>collapse</em>.

<!-- (Horizontal ones do not). -->

<!-- include lists -->

<H4><A NAME="list-item-elements">List-item elements</A></H4>

<!-- INSERT FROSTING LIST STUFF HERE -->
    
<P>Some block elements generate boxes that may be formatted as lists.
Elements with a <span class="propinst-display">'display'</span>
property value of 'list-item' are formatted as other block level
elements, but preceded by a list-item marker. The type of marker and
its placement is determined by the <span
class="propinst-list-style">'list-style'</span> property. 

<div class="example"><P>
For example:

<PRE>
  &lt;STYLE type="text/css"&gt;
    UL         { list-style: outside }
    UL.compact { list-style: inside }
  &lt;/STYLE&gt;
  
  &lt;UL&gt;
    &lt;LI&gt;first list item comes first
    &lt;LI&gt;second list item comes second
  &lt;/UL&gt;

  &lt;UL class=compact&gt;
    &lt;LI&gt;first list item comes first
    &lt;LI&gt;second list item comes second
  &lt;/UL&gt;
</PRE>

<P> The above example may be formatted as:

<PRE>
  * first list item 
    comes first

  * second list item
    comes second


  * first list
  item comes first

  * second list
  item comes second
</PRE>
</div>

<P>In right-to-left text, the markers would have been on the right
side of the box. 

<H3><span class="index-def" title="Inline layout">Inline layout</span></H3>

<P>Inline boxes are laid out one after the other, horizontally, within
a horizontal space defined by the first enclosing block element (see
the section on <a href="flowobj2.html#box-width">box width
calculations</a> for more details). 

<P>When inline boxes do not fit onto a single line, they may be
divided into more boxes. These boxes are then distributed among more
than one line. Their alignment within these lines depends on the <span
class="propinst-text-align">'text-align'</span> property.

<P>Within any given line, the alignment of inline boxes depends on the
<span class="propinst-vertical-alignment">'vertical-alignment'</span>
property. See the section on <a
href="./flowobj2.html#line-height">line height calculations</a> for
details.

<P>Inline boxes are laid out right-to-left or left-to-right depending
on the ?? property.

<div class="example"><P>
Consider the following example:

<PRE>
  &lt;P&gt;Several &lt;EM&gt;emphasized&lt;/EM&gt; words
&lt;STRONG&gt;appear&lt;/STRONG&gt; in this sentence.&lt;/P&gt;
</PRE>

<P>Assume the P element is a block level element (e.g., the default
HTML behavior). In terms of the document tree, P has five children:
<ul>
<li>Anonymous: Several
<li>EM: emphasized
<li>Anonymous: words
<li>STRONG: appear
<li>Anonymous: in this sentence.
</ul>
 
The text content of these five children is divided up into inline
boxes.  The width of the P element (given, for example, by the
user agent) determines how many of the inline boxes will fit on a
single line. If the width of P is sufficient, all text will appear on
a single line. 

<PRE>
  Several <EM>emphasized</EM> words <STRONG>appear</STRONG> in this sentence.
</PRE>

<P>If the total width of the inline boxes exceeds that of the P, the
boxes will be divided up and distributed on several lines. The previous
paragraph might be split as follows:

<PRE>
  Several <EM>emphasized</EM> words 
  <STRONG>appear</STRONG> in this sentence.
</PRE>
</div>


<P> If an inline element has margins, borders, padding or text
decorations attached, these do not affect where the inline box is
broken (e.g., borders may be continued over several lines). 

<div class="example"><P>
Consider the following paragraph:

<PRE>
  &lt;P&gt;Several &lt;EM&gt;emphasized words&lt;/EM&gt; appear here.&lt;/P&gt;
</PRE>

<P>Depending on the width of the P, the boxes may be distributed as
follows: 

<PRE>
           ----------
  Several |<EM>emphasized</EM>
           ----------
  -----
  <EM>words</EM>| appear here.
  -----
</PRE>

<P> The "figure" in this example is slightly distorted due to the use
of ASCII graphics.  See the section <A
HREF="./flowobj2.html#line-height">line height calcuations</a> for a
description of how to calculate the height of lines.
</div>
         
<H3><a name="relative-positioning">Relative positioning</a></H3>  
Once a block level or inline box has been assigned its position
according to the flow model, it may be shifted relative to this
position. This is called <span class="index-def" title="relative
positioning">relative positioning</span>. Offsetting a box in
this way has no effect on sibling boxes; the sibling boxes are not
"reflowed" as a result of the offset. This implies that relative
positioning allows box overlap.


<p>Relatively positioned elements keep their natural shape, including
line breaks and the space originally reserved for them remains.
Dynamic movement of relatively positioned elements can provide
animation effects in scripting environments (see the section on <a
href=./flowobj2.html#dynamic-positioning">dynamic positioning</a> for
details.</p>

<P>Elements may be relatively positioned by setting the <span
class="propinst-position">'position'</span> property, described
below. 

<p>Relative positioning could also be used as a general form of super-
and subscripting except that line height is not automatically
adjusted to take the positioning into consideration. See the
description of <a href="flowobj2.html#line-height">line height
calculations</a> for more information.

<P>Examples of relative positioning are provided below in the
section on <a href="#absolute-positioning">absolute positioning</a>.

<H3>Controlling layout behavior</H3> 

<P>An element of the object language is not inherently inline or block
level (except, perhaps in the minds of the language's designers). CSS
does not assume any default layout behavior for elements. The layout
behavior of every element is determined by the value of its <span
class="propinst-display">'display'</span> property.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-display">
       <span class="index-def" title="'display', definition of">
       'display'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>display</TR>
<TR><TH align="right">Value:<TD>block | inline | list-item | none</TR>
<TR><TH align="right">Initial:<TD>block</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> An element with a <span class="propinst-display">'display'</span>
value of 'block' generates a box that is laid out vertically with
respect to the element's prior sibling (e.g., the HTML elements H1 and P).

<P>A value of 'list-item' is similar to 'block' except that a
list-item marker is added. In HTML, LI will typically have this value.

<P> An element with a <span class="propinst-display">'display'</span>
value of 'inline' generates a box that is laid out horizontally with
respect to the element's prior sibling. The box is dimensioned
according to the formatted size of the content. If the content is
text, it may span several lines, and there will be a box on each
line. The <a href="#margin-properties">margin</a>, <a
href="#border-properties">border</a>, and <a
href="#padding-properties">padding</a> properties apply to 'inline'
elements, but will not have any effect at the line breaks.

<P> A value of 'none' turns off the display of the element, including
children elements and the surrounding box.

<div class="example"><P>
<PRE>
  P { display: block }
  EM { display: inline }
  LI { display: list-item }
  IMG { display: none }
</PRE>
<P> The last rule turns off the display of images.  

<P> The initial value of <span
class="propinst-display">'display'</span> is 'block', but a user agent
will typically have default values for all object language elements.

<div class="note"><P>
<em><strong>Note.</strong>
UAs may ignore <span class="propinst-display">'display'</span> and use
only the UA's default values. See the section on <a
href="conformance.html">conformance</a> for details.
</em>
</div>

<div class="note"><P>
<em><strong>Note.</strong> For many object languages, and in
particular for HTML, user agents may provide a default style sheet
that implements the layout behavior expected of the language's
elements. Please consult the <a href="sample.html">sample style
sheet</a> in the appendix for information about the default layout
behavior of HTML 2.0.
</em>
</div>

<H2>Outside the flow</H2>
At times, authors may want to control the positioning of a box in a
way that cannot be done within the flow model. There are three ways to
generate a box that does not adhere to the flow model:

<ul>
<li>Create a <a href="#floats">floating box</a>.
<li>Use <a href="#absolute-positioning">absolute positioning</a>.
<li>Set the value of the <span
class="propinst-display">'display'</span> property to 'none' (in which
case, the element does not generate a box at all).
</ul>

<P>The primary difference between a floating box and one that is
absolutely positioned is that absolute positioning has no impact on
the flow of later siblings; later siblings are laid out as though
their absolutely positioned sister did not exist at all. Later
siblings of floating objects flow with respect to the final
position of the floating element.

<P>Floating and absolutely positioned boxes do affect the flow of
children elements: children flow relative to their parent unless
positioned absolutely themselves.

<H3><a name="floats">Floats</a></H3>
<P>In CSS, it is possible to float boxes to the left or right of where
they would normally appear in the flow. For instance, authors may
float paragraph boxes in order to place them side-by-side.

<P>A floated box is moved to the left or right until the margin,
padding, or border of a nother block-level element is reached. 

<P>User agents take the boundaries of floated boxes into account when
flowing subsequent boxes, i.e., boxes that follow flow around the
floated box. The margins, borders and padding of the floated box are
honored, and the margins never collapse with the margins of adjacent
elements.

<P>To float a box, set the <span class="propinst-float">'float'</span>
property for the element generating the box.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-float">
       <span class="index-def" title="'float', definition of">
       'float'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>float</TR>
<TR><TH align="right">Value:<TD>left | right | none</TR>
<TR><TH align="right">Initial:<TD>none</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> With the value 'none', the generated box will be displayed where
it appears in the text. With a value of 'left' ('right') the element
will be moved to the left ('right') and the text will wrap on the
right (left) side of the element.  With a value of 'left' or 'right',
the element is treated as block-level (and thus the <span
class="propinst-display">'display'</span> property is ignored). 

<P> This property is most often used with inline images, but also
applies to text elements.

<div class="example"><P>
Example:
<PRE>
  IMG.icon { 
    float: left;
    margin-left: 0;
  }
</PRE>

<P> The above example will place all IMG elements with 'class=icon'
along the left side of the parent element.
</div>


<div class="example"><P>
The following HTML source:

<PRE>
  &lt;STYLE type="text/css"&gt;
    IMG { float: left }
    BODY, P, IMG { margin: 2em }
  &lt;/STYLE&gt;

  &lt;BODY&gt;
    &lt;P&gt;
      &lt;IMG src=img.gif&gt;
      Some sample text that has no other...
  &lt;/BODY&gt;
</PRE>

<P>could be formatted as:

<PRE>
   ________________________________________
  |
  |          max(BODY margin, P margin)
  |          ______________________________
  |    |    |             Some sample text
  | B  | P  | IMG margins that has no other
  | O  |    |    _____    purpose than to 
  | D  | m  |   |     |   show how floating
  | Y  | a  |   | IMG |   elements are moved
  |    | r  |   |     |   to the side of the
  | m  | g  |   |_____|   parent element
  | a  | i  |             while honoring
  | r  | n  |             margins, borders
  | g  |    |             and padding. Note
  | i  |    |how adjacent vertical margins  
  | n  |    |are collapsed between non-
  |    |    |floating block-level elements.
</PRE>

<P> Note that the margin of the P elements enclose the floating
IMG element. 
</div>

<P><strong>Controlling floats</strong> 

<P>The <span
class="propinst-clear">'clear'</span> property specifies whether an
element will allow floating elements on its sides.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-clear">
       <span class="index-def" title="'clear', definition of">
       'clear'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>clear</TR>
<TR><TH align="right">Value:<TD>none | left | right | both</TR>
<TR><TH align="right">Initial:<TD>none</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P>When set for an element E, this property indicates which sides of E
may not be adjacent to floating elements. A value of 'left' means that
E may not be positioned next to any floating elements to its left; E
will be moved to the next available line below. A value of 'none'
means that E may be placed next to floating objects to the left or right.
A value of 'both' means that E may not be placed next to floating
objects on either side.

<div class="example"><P>
The following style rule means that no H1 element may have a floating
element to its left. All H1 elements will be positioned at the current
left margin. 

<PRE>
  H1 { clear: left }
</PRE>
</div>

<P>Consult the section on <a
href="flowobj2.html#floating-constraints">floating constraints for
more information about controlling floats.

<H3><a name="absolute-positioning">Absolute positioning</a></H3>
<p>Elements that are positioned with respect to a coordinate system
rather than the position of another box are said to be <span
class="index-def" title="absolute positioning"><em>absolutely
positioned</em></span>.

<P>An absolutely positioned element's position does not depend on the
dimensions or position of any other element. However, it does affect
the position of child elements who flow normally within the bounds of
the absolute element.

<P>The contents of an absolutely positioned element do not flow around
any other elements. They may or may not obscure the contents of
another element, depending on the <a href="#z-order">z-order</a> of
the overlapping elements (described below).

<P>The <span class="propinst-position">'position'</span> property
specifies whether an element will be absolutely or relatively
positioned.

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-position">
       <span class="index-def" title="'position', definition of">
       'position'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>position</TR>
<TR><TH align="right">Value:<TD>absolute | relative | static</TR>
<TR><TH align="right">Initial:<TD>static</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P>The values of this property have the following meanings:

<ul>
<li>'relative': The box generated for this element will first be
positioned according to the normal flow, then offset relative to this
position according to the span class="propinst-left">'left'</span> and
<span class="propinst-top">'top'</span> properties.</p>

<li>'absolute': The box generated for this element will have its
upper-left hand corner positioned at the coordinates specified by the <span
class="propinst-left">'left'</span> and <span
class="propinst-top">'top'</span> properties, measured from the origin
of the element's inherited coordinate system (see below).

<p>Absolutely positioned elements act like block level elements, but
since they do not belong to the normal flow, they following properties
do not apply to them: <span class="propinst-float">'float'</span>,
<span class="propinst-clear">'clear'</span>, and all the <a
href="#margin-properties">margin properties</a>.

<P>For information about the width and heigth of absolutely positioned
elements, please consult the sections on <a
href="flowobj2.html#box-width">box width calculations</a> and 
<a href="flowobj2.html#box-height">box height calculations</a>
respectively.  

<li>'static': Static boxes belong to the normal flow (i.e., setting
the  <span class="propinst-position">'position'</span> property to
'static' is the same as not setting it). </p>
</ul>

<P>Relatively and absolutely positioned elements establish a new
coordinate system that is inherited by child elements. Statically
positioned elements do not.

<P>The origin of the default coordinate system is at the
upper-left-hand corner of the canvas for left-to-right languages and
the upper-right-hand corner for right-to-left languages.

<div class="note"><P>
<em><strong>Note.</strong>
The 'static' value causes some user agents to
ignore the <span class="propinst-left">'left'</span> and <span
class="propinst-top">'top'</span> properties. To ensure that values of
<span class="propinst-left">'left'</span> and <span
class="propinst-top">'top'</span> are taken into account, you should
explicitly set the value of the <span
class="propinst-position">'position'</span> property to 'relative'.
</em>
</div>

<H2>Comparison of normal, relative, floating, and absolute positioning</H3>
<P>To illustrate the relationship between normal flow, relative
positioning, floats, and absolute positioning, we provide a series of
examples in the following sections based on the following HTML
fragment:

<p>
<tt>&lt;BODY&GT;<br>
&lt;P&gt;Beginning of body contents.<br>
&lt;SPAN id=outer&gt; Start of outer contents.<br>
&lt;SPAN id=inner&gt; Inner contents.&lt;/SPAN&GT;<br>
End of outer contents.&lt;/SPAN&GT;<br>
End of body contents.<br>
&lt;/P&GT;<br>
&lt;/BODY&GT;</tt></p>

<p>The final positioning of the <em>outer</em> and <em>inner</em>
spans will vary in each example. In each illustration, the numbers to
the left of the illustration indicate the normal position of the
double-spaced lines.</p>

<p><strong>Normal flow</strong>

<p>Consider the following CSS declarations for <em>outer</em> and
<em>inner</em> that don't alter the normal flow of elements:</p>

<p>
<tt>#outer {color: red;}<br>
#inner {color: blue;}</tt></p>

<p>This results in something like the following:</p>

<pre>
 +----------document window----------+(0,400)
 |                                   |
1|Beginning of body contents. <font color="#FF0000">Start</font>  |
 |                                   |
2|<font color="#FF0000">of outer contents.</font> <font
color="#0000FF">Inner contents</font>  |
 |                                   |
3|<font color="#FF0000">End of outer contents.</font> End of body |
 |                                   |
4|contents.                          |
 |                                   |
5|                                   |
 |                                   |
6|                                   |
 |                                   |
7|                                   |
 |                                   |
 |                                   |
 +-----------------------------------+(400,400)
 (400,0)
</tt></pre>

<p><strong>Relative positioning</strong>

<P>To see the effect of relative positioning, consider the following CSS rules: 

<p><tt>BODY {line-height: 200%}<br>
#outer {position: relative; top: -12px; color: red;}<br>
#inner {position: relative; top: 12px; color: blue;}</tt></p>

<p>First, the <em>outer</em> text is flowed into its "normal" position and
dimensions at the end of line 1. Then, the entire box (distributed
over three lines) is shifted upwards by 12px.

<P>The contents of <em>inner</em>, as a child of <em>outer</em>, would normally flow
immediately after the words "of outer contents" (on line
1.5). However, the <em>inner</em> contents are themselves offset relative to
the <em>outer</em> contents by 12px downwards, back to their original
position on line 2.

<P>Note that the content following <em>outer</em> is not affected by the
relative positioning of <em>outer</em>. 

<pre><tt> +----------document window----------+
 |                            </tt><font color="#FF0000"><tt>Start</tt></font><tt>  |
1|Beginning of body contents.        |
 |</tt><font color="#FF0000"><tt>of outer contents.</tt></font><tt>                 |
2|                   </tt><font color="#0000FF"><tt>Inner contents.</tt></font><tt> |
 |</tt><font color="#FF0000"><tt>End of outer contents.</tt></font><tt>             |
3|                       End of body |
 |                                   |
4|contents.                          |
 |                                   |
5|                                   |
 |                                   |
6|                                   |
 |                                   |
7|                                   |
 |                                   |
 |                                   |
 +-----------------------------------+</tt></pre>

<P>Note also that if the relative positioning of <em>outer</em> were -24px, the
text of <em>outer</em> and the body text would have overlapped.

<p><strong>Floating a box</strong>

<P>Now consider the effect of floating the <em>inner</em> text to the right by
means of the following rules:

<p>
<tt>
#outer {color: red;}<br>
#inner {float: right; width: 130px; color: blue;}
</tt></p>

<P>First, the <em>inner</em> box (whose width has been set explicitly) is
floated to the right margin. The text that follows flows in the space
left by the <em>inner</em> box, and respects the new right margin imposed by
the left border of <em>inner</em>.

<pre>(0,0)
 +----------document window----------+(0,400)
 |                                   |
1|Beginning of body contents. <font color="#FF0000">Start</font>  |
 |                                   |
2|<font color="#FF0000">of outer contents. End</font>+-----------+|
 |                      |           ||
3|<font color="#FF0000">of outer contents. </font>End|<font
color="#0000FF">Inner</font>      ||
 |                      |           ||
4|of body contents.     |<font color="#0000FF">contents.</font>  ||
 |                      +-----------+|
5|                                   |
 |                                   |
6|                                   |
 |                                   |
7|                                   |
 |                                   |
 |                                   |
 +-----------------------------------+
</pre>

<P>To show the effect of the <span
class="propinst-clear">'clear'</span> property, we add a <em>sibling</em>
element to the example:

<p>
<tt>&lt;BODY&GT;<br>
&lt;P&gt;Beginning of body contents.<br>
&lt;SPAN id=outer&gt; Start of outer contents.<br>
&lt;SPAN id=inner&gt; Inner contents.&lt;/SPAN&GT;<br>
&lt;SPAN id=sibling&gt; Sibling contents.&lt;/SPAN&GT;<br>
End of outer contents.&lt;/SPAN&GT;<br>
End of body contents.<br>
&lt;/P&GT;<br>
&lt;/BODY&GT;</tt></p>

<P>The following rules:

<p>
<tt>
#inner {float: right; width: 130px; color: blue;}<BR>
#sibling {color: red;}<br>
</tt></p>

<P>cause the <em>inner</em> box to float to the right and the <em>sibling</em> box to
flow in the available space:

<pre>(0,0)
 +----------document window----------+(0,400)
 |                                   |
1|Beginning of body contents. Start  |
 |                                   |
2|of outer contents.    <font color="#FF0000"></font>+-----------+|
 |                      |           ||
3|<font color="#FF0000">Sibling contents. </font>End |<font color="#0000FF">Inner</font>      ||
 |                      |           ||
4|of outer contents. End|<font color="#0000FF">contents.</font>  ||
 |                      +-----------+|
5|of body contents.                  |
 |                                   |
6|                                   |
 |                                   |
7|                                   |
 |                                   |
 |                                   |
 +-----------------------------------+
</pre>

<P>However, if the <span class="propinst-clear">'clear'</span>
property on the <em>sibling</em> box is set to 'right' (i.e., the <em>sibling</em> box
will not accept being positioned next to floating objects to its
right), the <em>sibling</em> box flows on the next available line below:

<p>
<tt>
#inner {float: right; width: 130px; color: blue;}<BR>
#sibling {clear: right; color: red;}<br>
</tt></p>


<pre>(0,0)
 +----------document window----------+(0,400)
 |                                   |
1|Beginning of body contents. Start  |
 |                                   |
2|of outer contents.    +-----------+|
 |                      |           ||
3|                      |<font color="#0000FF">Inner</font>      ||
 |                      |           ||
4|                      |<font color="#0000FF">contents.</font>  ||
 |                      +-----------+|
5|<font color="#FF0000">Sibling contents.</font> End of outer     |
 |                                   |
6|contents. End of body contents.    |
 |                                   |
7|                                   |
 |                                   |
 |                                   |
 +-----------------------------------+
</pre>

<p><strong>Absolute positioning</strong>

<p>Finally, we consider the effect of absolute positioning on
elements. Consider the following CSS declarations for <em>outer</em> and
<em>inner</em>:</p>

<p><tt>
#outer {position: absolute; top: 200px; left: 200px; width:
200px; color: red;}<br>
#inner {color: blue;}</tt></p>

<p>which causes the <em>outer</em> box to be positioned 200px
from the top and left of the origin (here 0,0). The child element of
<em>outer</em> flows with respect to its parent.</P>

<pre>(0,0)
 +----------document window----------+(400,0)
1|Beginning of body contents. End of |
 |                                   |
2|body contents.                     |
 |                                   |
3|                                   |
 |                                   |
4|           (200, 200)              |
 |                +-----------------+|
5|                |<font color="#FF0000">Start of outer</font>   ||
 |                |<font color="#FF0000">contents.</font> <font
color="#0000FF">Inner</font>  ||
6|                |<font color="#0000FF">contents.</font> <font
color="#FF0000">End of</font> ||
 |                |<font color="#FF0000">outer contents.</font>  ||
7|                +-----------------+|
 |                                   |
 |                                   |
 +-----------------------------------+(400,400)
 (0, 400)</pre>

<P>Note that because <em>outer</em> has been absolutely positioned, it
establishes a new origin (at 200, 200) for any absolutely positioned
children (none in this example).

<p>Recall that absolutely positioned elements inherit their coordinate
system. The following example demonstrates an absolutely positioned element
that is a child of a relatively positioned element. Although the
<em>outer</em> box is not offset, setting its <span
class="propinst-position">'position'</span> property to 'relative'
causes the origin of the box (just below the "@" in the illustration)
to serve as the origin of the coordinate system inherited by its children.

<p><tt>#outer {position: relative; color: red;}<br>
#inner {position: absolute; top: 200px; left: -100px; height:
130px; width: 130px; color: blue;}</tt></p>

<p>This results in something like the following:</p>

<pre><tt>(0,0)
 +----------document window---@------+(0,400)
1|Beginning of body contents. </tt><font color="#FF0000"><tt>Start</tt></font><tt>  |
 |                                   |
2|</tt><font color="#FF0000"><tt>of outer contents. End of outer</tt></font><tt>    |
 |                                   |
3|</tt><font color="#FF0000"><tt>contents.</tt></font><tt> End of body contents.    |
 |                                   |
4|                                   |
 |            (@+200,@-100)          |
5|                  +----------+     |
 |                  |</tt><font color="#0000FF"><tt>Inner</tt></font><tt>     |     |
6|                  |</tt><font color="#0000FF"><tt>contents.</tt></font><tt> |     |
 |                  |          |     |
7|                  |          |     |
 |                  +----------+     |
 |                                   |
 +-----------------------------------+(400,400)
 (400,0)</tt></pre>

<P>Recall that statically positioning an element is equivalent to
using the <span class="propinst-position">'position'</span> property
to put an element back in the normal flow. Statically positioned
elements do not establish a new coordinate system for their
children. Thus, the following rules:

<p><tt>
#outer {position: static; color: red;}<br>
#inner {position: absolute; top: 200px; left: -100px; height:
130px; width: 130px; color: blue;}</tt></p>

<P>are equivalent to:
<p><tt>
#outer {color: red;}<br>
#inner {position: absolute; top: 200px; left: -100px; height:
130px; width: 130px; color: blue;}</tt></p>

<P>and cause the <em>inner</em> box to be positioned with respect to
the global origin (0,0) as follows:

<pre>
 (0,0)
 +----------document window----------+(0,400)
1|Beginning of body contents. <font color="#FF0000">Start</font>  |
 |                                   |
2|<font color="#FF0000">of outer contents. End of outer</font>    |
 |                                   |
3|<font color="#FF0000">contents.</font> End of body contents.    |
 |                                   |
4|                                   |
 |   (30, 200)                       |
5|------+                            |
 |<font color="#0000FF">r</font>     |                            |
6|<font color="#0000FF">ents.</font> |                            |
 |      |                            |
7|      |                            |
 |------+                            |
 |                                   |
 +-----------------------------------+(400,400)
 (400,0)
</pre>


<P>Relative and absolute positioning may be used to implement change
bars, as shown in the following example. We use a value of 'auto' for
the value of the <span class="propinst-top">'top'</span> property,
which results in the element being placed at the &quot;current&quot;
location in the document window, just as if the element were being
flowed into that space. The following HTML text:</p>

<pre>
&lt;P style=&quot;position: relative; margin-right: 10px; left: 10px;&quot;&gt;
I used two red hyphens to serve as a change bar. They
will &quot;float&quot; to the left of the line containing THIS
&lt;SPAN style=&quot;position: absolute; top: auto; left: 0px; color: red;&quot;&gt;--&lt;/SPAN&gt;
word.&lt;/P&gt;</pre>

<p>might result in something like:</p>

<pre>
+----------document window----------+
|   I used two red hyphens to serve |
|   as a change bar. They will      |
|   &quot;float&quot; to the left of the line |
|<font color="#FF0000">--</font> containing THIS word.           |
|                                   |
|                                   |
|                                   |
|                                   |
+-----------------------------------+
</pre>


<H2><a name="z-order">Z-order: Layered presentation</a></H2>
CSS allows authors to specify the position of an element in three
dimensions. The <span class="index-def" title="stack level"><em>stack
level</em></span> of an element refers to its position above or below
other elements. The stack level is particularly relevant to elements
that overlap visually. 

<H3>Calculating the stack level</H3>
<P>In the following sections, the expression "in front of" means
closer to the user as the user faces the screen.

<P>The stack level of an element may be determined in two ways:

<ul>
<li>By an element's place in the document tree (i.e., with repsect to
parent and sibling elements). Elements are stacked in the order they
appear in the documen tree. Thus, an element is stacked in
front of its parent and "older" siblings (i.e., those to the left of
the element in the document tree) and behind its children and later
siblings. 
<li>Explicitly, via the <span
class="propinst-z-index">'z-index'</span> property.
</ul>

<DIV class="propdef">
<H4 class=propname>
    <a name="propdef-z-index">
       <span class="index-def" title="'z-index', definition of">
       'z-index'</span></a></H4>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>z-index</TR>
<TR><TH align="right">Value:<TD>auto | <span class="index-inst" title="&lt;integer&gt;"><span class="value-inst-integer">&lt;integer&gt;</span></span></TR>
<TR><TH align="right">Initial:<TD>auto</TR>
<TR><TH align="right">Applies to:<TD>positionable elements</TR>
<TR><TH align="right">Inherited:<TD>no</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<p>The <span class="propinst-z-index">'z-index'</span> property is
used to specify the stacking order of positionable elements (i.e.,
element's whose <span class="propinst-position">'position'</span>
property has a value of 'absolute' or 'relative').

<P>The default ('auto') behavior is to stack elements back-to-front
in the order they appear in the document tree.

<P>An integer value for <span
class="propinst-z-index">'z-index'</span> specifies stacking order
relative to its positionable sibling and parent elements:</p>

<ul>
    <li>Sibling elements are stacked bottom-to-top in order of
    increasing <span class="propinst-z-index">'z-index'</span>
    value. Sibling elements with identical <span
    class="propinst-z-index">'z-index'</span> values have unspecified
    relative stacking order.</P>

    <li>Elements that have negative <span
    class="propinst-z-index">'z-index'</span> values are stacked below
    their parent element and elements with positive <span
    class="propinst-z-index">'z-index'</span> values are stacked behind
    their parent element.  In other words, each positionable element
    defines a positioning context for z-order in which their own <span
    class="propinst-z-index">'z-index'</span> is 0.</p>

   <li>A <span class="propinst-z-index">'z-index'</span> value of 0 is
       equivalent to a value of 'auto'.
</ul>

<p>The relative z-order of two elements that are neither siblings
nor parent/child can be determined by evaluation of the above
rules for both elements' ancestors. </p>

<P>By default, a positioned element will be placed just above (in
z-space) its parent in the document tree.

<P>It is not possible to position an element behind a grandparent.

<!--
    - Position relative to cousins (see 3.6 bullets)

    - The same algorithm applies to absolutely positioned elements, but
      who is the parent in this case?
-->

<div class="example"><P>
<P>In the following example, the order of the elements, listed
back-to-front is:</p>

<ul>
    <li>image</li>
    <li>text2</li>
    <li>text1</li>
</ul>

<pre>&lt;STYLE type=&quot;text/css&quot;&gt;
&lt;!--
.pile { position: absolute; left: 2in; top: 2in; width: 3in; height: 3in; }
--&gt;

&lt;IMG src=&quot;butterfly.gif&quot; class=&quot;pile&quot; id=&quot;image&quot; style=&quot;z-index: 1&quot;&gt;

&lt;DIV class=&quot;pile&quot; id=&quot;text1&quot; style=&quot;z-index: 3&quot;&gt;
   This text will overlay the butterfly image.
&lt;/DIV&gt;

&lt;DIV class=&quot;pile&quot; id=&quot;text2&quot; style=&quot;z-index: 2&quot;&gt;
   This text will underlay text1, but overlay the butterfly image
&lt;/DIV&gt;</pre>
</div>


<p>The previous example demonstrates the notion of transparency. The
default behavior of an element is to allow elements below it to be
visible through transparent areas in its content. In the example, each
element transparently overlays the elements below it. This behavior
can be overridden by utilizing one of the existing background-related
properties like <span
class="propinst-background">'background'</span>.</p>
</BODY>
</HTML>
