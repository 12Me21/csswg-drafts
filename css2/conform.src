<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: conform.src,v 1.16 1997-10-03 20:40:39 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Definitions and document conventions</TITLE>
<LINK rel="next" href="syndata.html">
<LINK rel="previous" href="intro.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Definitions and document conventions</H1>
<H2><a name="definitions">Definitions</a></H2>
<H3><span class="index-def" title="object language">Object language</span></H3>
Style sheets specify the presentation of a document written in another
computer language (such as HTML) which, in this specification, is
referred to as the object language.

<H3><span class="index-def" title="element">Element</span></H3>
The primary syntactic constructs of the object language are called
elements (a term owed to SGML). Most CSS style sheet rules refer to
these elements of the object language. Examples of elements in HTML
include "P" (for structuring paragraphs), "TABLE" (for creating
tables), "OL" (for creating ordered lists), etc. 


<H3><a name="doctree">Document tree</a></H3>

<P>When a document written in the object language is parsed by a user
agent, the result is a <span class="index-def" title="document
	tree">document tree structure</span>.

<div class="example"><P>
For example, the following HTML document:
<PRE>
   &lt;HTML&gt;   
   &lt;TITLE&gt;My home page&lt;/TITLE&gt;
   &lt;BODY&gt;
   &lt;H1&gt;My home page&lt;/H1&gt;
   &lt;P&gt;Welcome to my home page! Let me tell you about my favorite
		composers:
   &lt;UL&gt;
   &lt;LI&gt; Elvis Costello
   &lt;LI&gt; Johannes Brahms
   &lt;LI&gt; Georges Brassens
   &lt;/UL&gt;
   &lt;/BODY&gt;
   &lt;/HTML&gt;
</PRE>

<P>results in the following tree:</P>

<IMG src="images/doctree.gif" alt="Sample document tree">

<P>Notice that although the source program does not explicitly refer
to the HEAD element, it is inferred during parsing and becomes part of
the document tree.
</div>

<!--
<P>Notice in the previous example that the tree illustration does not
refer to the text this program: the title text, the paragraph text, and
the list item text. 
-->

<P>The <span class="index-def" title="root element"><em>root
element</em></span> of a document is the element at the top of the
document tree.

<H3><span class="index-def" title="inheritance">Inheritance</span></H3>

<P>Elements inherit some property values from their ancestors in the
document tree. 

<div class="example"><P>
Suppose there is an H1 element with an emphasized element inside:

<PRE>
  &lt;H1&gt;The headline &lt;EM&gt;is&lt;/EM&gt; important!&lt;/H1&gt;
</PRE>

<P> If no color has been assigned to the EM element, the emphasized
"is" will inherit the color of the parent element, i.e., it will also
appear in blue.  
</div>

<P>Other style properties are likewise inherited, e.g., <span
class="propinst-font-family">'font-family'</span> and <span
class="propinst-font-size">'font-size'</span>.


<P> To set a "default" style property for a document, one can set the
property on the root of the document tree. In HTML, the HTML or BODY
elements can serve this function. This will work even if the author
omits the BODY tag in the HTML source since the HTML parser will
infer the missing tag.

<div class="example"><P> 

For example, the <span class="propinst-color">'color'</span> property
on the BODY element is inherited by all descendents of the BODY
element:

<PRE>
  BODY { 
    color: black;
    background: url(texture.gif) white;
  }
</PRE>

<P> In this example, all descendents of the BODY element inherit the
<span class="propinst-color">'color'</span> property.
</div>

<P> Not all style properties are inherited. For example, the <span
class="propinst-background">'background'</span> property is not
inherited. However, by default, when an element has no explicit
background, its parent's background shines through. 

Thus, in the example above, the <span
class="propinst-background">'background'</span> property on the BODY
element, although not inherited, establishes the background of the
entire document. The background will be white if the image is not
available (see the section on <a href="./colors.html#backgrounds">
backgrounds</a> for more information).

<P>Each property definition indicates whether the property is
inherited by child elements.

<P>For all inherited CSS2 properties, if the value is specified as a
percentage, child elements inherit the resultant value, not the
percentage value.

<H3><span class="index-def" title="user agent|UA">User
agent</span> (or UA)</H3>

<P>Any agent that interprets a document written in the object
language and associated style sheets by applying the terms of this
specification. A user agent may display a document, read it aloud,
cause it to be printed, convert it, etc.  

<H3><span class="index-def" title="conformance">Conforming user
agent</span></H3>

<p><em> This section only defines <a
name="conformance">conformance</a> with the CSS2 specification. There
may be other levels of CSS in the future that may require a UA to
implement a different set of features in order to conform.</em></P>


<p>A user agent that elects to implement a topic (e.g., fonts,
colors, aural style sheets, etc.) covered by this specification must
adhere to all pertinent sections of the specification in order to be
considered to conform to CSS2 for that topic. In such cases, a user
agent may claim to conform to part of the CSS2 specification.</P>

<p>A user agent that elects to implement all topics covered by this
specification and that does so in accordance with the specification
may claim to conform to all of CSS2. The inability of a user agent to
implement a specific topic due to the limitations of a particular
device (e.g., a user agent cannot render colors on a monochrome
monitor or a black and white page) does not imply non-conformance. </P>

<p>In addition to the previous conditions, a user agent that uses
CSS2 <strong>to display</strong> documents conforms to the CSS2
specification if:

  <UL>
    <LI> it attempts to retrieve all referenced style sheets and parse them
    according to this specification.

    <LI> it sorts the declarations according to the <a
	    href="./cascade.html#cascade-order">cascade order</a>.
  </UL>


<p>A user agent that <strong>outputs</strong> CSS2 style sheets
conforms to the CSS2 specification if it outputs valid CSS2 style
sheets.</P>

<p>A user agent that uses CSS2 to display documents <EM>and</EM>
outputs CSS2 style sheets conforms to the CSS2 specification if it
meets both sets of conformance requirements.</P>

<p>This specification also recommends, but doesn't require, that a UA
observe the following rules (which refer to functionality, not user
interface):

  <UL>
    <LI> allow the reader to specify personal style sheets
    <LI> allow individual style sheets to be turned on and off
    <LI> approximate style sheet values even if it can't implement
		      them exactly according to the specification.
  </UL>

<P>Different user interface paradigms may have their own constraints:
a VR browser may rescale the document based on its "distance" from the
user.</P>

<P> UAs may offer readers additional choices on presentation. For
example, the UA may provide options for readers with visual
impairments or may provide the choice to disable blinking.</P>

<H3><span class="index-def" title="default style sheet">Default style
			    sheet</span></H3>

<P>When a document has no associated style sheets, user agents apply
rules from their default style sheet for presenting the document.  A
user agent's default style sheet generally presents elements of the
object language in ways that satisfy the expectations that most people
have (e.g., for visual browsers, the EM element in HTML is presented
using an italic font). The default style sheet is considered along
with author and user style sheets when determining how rules <a
href="cascade.html">cascade</a>.

<P>User agents that don't actually use style sheets to specify default
rules must behave as if they did.

<H3><span class="index-def" title="visual rendering model">Visual
rendering model</span></H3> The <a href="./flowobj.html">visual
rendering model</a> describes how user agents should format a stream
of elements.

<H3><span class="index-def" title="canvas">Canvas</span></H3> 

<P> The canvas is the part of a visual user agent's drawing surface
onto which documents are rendered. Users see the canvas through a user
agent's <span class="index-def"
title="viewport"><em>viewport</em></span>, a window or other viewing
area on the screen. The canvas may be larger or smaller than the
viewport. Typically, when the canvas is larger than the viewport, the
user agent will offer the user a scrolling mechanism to bring hidden
parts into view.

<P>The canvas is generally as long as the document flowed onto it, but
has a fixed width, set by the user agent. The width affects formatting
according to the <a href="./flowobj.html#flow-model">visual flow
model</a> The user agent may change the dimensions of the canvas when
the viewport is resized.

<P>When an HTML document doesn't cover the entire canvas, user agents
should display the background according to the following algorithm: if
the <span class="propinst-background">'background'</span> value of the
HTML element is different from 'transparent' then use it, else use the
<span class="propinst-background">'background'</span> value of the
BODY element. If the resulting value is 'transparent', the rendering
is undefined.

<P>This rule allows the following, for example:

<div class="example"><P>
<PRE>
  &lt;HTML style="background: url(http://style.com/marble.png)"&gt;
  &lt;BODY style="background: red"&gt;
</PRE>

<P> In the example above, the canvas will be covered with
"marble". The background of the BODY element (which may or may not
fully cover the canvas) will be red.
</div>

<P>Note that no structural element of a document corresponds to the
canvas.  In HTML, until other means of addressing the canvas become
available, we recommend that authors set canvas properties on the BODY
element.

<H3><a name="page">The page</a></H3> 

<P>In order to handle paged media (printing, slides, etc.) correctly,
we introduce the notion of the <span class="index-def"
title="page"><em>page</em></span>, which is like a canvas except that
both its width and height are finite. In the section on <a
href="./print.html#page-breaks">page breaks</a>, we discuss how user
agents must adapt the <a href="flowobj.html#flow-model">visual rendering
model</a> to the case of paged media.

<P>That a "page" is an abstract rectangle that may or may not
correspond to the size of a physical "sheet" of paper, transparency,
etc. Once a page has been formatted, it is the user agent's
responsibility to transfer pages to paper. The transfer may vary in
complexity. Some transfer possibilities include:

<ul>
<li>One page to one sheet of paper.
<li>Two pages to one sheet of paper (double-sided printing).
<li>N (small) pages to one sheet of paper (called <span
	    class="index-def" title="n-up"><em>n-up</em></span>
	  printing).
<li>One (large) page to N x M sheets of paper (called "tiling").
<li>Signatures (a group of pages
printed on a sheet, which, when folded and trimmed like a book, appear in their
proper sequence).
<li>Printing to alternate paper trays.
<li>Printing to a file.
</ul>

<P>The transfer mechanism from page to sheet lies beyond the scope of
this specification. However, the user agent does need to target
a certain size and orientation when printing, and this is known as the
<span class="index-def" title="print target"><EM>print
target</EM></span>. The user will typically set set the target size
and orientation in the <EM>Print</EM> dialogue box of the UA. There
will often, but not always, be a correlation between the target size
and the sheet size. 

<H2>Conventions</H2>
<H3><a name="property-defs">CSS property definitions</a></H3>
<P>Each CSS property definition begins with a summary of key
information that resembles the following:

<P><strong>'Property-name'</strong>
<TABLE>
<TR><TH align="right">Value:<TD>Possible constant values or value types</TR>
<TR><TH align="right">Initial:<TD>The initial value</TR>
<TR><TH align="right">Applies to:<TD>Elements this property applies to</TR>
<TR><TH align="right">Inherited:<TD>Whether the property is inherited</TR>
<TR><TH align="right">Percentage values:<TD>How percentage values should be interpreted</TR>
</TABLE>

<P>The five categories have the following meanings:

<dl>
<dt><strong>Value</strong>
<dd>This part of the property definition specifies the set of valid
values for the property. Value types may be designated in several ways:

<ol>
<li> constant values (e.g., 'auto', 'disc', etc.)  

<li> basic data types, which appear between "&lt;" and "&gt;" (e.g.,
&lt;length&gt;, &lt;percentage&gt;, etc.). In the electronic version
of the document, each instance of a basic data type links to its
definition.

<li> non-terminals that have the same range of values as a property
bearing the same name (e.g., &lt;border-width&gt;
&lt;background-attachment&gt;, etc.).  In this case, the non-terminal
names is the property name (complete with quotes) between "&lt;" and
"&gt;" (e.g., &lt;'border-width'&gt;). In the electronic version of
the document, each instance of this type of non-terminal links to the
corresponding property definition.

<li> non-terminals that do not share the same name as a property. In
this case, the non-terminal name appears between "&lt;" and "&gt;"
(e.g., &lt;border-width&gt;) and its definition is located near its
first appearance in the specification. In the electronic version of
the document, each instance of this type of non-terminal links to the
corresponding value definition.
</ol>

Other words are keywords that must appear literally, without
quotes. The slash (/) and the comma (,) must also appear literally.


<P> Several things juxtaposed mean that all of them must occur, in the
given order. A bar (|) separates alternatives: one of them must
occur. A double bar (A || B) means that either A or B or both must
occur, in any order. Brackets ([]) are for grouping. Juxtaposition is
stronger than the double bar, and the double bar is stronger than the
bar. Thus "a b | c || d e" is equivalent to "[ a b ] | [ c || [ d e
]]".


<P> Every type, keyword, or bracketed group may be followed by one of
the following modifiers:

  <UL>
    <LI>
      An asterisk (*) indicates that the preceding type, word or group is repeated
      zero or more times.
    <LI>
      A plus (+) indicates that the preceding type, word or group is repeated one
      or more times.
    <LI>
      A question mark (?) indicates that the preceding type, word or group is optional.
    <LI>
      A pair of numbers in curly braces ({A,B}) indicates that the preceding type,
      word or group is repeated at least A and at most B times.
  </UL>


<div class="example"><P>
The following examples illustrate different value types:

<BLOCKQUOTE>
    <EM>Value:</EM> N | NW | NE<BR>
    <EM>Value:</EM> [ &lt;length&gt; | thick | thin ]{1,4}<BR>
    <EM>Value:</EM> [&lt;family-name&gt; , ]* &lt;family-name&gt;<BR>
    <EM>Value:</EM> &lt;url&gt;? &lt;color&gt; [ / &lt;color&gt; ]?<BR>
    <EM>Value:</EM> &lt;url&gt; || &lt;color&gt;<BR>
</BLOCKQUOTE>
</div>

<dt><strong>Initial</strong>
<dd>The property's default value. If the property is inherited, this
is the value that is given to the root element of the
document. Otherwise it is the value that the property will have if
there are no style rules for it in either the user's or the designer's
style sheet.</dd>

<dt><strong>Applies to</strong>
<dd>Lists the elements to which the property applies. All elements are
considered to have all properties, but some properties have no effect
on some types of elements. For example, <span
class="propinst-font-style">'font-style'</span> has no effect if the
element is an image.
</dd>

<dt><strong>Inherited</strong>
<dd>Indicates whether the value of the property is inherited from a
parent element.</dd>

<dt><strong>Percentage values</strong>
<dd>Indicates how percentages should be interpreted, if they occur in
the value of the property. If "N/A" appears here, it means that the
property does not accept percentages as values.
</dd>
</dl>

<H3>HTML conventions</H3> 
<P>In this specification, most of the examples refer to HTML. For
clarity, HTML elements are written with upper case letters (e.g.,
HTML, BODY, EM, P) an HTML attributes are written with lower case
letters (e.g., src, class, id).
</BODY>
</html>



