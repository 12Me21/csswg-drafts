<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: conform.src,v 1.23 1997-11-04 12:43:31 howcome Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Definitions and document conventions</TITLE>
<LINK rel="next" href="process.html">
<LINK rel="previous" href="intro.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Definitions and document conventions</H1>
<H2><a name="definitions">Definitions</a></H2>

<p> In this section, we begin the formal specification of CSS2,
starting with the contract between authors, documents, users, and user
agents. 

<P>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <a rel="biblioentry"
href="./references.html#ref-RFC2119">[RFC2119]</a>.  However, for
readability, these words do not appear in all upper case letters in
this specification.

<P>At times, the authors of this specification recommend good practice
for authors and user agents.  These recommendations are not normative
and conformance with this specification does not depend on their
realization. These recommendations contain the expression "We
recommend ...", "This specification recommends ...", or some similar
wording.

<H3><a name="document-language">Document language</a></H3> 

<P>Style sheets specify the presentation of a document written in
another computer language (such as HTML or XML) which, in this
specification, is referred to as the <span class="index-def"
title="document language"><em>document language</em></span>.

<H3><a name="element">Element</a></h3>

<P>The primary syntactic constructs of the document language are
called <span class="index-def"
title="element"><em>elements</em></span>, an SGML term (see <a
rel="biblioentry" href="./refs.src#ref-ISO8879">[ISO8879]</a>). Most
CSS style sheet rules refer to these elements and specify rendering
information for them.  Examples of elements in HTML include "P" (for
structuring paragraphs), "TABLE" (for creating tables), "OL" (for
creating ordered lists), etc.

<P><span class="index-def" title="block-level elment"><em>Block-level
elments</em></span> are those elements of the document language that,
by default, are formatted visually as blocks (e.g., paragraphs).
<span class="index-def" title="inline elment"><em>Inline
elments</em></span> are those elements of the document language that
do not cause paragraph breaks (e.g., pieces of text, inline images,
etc.)

<H3><a name="user-agent">User agent (or UA)</a></H3>

<P>A <span class="index-def" title="user agent|UA"><em>user
agent</em></span> is a computer program which interprets a document
written in the document language and associated style sheets by
applying the terms of this specification. A user agent may display a
document, read it aloud, cause it to be printed, convert it, etc.

<H3><a name="conformance">Conforming user
agent</a></H3>

<p><em>This section defines <span class="index-def"
title="conformance"><em>conformance</em></span> with the CSS2
specification only. There may be other levels of CSS in the future
that may require a UA to implement a different set of features in
order to conform.</em></P>

<p>A user agent that elects to implement a topic (e.g., fonts,
colors, aural style sheets, etc.) covered by this specification must
adhere to all pertinent sections of the specification in order to be
considered to conform to CSS2 for that topic. In such cases, a user
agent may claim to conform to part of the CSS2 specification.</P>

<p>A user agent that elects to implement all topics covered by this
specification and that does so in accordance with the specification
may claim to conform to all of CSS2. The inability of a user agent to
implement a specific topic due to the limitations of a particular
device (e.g., a user agent cannot render colors on a monochrome
monitor or a black and white page) does not imply non-conformance. </P>

<p>In addition to the previous conditions, a user agent that uses
CSS2 <strong>to display</strong> documents conforms to the CSS2
specification if:

  <UL>
    <LI> it attempts to retrieve all referenced style sheets and parse them
    according to this specification.

    <LI> it sorts the declarations according to the <a
	    href="./cascade.html">cascade order</a>.
  </UL>

<p>A user agent that <strong>outputs</strong> CSS2 style sheets
conforms to the CSS2 specification if it outputs valid CSS2 style
sheets.</P>

<p>A user agent that uses CSS2 to display documents <EM>and</EM>
outputs CSS2 style sheets conforms to the CSS2 specification if it
meets both sets of conformance requirements.</P>

<p>This specification also recommends, but doesn't require, that a UA
observe the following rules (which refer to functionality, not user
interface):

  <UL>
    <LI> allow the reader to specify personal style sheets
    <LI> allow individual style sheets to be turned on and off
    <LI> approximate style sheet values even if it can't implement
		      them exactly according to the specification.
  </UL>

<P>Different user interface paradigms may have their own constraints:
a VR browser may rescale the document based on its "distance" from the
user.</P>

<P> UAs may offer readers additional choices on presentation. For
example, the UA may provide options for readers with visual
impairments or may provide the choice to disable blinking.</P>

<H3><a name="default-style-sheet">Default style sheet</a></H3>

<P>Conforming user agents must apply a <span class="index-def"
title="default style sheet"><em>default style sheet</em></span> (or
behave as if they did) prior to all other style sheets for a
document. A user agent's default style sheet generally presents
elements of the document language in ways that satisfy the
expectations that most people have (e.g., for visual browsers, the EM
element in HTML is presented using an italic font).

<P>If a document has associated style sheets, the default style sheet
is considered along with author and user style sheets when determining
how rules <a href="cascade.html">cascade</a>.

<P>User agents that don't actually use style sheets to specify default
rules must behave as if they did.

<P>See <a href="sample.html">"A sample style sheet for HTML 4.0"</a>
for a recommended default style sheet for HTML 4.0 documents.

<H2>Conventions</H2>

<H3>Document language elements and attributes</H3>

<ul>
<li>CSS property, descriptor, and pseudo-class names are delimited
by single quotes.
<li>CSS values are delimited by single quotes.
<li>Document language element names are in upper case letters.
<li>Document language attribute names are in lower case letters 
and delimited by double quotes.
</ul>

<H3><a name="property-defs">CSS property definitions</a></H3>
<P>Each CSS property definition begins with a summary of key
information that resembles the following:

<P><strong>'Property-name'</strong>
<TABLE>
<TR><TH align="right">Value:<TD>Possible constant values or value types</TR>
<TR><TH align="right">Initial:<TD>The initial value</TR>
<TR><TH align="right">Applies to:<TD>Elements this property applies to</TR>
<TR><TH align="right">Inherited:<TD>Whether the property is inherited</TR>
<TR><TH align="right">Percentage values:<TD>How percentage values should be interpreted</TR>
</TABLE>

<P>The five categories have the following meanings:

<dl>
<dt><strong>Value</strong>
<dd>This part of the property definition specifies the set of valid
values for the property. Value types may be designated in several ways:

<ol>
<li> constant values (e.g., 'auto', 'disc', etc.)  

<li> basic data types, which appear between "&lt;" and "&gt;" (e.g.,
&lt;length&gt;, &lt;percentage&gt;, etc.). In the electronic version
of the document, each instance of a basic data type links to its
definition.

<li> non-terminals that have the same range of values as a property
bearing the same name (e.g., &lt;border-width&gt;
&lt;background-attachment&gt;, etc.).  In this case, the non-terminal
name is the property name (complete with quotes) between "&lt;" and
"&gt;" (e.g., &lt;'border-width'&gt;). In the electronic version of
the document, each instance of this type of non-terminal links to the
corresponding property definition.

<li> non-terminals that do not share the same name as a property. In
this case, the non-terminal name appears between "&lt;" and "&gt;"
(e.g., &lt;border-width&gt;) and its definition is located near its
first appearance in the specification. In the electronic version of
the document, each instance of this type of non-terminal links to the
corresponding value definition.
</ol>

Other words are keywords that must appear literally, without
quotes. The slash (/) and the comma (,) must also appear literally.


<P> Several things juxtaposed mean that all of them must occur, in the
given order. A bar (|) separates alternatives: one of them must
occur. A double bar (A || B) means that either A or B or both must
occur, in any order. Brackets ([]) are for grouping. Juxtaposition is
stronger than the double bar, and the double bar is stronger than the
bar. Thus "a b | c || d e" is equivalent to "[ a b ] | [ c || [ d e
]]".


<P> Every type, keyword, or bracketed group may be followed by one of
the following modifiers:

  <UL>
    <LI>
      An asterisk (*) indicates that the preceding type, word or group is repeated
      zero or more times.
    <LI>
      A plus (+) indicates that the preceding type, word or group is repeated one
      or more times.
    <LI>
      A question mark (?) indicates that the preceding type, word or group is optional.
    <LI>
      A pair of numbers in curly braces ({A,B}) indicates that the preceding type,
      word or group is repeated at least A and at most B times.
  </UL>


<div class="example"><P>
The following examples illustrate different value types:

<BLOCKQUOTE>
    <EM>Value:</EM> N | NW | NE<BR>
    <EM>Value:</EM> [ &lt;length&gt; | thick | thin ]{1,4}<BR>
    <EM>Value:</EM> [&lt;family-name&gt; , ]* &lt;family-name&gt;<BR>
    <EM>Value:</EM> &lt;url&gt;? &lt;color&gt; [ / &lt;color&gt; ]?<BR>
    <EM>Value:</EM> &lt;url&gt; || &lt;color&gt;<BR>
</BLOCKQUOTE>
</div>

<dt><strong>Initial</strong>
<dd>The property's default value. If the property is inherited, this
is the value that is given to the root element of the
document. Otherwise it is the value that the property will have if
there are no style rules for it in either the user's or the designer's
style sheet.</dd>

<dt><strong>Applies to</strong>

<dd>Lists the elements to which the property applies. All elements are
considered to have all properties, but some properties have no
rendering effect on some types of elements. For example, <span
class="propinst-font-style">'font-style'</span> has no effect if the
element is an image.

</dd>

<dt><strong>Inherited</strong>
<dd>Indicates whether the value of the property is inherited from a
parent element.</dd>

<dt><strong>Percentage values</strong>
<dd>Indicates how percentages should be interpreted, if they occur in
the value of the property. If "N/A" appears here, it means that the
property does not accept percentages as values.
</dd>
</dl>

<H3>HTML conventions</H3> 
<P>In this specification, most of the examples refer to HTML. For
clarity, HTML elements are written with upper case letters (e.g.,
HTML, BODY, EM, P) and HTML attributes are written with lower case
letters (e.g., src, class, id).
</BODY>
</html>



<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
