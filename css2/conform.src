<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: conform.src,v 2.11 1998-02-21 04:06:00 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Conformance: requirements and recommendations</TITLE>
</HEAD>
<BODY>
<H1 align="center">Conformance: Requirements and Recommendations</H1>

<H2>Definitions</H2>

<p> In this section, we begin the formal specification of CSS2,
starting with the contract between authors, documents, users, and user
agents. 

<P>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 (see
[[RFC2119]]).  However, for readability, these words do not appear in
all uppercase letters in this specification.

<P>At times, the authors of this specification recommend good practice
for authors and user agents.  These recommendations are not normative
and conformance with this specification does not depend on their
realization. These recommendations contain the expression "We
recommend ...", "This specification recommends ...", or some similar
wording.</P>

<dl>
<dt><dfn><strong>Style sheet</strong></dfn>
<dd>A set of statements that specify
presentation of a document. 

<P>Style sheets may have three different origins: <a
href="#author">author</a>, <a href="#user">user</a>, and <a
href="#user-agent">user agent</a>. The interaction of these sources is
described in the section on <a href="cascade.html">cascading and
inheritance</a>.

<dt><dfn><strong><a name="valid-style-sheet">Valid style sheet</a></strong></dfn></dt>
<dd>The <span class="index-def" title="valid style sheet">validity</span>
of a style sheet depends on the level of CSS used for the style sheet.
All valid level N-1 style sheets are valid level N style sheets. In
particular, all valid CSS1 style sheets are valid CSS2 style sheets.
A valid CSS2 style sheet must respect the <a
href="grammar.html">grammar of CSS2</a> and the <a
href="selector.html">selector syntax</a>. Furthermore, it must only
contain at-rules, property names, and property values defined in this
specification. An <span class="index-def"
title="illegal"><dfn>illegal</dfn></span> or invalid 
at-rule, property name, or property value is one that is not valid.

<dt><dfn><strong>Source document</strong></dfn>
<dd>The document to which one or more style sheets refer.</dd>

<dt><dfn><strong><a name="doclanguage">Document language</a></strong></dfn>
<dd>The computer language of the source 
document (e.g., HTML, XML, etc.).

<P>The primary syntactic constructs of the document language are
called <span class="index-def"
title="element"><em>elements,</em></span> (an SGML term, see [[ISO8879]]). Most CSS style sheet rules refer to
these elements and specify rendering information for them.  Examples
of elements in HTML include "P" (for paragraphs), "TABLE"
(for creating tables), "OL" (for creating ordered lists), etc.

<P>The <span class="index-def" title="element::content"> <a
name="element-content"><dfn>content</dfn></a></span> of an element is
the content of that element in the source document; not all elements
have content. The <span class="index-def" title="element::rendered
content"> <a name="rendered-content"><dfn>rendered
content</dfn></a></span> of an element is the content actually
rendered. An element's content is generally its rendered content. The
rendered content of a <span class="index-def" title="replaced
element"><a name="replaced-element"><dfn>replaced
element</dfn></a></span> comes from outside the source document (e.g.,
HTML's IMG element).
Rendered content may also be <span class="index-def" title="alternate
text"> <a name="alternate-text"><dfn>alternate text</dfn></a></span>
for an element (e.g., the value of the HTML "alt" attribute).

<dt><dfn><strong><a name="doctree">Document
tree</a></strong></dfn></dt> 
<dd>User agents transform a document written in the document language
into a <dfn>document tree</dfn> where every element except one has
exactly one <span class="index-def" title="parent">parent</span>
element. (See the SGML specification for the definition of parent
([[ISO8879]]).) The one exception is the <span class="index-def"
title="root"><dfn>root</dfn></span> element, which has no parent.

<P>An element A is called an <span class="index-def"
title="ancestor"><dfn>ancestor</dfn></span> of an element B, if either
(1) A is the parent B, or (2) A is the parent of some element C that
is an ancestor of B.

<P>An element A is called a <span class="index-def"
title="descendant"><dfn>descendant</dfn></span> of an element B, if
and only if B is an ancestor of A.  An element A is called a <span
class="index-def" title="child">child</span> of an element B, if and
only if B is the parent of A.

<P>An element A is called a <span class="index-def"
title="sibling"><dfn>sibling</dfn></span> of an element B, if and only
if B and A share the same parent element. Element A is a preceding
sibling if it comes before B in the document tree. Element B is a
following sibling if it comes after B in the document tree.

<P>An element A is called a <span class="index-def" title="preceding
element"><a name="preceding"><dfn>preceding element</dfn></a></span>
of an element B, if and only if (1) A is an ancestor of B or (2) A is
a preceding sibling of B. An element A is called a <span
class="index-def" title="following element"><a
name="following"><dfn>following element</dfn></a></span> of an element
B, if and only if (1) A is an descendant of B or (2) A is a following
sibling of B.



<div class="html-example"><P>
For example, the following HTML document:
<PRE>
&lt;HTML&gt;   
  &lt;TITLE&gt;My home page&lt;/TITLE&gt;
  &lt;BODY&gt;
    &lt;H1&gt;My home page&lt;/H1&gt;
    &lt;P&gt;Welcome to my home page! Let me tell you about my favorite
		composers:
    &lt;UL&gt;
      &lt;LI&gt; Elvis Costello
      &lt;LI&gt; Johannes Brahms
      &lt;LI&gt; Georges Brassens
    &lt;/UL&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P>results in the following tree:</P>

<P><IMG src="images/doctree.gif" alt="Sample document tree"></p>

<P>According to the definition of HTML, HEAD elements will be inferred
during parsing and become part of the document tree even if the HEAD
tags are not in the document source.
</div>
</dd>

<dt>
<span class="index-def" title="anonymous content">
<a name="anonymous">
<dfn><strong>Anonymous content</strong></dfn></a>
</span></dt> 

<dd>At times, content either in the document tree or <a
href="generate.html">generated</a> in the rendering structure may only
receive style information through <a
href="cascade.html#inheritance">inheritance</a>. This content is said
to be "anonymous".

<P><a href="selector.html#pseudo-elements">Pseudo-elements</a> allow
authors to refer to what would otherwise be anonymous content.

<dt><dfn><strong><a name="author">Author</a></strong></dfn>
<dd>An author is a person who writes
documents and associated style sheets. An 
<span class="index-def" title="authoring tool"><dfn>authoring tool</dfn></span>
generates documents and associated style sheets.</dd>

<dt><dfn><strong><a name="user">User</a></strong></dfn> 
<dd> A user is a person who interacts with a user agent to view, hear, or
otherwise use a document and its associated style sheet. The user
may provide a personal style sheet that encodes personal
preferences.
</dd>

<dt><dfn><strong><a name="user-agent">User agent</a></strong></dfn>
<dd>A <span class="index-def" title="user agent|UA">user
agent</span> is any program that interprets a document written in
the document language and applies associated style sheets according
to the terms of this specification. A user agent may display a
document, read it aloud, cause it to be printed, convert it
to another format, etc.</dd>
</dl>

<h2><a name="conformance">Conformance</a></h2>

<P>This section defines <span class="index-def"
title="conformance">conformance</span> with the CSS2
specification only. There may be other levels of CSS in the future
that may require a user agent to implement a different set of features
in order to conform.

<P>In general, the following points must be observed by user agents
claiming conformance to this specification:</P>

<ol>
<li>It must identify the CSS2 <a href="media.html">media types</a> it
supports.
<li>For each source document, it must retrieve all 
associated style sheets that are appropriate for the supported media
types. Even if a user agent cannot retrieve all associated style sheets,
it should still display the document using those it can retrieve.
<li>It must parse the style sheets according to this specification.
In particular, it must recognize all at-rules, blocks, declarations,
and selectors (see the <a href="grammar.html">grammar of CSS2</a>).
If a user agent encounters a property that applies for a supported
media type, the user agent must parse the value according to the property
definition. This means that the user agent must accept all valid
values and must  
<span class="index-inst" title="skip">skip</span> other values. User
agents must <span class="index-inst" title="skip">skip</span>
rules that apply to unsupported <a href="media.html">media
types</a>.
<!-- Define "accept"? Include statement that conforming user
agents may only allow one value for certain properties (for
backwards compatibility, see CSS1 for list of these properties),
i.e., the default style sheet value -IJ -->
<li>Given a <a href="#doctree">document tree</a>, it must
assign a value for every supported property according to
the rules of <a href="cascade.html">cascading and inheritance</a>.
</ol>

<P>Not every user agent must observe every point, however:</p>

<ul>
<li>A user agent that <em>inputs</em> style sheets must
respect points 1 - 3.

<li>An authoring tool is only required to output <a
href="#valid-style-sheet">valid style sheets</a>

<li>A user agent that <em>renders</em> a document with associated style
sheets must respect points 1 - 4 and render the document
according to the media-specific requirements set forth in this
specification. <a href="cascade.html#actual-value">Values</a> 
may be approximated when required by the user agent.
</ul>

<P>The inability of a user agent to implement part of this
specification due to the limitations of a particular device (e.g., a
user agent cannot render colors on a monochrome monitor or page) does
not imply non-conformance. </P>

<p>This specification also recommends that a user agent offer the following
functionality to the user (these do not refer to any specific
user interface):</p>

<UL>
 <LI>Allow the user to specify user style sheets
 <LI>Allow the user to turn on or off specific style sheets .
</UL>

<h2>Error conditions</h2>

<P>In general, this document does not specify error handling behavior
for user agents (e.g., how they behave when they cannot find
a resource designated by a URI).

<P>However, user agents must observe the <a
href="syndata.html#parsing-errors">rules for handling parsing errors</a>.

<P>Since user agents may vary in how they handle error conditions,
authors and users must not rely on specific error recovery behavior.


<H2><span class="index-def" title="text/css"><a
name="text-css">The text/css content type</a></span></H2>

<p>CSS style sheets that exist in separate files are sent over the
Internet as a sequence of bytes accompanied by encoding information
(see [[HTML40]], chapter 5).  The structure of the transmission,
termed a <span class="index-def" title="message entity"><a
name="message-entity"><dfn>message entity,</dfn></a></span> is defined
by RFC 2045 and RFC 2068 (see [[RFC2045]] and [[RFC2068]]).  A message
entity with a content type of "text/css" represents an independent CSS
document.

<P>The text/css content type is defined in RFC ??? (see [[RFCCSS]]).

<!-- To be completed by an RFC -IJ -->

</BODY>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
