<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: media.src,v 1.9 1997-09-07 00:36:10 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Media types</TITLE>
<LINK rel="next" href="flowobj.html">
<LINK rel="previous" href="cascade.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Media types</H1>

The following sections describe the various media that may be the
target of presentation through CSS2.


<!-- What is the definitive list of media types? -->
<H2>Media Dependent Style Sheets</H2>

<P>Different output media can often take advantage of the same
properties. For example, the <span
class="propinst-font-size">'font-size'</span> property is useful both
for SCREEN and PRINT media. However, the two media types are different
enough to require different values on the common property; a document
will typically need a larger font on a computer screen than on paper.
For this reason, it's necessary to express that a style sheet -- or a
section of a style sheet -- applies to certain media types.

<P>There are two ways to do this:

<UL>

<LI>Specify the target medium from a style sheet with the <span
	    class="index-def" title="@media">@media</span> at-rule.

<div class="example"><P>
<PRE>
  @media print {
    /* style sheet "foo" goes here */
  }
</PRE>
</div>

<LI>Specify the target medium within the object language. For example,
in <a rel="biblioentry" href="./refs.html#ref-HTML40">[HTML40]</a>,
the "media" attribute on the LINK element specifies the target medium
of an external style sheet.

<div class="example"><P>

<PRE>
  &lt;LINK rel="stylesheet" type="text/css" 
           media="print" href="foo.css"&gt;
</PRE>
</div>

<P>Please consult the <a rel="biblioentry"
	  href="./refs.html#ref-HTML40">[HTML40]</a> specification for
	information about specifying alternate style sheets according
	to different media types.
</UL>

<P>Due to the same media type value, the two examples above are semantically
equivalent.

<p>The <span class="index-inst" title="@media">@media</span>construct
also allows style sheet rules for various media in the same style
sheet:

<pre>
  @media print {
    BODY { font-size: 10pt }
  }
  @media screen {
    BODY { font-size: 12pt }
  }
  @media screen, print {
    BODY { line-height: 1.2 }
  }
</pre>

<p>Any valid MEDIA attribute value is valid on @media.


<H2><a name="the-canvas">The canvas</a></H2>

<!-- Hakon: introduce notion of "viewport"? -->
<P> The <span class="index-def" title="canvas"><em>canvas</em></span>
is the part of the UA's drawing surface onto which
documents are rendered. No structural element of a document
corresponds to the canvas, and this raises two issues when formatting
a document:

<UL>
<LI> from where should the dimensions of the canvas be set?
<LI> when the document doesn't cover the whole canvas, how should this
     area be rendered?
</UL>

<P> A reasonable answer to the first question is that the initial size
of the canvas is based on the window size, but CSS2 leaves this issue
for the UA to decide. It is also reasonable to expect the UA to change
the canvas size when the window is resized, but this is also outside
the scope of CSS2.

<H3>The HTML canvas</H3>
<P> HTML extensions have set a precedent for the second question:
attributes on the BODY element set the background of the whole
canvas. To support designers' expectations, CSS2 introduces a special
rule to find the canvas background:

<BLOCKQUOTE>
    If the <span class="propinst-background">'background'</span> value of the
    HTML element is different from 'transparent' then use it, else use
    the <span class="propinst-background">'background'</span> value of the BODY
    element. If the resulting value is 'transparent', the rendering is
    undefined.
</BLOCKQUOTE>

<P> This rule allows the following, for example:

<div class="example"><P>
<PRE>
  &lt;HTML style="background: url(http://style.com/marble.png)"&gt;
  &lt;BODY style="background: red"&gt;
</PRE>

<P> In the example above, the canvas will be covered with
"marble". The background of the BODY element (which may or may not
fully cover the canvas) will be red.
</div>


<P> Until other means of addressing the canvas become available, it is
recommended that canvas properties are set on the BODY element.


</BODY>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
