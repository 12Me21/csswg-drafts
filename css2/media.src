<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: media.src,v 1.27 1997-12-12 02:48:16 howcome Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Media types</TITLE>
<LINK rel="next" href="flowobj.html">
<LINK rel="previous" href="cascade.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Media types</H1>
<!-- What is the definitive list of media types? -->
<!-- Are values case-sensitive? -->

<H2>Introduction to media types</H2>

One of the most important features of style sheets is that they allow
authors to specify how a document is to be presented on different
media: on the screen, on paper, with a speech synthesizer, with a
braille device, etc.

<P>Certain CSS properties only make sense for certain media (e.g., the
<span class="propinst-cue-before">'cue-before'</span> property for
aural style sheets). On occasion, however, style sheets for different
media types may share a property, but require different values for
that property. For example, the <span
class="propinst-font-size">'font-size'</span> property is useful both
for screen and print media. However, the two media are different
enough to require different values for the common property; a document
will typically need a larger font on a computer screen than on paper.
Experience also shows that sans serif fonts are easier to read on
screen, while fonts with serifs are easier to read on paper.  For
these reasons, it is necessary to express that a style sheet -- or a
section of a style sheet -- applies to certain media types.

<P>The following sections describe how authors may specify different
style sheets for different media (all of which participate in the <a
href="./cascade.html">cascade</a>).

<H2>Specifying media-dependent style sheets</H2>
<P>There are currently two ways to specify media dependencies for
style sheets:

<UL>

<LI>Specify the target medium from a style sheet with the <span
	    class="index-def" title="@media">@media</span> or <span
	    class="index-def" title="@import">@import</span> at-rules.

<div class="example"><P>
<PRE>
  @import url(loudvoice.css) speech;
  @media print {
    /* style sheet for print goes here */
  }
</PRE>
</div>

<LI>Specify the target medium within the document language. For example,
in <a rel="biblioentry" href="./refs.html#ref-HTML40" class="informref">[HTML40]</a>,
the "media" attribute on the LINK element specifies the target medium
of an external style sheet.

<div class="example"><P>

<PRE>
  &lt;LINK rel="stylesheet" type="text/css" 
           media="print" href="foo.css"&gt;
</PRE>
</div>

<P>Please consult the <a rel="biblioentry"
	  href="./refs.html#ref-HTML40" class="informref">[HTML40]</a> specification for
	information about specifying alternate style sheets according
	to different media types.
</UL>

<P>Since these two examples have the same <a href="#media-types">media
type</a>, they are semantically equivalent.

<H3>The @media rule</H3> 

<P>An @media rule lists the <a href="#media-types">media types</a>
(separated by commas) affected by a set of rules delimited by curly
braces.

<p>The <span class="index-inst" title="@media">@media</span>construct
allows style sheet rules for various media in the same style
sheet:</P>

<pre class="example">
  @media print {
    BODY { font-size: 10pt }
  }
  @media screen {
    BODY { font-size: 12pt }
  }
  @media screen, print {
    BODY { line-height: 1.2 }
  }
</pre>

<H3>The media-dependent @import rule</h3>

<p>So that user agents can avoid retrieving resources for unsupported
media types, authors may specify media-dependent <a
href="cascade.html">@import</a> rules.  These <span class="index-inst"
title="@import"><span class="index-def" title="conditional
import|media-dependent import">conditional imports</span></span>
specify comma-separated media types after the URL.

<div class="example">
<p>The following rules have the same effect as if the imported style
sheet were wrapped in an @media rule for the same media, but it may
save the UA a fruitless download.

<pre>
@import url(fineprint.css) print;
@import url(bluish.css) projection, tv;
</pre>
</div>

<p>In the absence of any media types, the import is
unconditional. Specifying 'all' for the medium has the same effect.

<H2><a name="media-types">Recognized media types</a></H2> 

<p>Due to rapidly changing technologies, CSS2 does not specify a
definitive list of media types that may be values for <span
class="index-inst" title="@media">@media</span>. However, user agents
that elect to support the devices in the following list must recognize
the associated media type:

<dl>
<dt><strong>screen</strong>
<dd>Intended primarily for color computer screens. See the section on 
<a href="#continuous-media">continuous media</a> for more information.

<dt><strong>tty</strong>
<dd>Intended for media using a fixed-pitch character
  grid, such as teletypes, terminals, or portable devices with limited
  display capabilities.

<P>Authors should not use <a href="syndata.html#pixel-units">pixel
units</a> with the "tty" media type.

<dt><strong>tv</strong>
<dd>Intended for television-type devices (low 
resolution, color, limited scrollability).

<dt><strong>projection</strong>
<dd>Intended for projected presentations, for
example projectors or print to transparencies.
Please consult the section on <a href="page.html">paged media</a> for
information about formatting issues that are specific to paged media.

<dt><strong>handheld</strong>
<dd>Intended for handheld devices (small
screen, monochrome, limited bandwidth).

<dt><strong>print</strong> 
<dd>Intended for paged, opaque material and for documents viewed on
screen in print preview mode.  Please consult the section on <a
href="page.html">paged media</a> for information about formatting
issues that are specific to paged media.

<dt><strong>braille</strong>
<dd>Intended for braille tactile feedback devices.

<dt><strong>embossed</strong>
<dd>Intended for paged braille printers.



<dt><strong>aural</strong> 
<dd>Intended for speech synthesizers. See the 
section on <a href="./aural.html">aural style sheets</a> for details.

<dt><strong>all</strong>
<dd>Suitable for all devices.
</dl>

<P>Media type names are case-insensitive.

<!-- IJ: Include definitions of "visual", "paged", etc. here.
Link to them from the property/descriptor definitions -->

<H3><a name="canvas">The canvas</a></H3> 

<P>For all media, the term <span class="index-def" title="canvas"><em>
canvas</em></span> means "the space where rendering objects are rendered."
For a screen, the canvas is a rectangular space generally of fixed
width and "infinite" length. For paged media, the canvas is a sequence
of rectangular page boxes of fixed width and height.  For aural media,
the canvas is a three dimensional audio space.

<H4><a name="continuous-media">Continuous media</a></H4>

<P>User agents for continuous media may implement the canvas as an
"infinitely" long (or however long the rendered document is) rectangle
that has a fixed width. Users see this canvas through a user agent's
<span class="index-def" title="viewport"><em>viewport</em></span>, a
window or other viewing area on the screen. The canvas may be larger
or smaller than the viewport. Typically, when the canvas is larger
than the viewport, the user agent will offer the user a scrolling
mechanism to bring hidden parts into view.

<P>The user agent generally determines the width of the canvas and may
change the dimensions of the canvas when the viewport is resized.

<P>In general, when a document doesn't cover the entire canvas, the
User agent should "borrow" the background of the root element. Since
the BODY element is often perceived as the root element in HTML, this
special rules apply to HTML documents: if
the <span class="propinst-background">'background'</span> value of the
HTML element is different from 'transparent' then use it, else use the
<span class="propinst-background">'background'</span> value of the
BODY element. If the resulting value is 'transparent', the rendering
is undefined.

<P>This rule allows the following:

<div class="example"><P>
<PRE>
  &lt;HTML style="background: url(http://style.com/marble.png)"&gt;
  &lt;BODY style="background: red"&gt;
</PRE>

<P> In the example above, the canvas will be covered with
"marble". The background of the BODY element (which may or may not
fully cover the canvas) will be red.
</div>

<P>Note that no structural element of a document corresponds to the
canvas.  In HTML, until other means of addressing the canvas become
available, we recommend that authors set canvas properties on the BODY
element.

</BODY>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
