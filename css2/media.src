<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: media.src,v 1.16 1997-10-03 22:20:05 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Media types</TITLE>
<LINK rel="next" href="flowobj.html">
<LINK rel="previous" href="cascade.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Media types</H1>
<!-- What is the definitive list of media types? -->
<!-- Are values case-sensitive? -->

<H2>Introduction to media types</H2>

One of the most important features of style sheets is that they allow
authors to specify how a document is to be presented on different
media: on the screen, on paper, with a speech synthesizer, with a
braille device. 

<P>Certain CSS properties only make sense for certain media (e.g., the
<span class="propinst-cue-before">'cue-before'</span> property for
aural style sheets). On occasion, however, style sheets for different
media types may share a property, but require different values for
that property. For example, the <span
class="propinst-font-size">'font-size'</span> property is useful both
for screen and print media. However, the two media are different
enough to require different values for the common property; a document
will typically need a larger font on a computer screen than on paper.
For this reason, it's necessary to express that a style sheet -- or a
section of a style sheet -- applies to certain media types.

The following sections describe how authors may
specify different style sheets for different media (all of which
participate in the <a href="./cascade.html">cascade</a>).

<H2>Specifying media-dependent style sheets</H2>
<P>There are currently two ways to specify media dependencies for
style sheets:

<UL>

<LI>Specify the target medium from a style sheet with the <span
	    class="index-def" title="@media">@media</span> at-rule.

<div class="example"><P>
<PRE>
  @media print {
    /* style sheet "foo" goes here */
  }
</PRE>
</div>

<LI>Specify the target medium within the document language. For example,
in <a rel="biblioentry" href="./refs.html#ref-HTML40">[HTML40]</a>,
the "media" attribute on the LINK element specifies the target medium
of an external style sheet.

<div class="example"><P>

<PRE>
  &lt;LINK rel="stylesheet" type="text/css" 
           media="print" href="foo.css"&gt;
</PRE>
</div>

<P>Please consult the <a rel="biblioentry"
	  href="./refs.html#ref-HTML40">[HTML40]</a> specification for
	information about specifying alternate style sheets according
	to different media types.
</UL>

<P>Due to the same media type value, the two examples above are semantically
equivalent.

<p>The <span class="index-inst" title="@media">@media</span>construct
also allows style sheet rules for various media in the same style
sheet:

<pre>
  @media print {
    BODY { font-size: 10pt }
  }
  @media screen {
    BODY { font-size: 12pt }
  }
  @media screen, print {
    BODY { line-height: 1.2 }
  }
</pre>

<H2>Valid media types</H2> 

<p>Due to rapidly changing technologies, CSS2 does not specify a
definitive list of media types that may be values for <span
class="index-inst" title="@media"> @media</span>. However, user agents
that elect to support the devices in the following list must recognize
the associated media type:

<ul>
<li><samp>screen:</samp> intended primarily for scrolled computer
screens, but many properties also apply to print and projection media
as well. This is the default value. See the section on 
<a href="#scrolled-media">scrollable media</a> for more information.

<li><samp>print:</samp> intended for paged, opaque
  material and for documents viewed on screen in print preview mode.
<P>Please consult the section on <a href="page.html">paged media</a> for
information about formatting issues that are specific to paged media.

<li><samp>projection:</samp> intended for projectors.
<P>Please consult the section on <a href="page.html">paged media</a> for
information about formatting issues that are specific to paged media.

<li><samp>braille:</samp> intended for braille tactile feedback devices.

<li><samp>aural:</samp> intended for speech synthesizers. See the 
section on <a href="./aural.html">aural style sheets</a> for details.

<li><samp>tv:</samp> intended for television-type devices (low 
resolution, color, limited scrollability).

<li><samp>handheld:</samp> intended for handheld devices (small
screen, monochrome, limited bandwidth).

<li><samp>all:</samp> suitable for all devices.
</ul>

<H3><a name="scrolled-media">Scrollable media</a></H3>

<P>User agents may implement the canvas as an "infinitely" long (or
however long the rendered document is) rectangle that has a fixed
width. Users see this canvas through a user agent's <span
class="index-def" title="viewport"><em>viewport</em></span>, a window
or other viewing area on the screen. The canvas may be larger or
smaller than the viewport. Typically, when the canvas is larger than
the viewport, the user agent will offer the user a scrolling mechanism
to bring hidden parts into view.

<P>The user agent generally determines the width of the canvas and may
change the dimensions of the canvas when the viewport is resized.

<P>When an HTML document doesn't cover the entire canvas, user agents
should display the background according to the following algorithm: if
the <span class="propinst-background">'background'</span> value of the
HTML element is different from 'transparent' then use it, else use the
<span class="propinst-background">'background'</span> value of the
BODY element. If the resulting value is 'transparent', the rendering
is undefined.

<P>This rule allows the following, for example:

<div class="example"><P>
<PRE>
  &lt;HTML style="background: url(http://style.com/marble.png)"&gt;
  &lt;BODY style="background: red"&gt;
</PRE>

<P> In the example above, the canvas will be covered with
"marble". The background of the BODY element (which may or may not
fully cover the canvas) will be red.
</div>

<P>Note that no structural element of a document corresponds to the
canvas.  In HTML, until other means of addressing the canvas become
available, we recommend that authors set canvas properties on the BODY
element.

</BODY>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
