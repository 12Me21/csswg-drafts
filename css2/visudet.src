<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: visudet.src,v 1.38 1998-01-12 17:57:51 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Visual rendering model details</TITLE>
<LINK rel="next" href="visufx.html">
<LINK rel="previous" href="visuren.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Visual rendering model details</H1>

<H2><a name="containing-block">Containing blocks</a></H2>

<P>In CSS2, all box positions are calculated with respect to the edges
of a rectangular box called a <span class="index-def"
title="containing block"><dfn>containing block</dfn></span>.

<P>The root of the <a href="conform.html#doctree">document tree</a>
generates a box that serves as the <span class="index-def"
title="initial containing block|containing block::initial"><a
name="initial-containing-block"><dfn>initial containing
block</dfn></a></span> for subsequent layout. If the <span
class="propinst-width">'width'</span> property for the root element
has the value 'auto', the user agent supplies an initial width (e.g.,
the user agent uses the current width of the <a
href="visuren.html#viewport">viewport</a>).

<P>The initial containing block cannot be positioned (i.e., user
agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-position">'position'</span> property) or floated
(i.e., user agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-float">'float'</span> property).

<P>The containing block for an box other than the root box determined
as follows:

<ul>
<li>If the value of the <span
class="propinst-position">'position'</span> property for the parent
element is anything but 'normal' then the containing block is established
by the parent box.
<li>Otherwise, if the value of the <span
class="propinst-display">'display'</span> property for the parent
element is anything but 'inline' then the containing block is
established by the parent box.
<li>Otherwise, the containing block is the parent's containing block.
</ul>

<P>When the containing block is established by a <a
href="visuren.html#block-level">block-level</a> box, it has the same
width, height, and position as the parent's <a
href="visuren.html#padding-edge">padding edge</a>. When the containing
block is established by an <a href="visuren.html#inline">inline</a>
box, it has the same width, height, and position as the <a
href="visuren.html#padding-edge">padding edge</a> of the first <a
href="#line-box">line box</a> generated by the inline box.

<P><a href="visuren.html#relative-positioning">Relatively
positioned</a> <a href="visuren.html#inline">inline</a> boxes must be
considered specially since (1) the <a
href="conform.html#rendered-content">rendered content</a> of an inline
element may not be rectangular in shape but (2) a relatively
positioned box establishes a new containing block and containing
blocks must be rectangular. The reference edges for descendents
are the following:

<ul>
<li>For left-to-right scripts, the left and top edges are those
of the first line box. The bottom and right edges are undefined
in this case.
<li>For right-to-left scripts, the right and top edges are those
of the first line box. The bottom and left edges are undefined
in this case.
</ul>

<!-- The secondary direction in CSS2 is top-to-bottom.
[HWL: add figure]
-->

<H2>Box model details</h2> 

<P>The following sections include the definitions
of box properties and other details about box generation.

<H3><a name="margin-properties">Margin properties</a>:
<span class="propinst-margin-top">'margin-top'</span>, 
<span class="propinst-margin-right">'margin-right'</span>, 
<span class="propinst-margin-bottom">'margin-bottom'</span>,
<span class="propinst-margin-left">'margin-left'</span>, and
<span class="propinst-margin">'margin'</span></H3>

<P>Margin properties specify the width of the <a
href="visuren.html#box-margin-area">margin area</a> of a box.  The
<span class="propinst-margin">'margin'</span> shortcut property sets
the margin for all four sides while the other margin properties only
set their respective side. These properties apply to all elements
generating <a href="visuren.html#block-level">block-level</a> boxes \
that are not <a href="visuren.html#absolute-positioning">absolutely
positioned</a> and they apply to elements for which <span
class="propinst-display">'display'</span> is set to 'caption'.

<P>The properties defined in this section refer to the <span
class="index-def" title="&lt;margin-width&gt;::definition of"><a
name="value-def-margin-width"><strong>&lt;margin-width&gt;</strong></a></span>
value type, which may take one of the following values:

<dl>
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>Specifies a fixed width.
<dt><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span>
<dd>Specifies a percentage width. The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
<dt><strong>auto</strong>
<dd>See the section on <a href="#box-width">box width calculations</a>
for behavior.
</dl>

<P>Negative values for margin properties are allowed, but there may be
implementation-specific limits.  Percentage values for margin
properties refer to the width of the generated box's <a
href="#containing-block">containing block</a>.

<!-- #include src=properties/margin-top.srb -->

<P>This property sets the top margin of a generated box.

<div class="example"><P>
<PRE>
  H1 { margin-top: 2em }
</PRE>
</div>

<!-- #include src=properties/margin-right.srb -->


<P>This property sets the right margin of a generated box.

<div class="example"><p>
<PRE>
  H1 { margin-right: 12.3% }
</PRE>
</div>

<!-- #include src=properties/margin-bottom.srb -->

<P> This property sets the bottom margin of a generated box. 

<div class="example"><P>
<PRE>
  H1 { margin-bottom: 3px }
</PRE>
</div>

<!-- #include src=properties/margin-left.srb -->

<P> This property sets the left margin of a generated box.

<div class="example"><P>
<PRE>
  H1 { margin-left: 2em }
</PRE>
</div>

<!-- #include src=properties/margin.srb -->

<P> The <span class="propinst-margin">'margin'</span> property is a
shorthand property for setting <span
class="propinst-margin-top">'margin-top'</span>, <span
class="propinst-margin-right">'margin-right'</span> <span
class="propinst-margin-bottom">'margin-bottom'</span> and <span
class="propinst-margin-left">'margin-left'</span> at the same place in
the style sheet.

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom margins
are set to the first value and the right and left margins are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
the second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<div class="example"><P>
<PRE>
  BODY { margin: 2em } /* all margins set to 2em */
  BODY { margin: 1em 2em } /* top &amp; bottom = 1em, right &amp; left = 2em */
  BODY { margin: 1em 2em 3em } /* top=1em, right=2em, bottom=3em, left=2em */
</PRE>

<P> The last rule of the example above is equivalent to the example
below:

<PRE>
  BODY {
    margin-top: 1em;
    margin-right: 2em;
    margin-bottom: 3em;
    margin-left: 2em;        /* copied from opposite side (right) */
  }
</PRE>
</div>

<H3><a name="padding-properties">Padding properties</a>:
<span class="propinst-padding-top">'padding-top'</span>,
<span class="propinst-padding-right">'padding-right'</span>,
<span class="propinst-padding-bottom">'padding-bottom'</span>,
<span class="propinst-padding-left">'padding-left'</span>, and
<span class="propinst-padding">'padding'</span>
</H3> 

<P>The padding properties specify the width of the <a
href="visuren.html#box-content-area">content area</a> of a box. The <span
class="propinst-padding">'padding'</span> shortcut property sets the
padding for all four sides while the other padding properties only set
their respective side. These properties apply to all elements.

<P>The properties defined in this section refer to the <span
class="index-def" title="&lt;padding-width&gt;::definition of"><a
name="value-def-padding-width"><strong>&lt;padding-width&gt;</strong>
</a></span> value type, which may take one of the following values:</p>

<dl>
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>Specifies a fixed width.
<dt><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span>
<dd>Specifies a percentage width.
The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
</dl>

<P>Unlike margin properties, values for padding values cannot be
negative. Like margin properties, percentage values for padding
properties refer to the width of the generated box's containing block.

<!-- #include src=properties/padding-top.srb -->

<P> This property sets the top padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-top: 0.3em }
</PRE>
</div>

<!-- #include src=properties/padding-right.srb -->

<P> This property sets the right padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-right: 10px }
</PRE>
</div>

<!-- #include src=properties/padding-bottom.srb -->

<P> This property sets the bottom padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-bottom: 2em }
</PRE>
</div>

<!-- #include src=properties/padding-left.srb -->

<P> This property sets the left padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-left: 20% }
</PRE>
</div>

<!-- #include src=properties/padding.srb -->

<P> The <span class="propinst-padding">'padding'</span> property is a
shorthand property for setting <span
class="propinst-padding-top">'padding-top'</span>, <span
class="propinst-padding-right">'padding-right'</span>, <span
class="propinst-padding-bottom">'padding-bottom'</span>, and <span
class="propinst-padding-left">'padding-left'</span> at the same place
in the style sheet.

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom paddings
are set to the first value and the right and left paddings are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
the second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<P> The surface color or image of the padding area is specified via
the <span class="propinst-background">'background'</span> property:

<div class="example"><P>
<PRE>
  H1 { 
    background: white; 
    padding: 1em 2em;
  } 
</PRE>

<P> The example above specifies a '1em' vertical padding (<span
class="propinst-padding-top">'padding-top'</span> and <span
class="propinst-padding-bottom">'padding-bottom'</span>) and a '2em'
horizontal padding (<span
class="propinst-padding-right">'padding-right'</span> and <span
class="propinst-padding-left">'padding-left'</span>). The 'em' unit is
<a href="syndata.html#absrel-units">relative</a> 
to the element's font size: '1em' is equal to the size of the
font in use.
</div>

<H3><a name="border-properties">Border properties</a></H3>

<P>The border properties specify the width, color, and style of the <a
href="visuren.html#box-border-area">border area</a> of a box. These
properties apply to all elements.

<H4><a name="border-width-properties">Border width</A>: <span
class="propinst-border-top-width">'border-top-width'</span>, <span
class="propinst-border-right-width">'border-right-width'</span>, <span
class="propinst-border-bottom-width">'border-bottom-width'</span>,
<span class="propinst-border-left-width">'border-left-width'</span>, and
<span class="propinst-border-width">'border-width'</span></H4>

<P>The border width properties specify the width of the <a
href="visuren.html#box-border-area">border area</a>.  The properties
defined in this section refer to the <span class="index-def"
title="&lt;border-width&gt;::definition of"><a
name="value-def-border-width"
class="value-def"><strong>&lt;border-width&gt;</strong></a></span>
value type, which may take one of the following values:</P>

<dl>
<dt><strong>thin</strong>
<dd>A thin border.
<dt><strong>medium</strong>
<dd>A medium border.
<dt><strong>thick</strong>
<dd>A thick border.
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>The border's thickness has an explicit value. Explicit
border widths cannot be negative.
</dl>

<P>The interpretation of the first three values depends on the user
agent. The following relationships must hold, however:

<P>'thin' &lt;='medium' &lt;= 'thick'.  

<P>Furthermore, these widths must be constant throughout a document.

<!-- #include src=properties/border-top-width.srb -->

<P> This property sets the width of the top border of a box.

<div class="example"><P>
<PRE>
  H1 { border: solid thick red }
  P  { border: solid thick blue }
</PRE>

<P> In the example above, H1 and P elements will have the same
border width regardless of font size. To achieve relative widths, the
'em' unit can be used:

<PRE>
  H1 { border: solid 0.5em }
</PRE>
</div>

<!-- #include src=properties/border-right-width.srb -->

<P> This property sets the width of the right
border of a box.

<!-- #include src=properties/border-bottom-width.srb -->

<P> This property sets the width of the bottom border of
a box.

<!-- #include src=properties/border-left-width.srb -->

<P> This property sets the width of the left border 
of a box.

<!-- #include src=properties/border-width.srb -->

<P> This property is a shorthand property for setting
<span class="propinst-border-top-width">'border-top-width'</span>, 
<span class="propinst-border-right-width">'border-right-width'</span>, 
<span class="propinst-border-bottom-width">'border-bottom-width'</span>,
 and
<span class="propinst-border-left-width">'border-left-width'</span> at
the same place in the style sheet. 

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom borders
are set to the first value and the right and left are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
the second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<div class="example"><P>
In the examples below, the comments indicate the resulting widths
of the top, right, bottom and left borders:

<PRE>
  H1 { border-width: thin }                   /* thin thin thin thin */
  H1 { border-width: thin thick }             /* thin thick thin thick */
  H1 { border-width: thin thick medium }      /* thin thick medium thick */
</PRE>
</div>

<H4><A name="border-color-properties">Border color</A>:
<span class="propinst-border-top-color">'border-top-color'</span>,
<span class="propinst-border-right-color">'border-right-color'</span>,
<span class="propinst-border-bottom-color">'border-bottom-color'</span>,
<span class="propinst-border-left-color">'border-left-color'</span>, and
<span class="propinst-border-color">'border-color'</span>
</H4>

<P>The border color properties specify the color of a box's border.

<!-- #include src=properties/border-top-color.srb -->
<!-- #include src=properties/border-right-color.srb -->
<!-- #include src=properties/border-bottom-color.srb -->
<!-- #include src=properties/border-left-color.srb -->
<!-- #include src=properties/border-color.srb -->

<P>The <span class="propinst-border-color">'border-color'</span>
property sets the color of the four borders. <span
class="propinst-border-color">'border-color'</span> can have from one
to four values, and the values are set on the different sides as for
<span class="propinst-border-width">'border-width'</span>.

<P>If an element's border color is not specified 
with a border property, user agents must use the value
of the element's <span
class="propinst-color">'color'</span> property as the 
<a href="cascade.html#computed-value">computed value</a> 
for the border color.

<div class="example">
<P>In this  example, the border will be a solid black line.
<PRE>
  P { 
    color: black; 
    background: white; 
    border: solid;
  }
</PRE>
</div>

<H4><A name="border-style-properties">Border style</a>:
<span class="propinst-border-top-style">'border-top-style'</span>,
<span class="propinst-border-right-style">'border-right-style'</span>,
<span class="propinst-border-bottom-style">'border-bottom-style'</span>,
<span class="propinst-border-left-style">'border-left-style'</span>, and
<span class="propinst-border-style">'border-style'</span></H4>

<P>The border style properties specify the line style of a box's
border (solid, double, dashed, etc.). The properties defined in this
section refer to the <span class="index-def"
title="&lt;border-style&gt;, definition of"><a
name="value-def-border-style"><strong>&lt;border-style&gt;</strong></a></span>
value type, which make take one of the following:</p>

<dl>
<dt><strong>none</strong>
<dd>No border. This is the default value.
<dt><strong>dotted</strong>
<dd>The border is a series of dots.
<dt><strong>dashed</strong>
<dd>The border is a series of short line segments.
<dt><strong>solid</strong>
<dd>The border is a single line segment.
<dt><strong>double</strong>
<dd>The border is two solid lines. The sum of
the two lines and the space between them
equals the value of <span
class="propinst-border-width">'border-width'</span>.
<dt><strong>groove</strong>
<dd>The border looks as though it were carved
into the canvas.
<dt><strong>ridge</strong>
<dd>The opposite of 'grove': the border
looks as though it were coming out of the canvas.
<dt><strong>inset</strong>
<dd>The border makes the entire box look as though
it were embedded in the canvas.
<dt><strong>outset</strong>
<dd>The opposite of 'inset': the
order makes the entire box look as though
it were coming out of the canvas.
</dl>

<P>All borders are drawn on top of the box's background. The color of
borders drawn for values of 'groove', 'ridge', 'inset', and 'outset'
depends on the element's <span class="propinst-color">'color'</span>
property.

<P><span class="index-inst" title="conformance"><a
href="conform.html#conformance">Conforming HTML user agents</a></span> may
interpret 'dotted', 'dashed', 'double', 'groove', 'ridge',
'inset', and 'outset' to be 'solid'. 

<!-- #include src=properties/border-top-style.srb -->
<!-- #include src=properties/border-right-style.srb -->
<!-- #include src=properties/border-bottom-style.srb -->
<!-- #include src=properties/border-left-style.srb -->
<!-- #include src=properties/border-style.srb -->

<P> The <span class="propinst-border-style">'border-style'</span>
property sets the style of the four borders. It can have from one to
four values, and the values are set on the different sides as for
<span class="propinst-border-width">'border-width'</span> above.

<div class="example"><P>
<PRE>
  #xy34 { border-style: solid dotted }
</PRE>
<P> In the above example, the horizontal borders will be 'solid' and
the vertical borders will be 'dotted'.
</div>

<P> Since the initial value of the border styles is 'none', no borders
will be visible unless the border style is set.

<H4><A name="border-shortcut-properties">Border shortcut properties</a>:
<span class="propinst-border-top">'border-top'</span>,
<span class="propinst-border-bottom">'border-bottom'</span>,
<span class="propinst-border-right">'border-right'</span>,
<span class="propinst-border-left">'border-left'</span>, and
<span class="propinst-border">'border'</span></h4>

<!-- #include src=properties/border-top.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the top border of a box.

<div class="example"><P>
<PRE>
  H1 { border-bottom: thick solid red }
</PRE>

<P> The above rule will set the width, style, and color of the border
<strong>below</strong> the H1 element. Omitted values will be set to
their <a href="cascade.html#initial-value">initial values</a>:

<PRE>
  H1 { border-bottom: thick solid }
</PRE>
<P> Since the color value is omitted in the above example, the border
color will be the same as the <span class="propinst-color">
'color'</span> value of the element itself.
</div>

<P> Note that while the <span
class="propinst-border-style">'border-style'</span> property accepts
up to four values, this property only accepts one style value.

<!-- #include src=properties/border-bottom.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the bottom border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border-right.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the right border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border-left.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the left border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border.srb -->

<P> The <span class="propinst-border">'border'</span> property is a
shorthand property for setting the same width, color, and style for
all four borders of a box.  Unlike the shorthand <span
class="propinst-margin">'margin'</span> and <span
class="propinst-padding">'padding'</span> properties, the <span
class="propinst-border">'border'</span> property cannot set different
values on the four borders. To do so, one or more of the other border
properties must be used. Note that while the <span
class="propinst-border-width">'border-width'</span> property accepts
up to four length values, this property only accepts one.

<div class="example"><P>
For example, the first rule below is
equivalent to the set of four rules shown after it:

<PRE>
  P { border: solid red }
  P {
    border-top: solid red;
    border-right: solid red;
    border-bottom: solid red;
    border-left: solid red
  }
</PRE>
</div>

<P> Since, to some extent, the properties have overlapping
functionality, the order in which the rules are specified is
important.

<div class="example"><P>
Consider this example:
<PRE>
  BLOCKQUOTE {
    border-color: red;
    border-left: double;
    color: black
  }
</PRE>

<P> In the above example, the color of the left border is black,
while the other borders are red. This is due to <span
class="propinst-border-left">'border-left'</span> setting the
width, style, and color. Since the color value is not given by the
<span class="propinst-border-left">'border-left'</span> property, it
will be taken from the <span class="propinst-color">'color'</span>
property. The fact that the <span
class="propinst-color">'color'</span> property is set after the <span
class="propinst-border-left">'border-left'</span> property is not
relevant.
</div>

<H2><a name="box-width">Box width calculations</a>: the <span
	  class="propinst-width">'width'</span> property</H2>

<P>As discussed in the section on <a
href="visuren.html#box-dimensions">box dimensions</a>, the <a
href="visuren.html#content-width">content width</a> of a box is either
assigned explicitly (via the <span
class="propinst-width">'width'</span> property) or calculated
"top-down" (based on box dimensions and the available horizontal space
of its containing block). The following sections explain the
exact computation of a box's width-related properties.

<h3><a name="the-width-property">Content width</a>: the <span
class="propinst-width">'width'</span> property</H3>

<!-- #include src=properties/width.srb -->

<P> This property specifies a box's <a
href="visuren.html#content-width"> content width</a>. Values have the
following meanings:</P>

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed width.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage width. The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
<dt><strong>auto</strong>
<dd>See the section on <a href="#normal-floated">widths 
of boxes in the normal flow
and floated boxes</a>.
</dl>

<P>Negative values for <span class="propinst-width">'width'</span> are
illegal.

<div class="example"><P>
For example:

<PRE>
  IMG.icon { width: 100px }
</PRE>
</div>

<P>User agents must <a href="syndata.html#skip">skip</a> this property
for elements with <span class="propinst-display">'display'</span> set
to 'row' or 'row group'

<h3><a name="normal-floated">Widths of boxes in the normal flow and
floated boxes</a></h3>

<P>For elements in the <a href="visuren.html#normal-flow">normal
flow</a> and <a href="visuren.html#floats">floats</a>, a box's margin,
padding, border, and content width must equal the width of its <a
href="#containing-block">containing block</a>. These widths are
specified with the following seven properties: <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-border-left">'border-left'</span>, <span
class="propinst-padding-left">'padding-left'</span>, <span
class="propinst-width">'width'</span>, <span
class="propinst-padding-right">'padding-right'</span>, <span
class="propinst-border-right">'border-right'</span>, and <span
class="propinst-margin-right">'margin-right'</span>. 

<P>Three of these properties (<span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span>, and <span
class="propinst-margin-right">'margin-right'</span>) may take the
value 'auto'. All properties with 'auto' values must be assigned <a
href="cascade.html#computed-value">computed values</a> by
the user agent during layout. User agents must assign computed
values as follows.

<h4>Determining the content width</h4>

<P>When the <span class="propinst-width">'width'</span>
property has the value 'auto', user agents should
assign it a <a href="cascade.html#computed-value">computed value</a>
based on <a href="#comp-margin-widths">computed margin widths</a>.
In addition:

<ol>
<li>For element's that generated <a
href="visuren.html#inline">inline</a> boxes, the computed
value is '0'.

<li>For <a name="replaced-width"
href="conform.html#replaced-element">replaced elements</a>, user
agents should use the <a href="visuren.html#intrinsic-dim">intrinsic
width</a> of the element's <a
href="conform.html#rendered-content">rendered content</a> as the box's
<a href="cascade.html#computed-value">computed</a> width.  (Note that
for other values of <span class="propinst-width">'width'</span>, the
replaced contents may be <a href="#scaling">scaled</a>).

<li>Authors (and user agents) may specify <a
href="#min-max-widths">minimum and maximum</a> computed values for the
<span class="propinst-width">'width'</span> property via the <span
class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span> properties.
</ol>

<h4><a name="comp-margin-widths">Computing margin widths</a></h4>

<P>User agents should assign <a
href="cascade.html#computed-value">computed values</a> for <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span>, and and <span
class="propinst-margin-right">'margin-right'</span> as follows:

<ol>

<li>If exactly one of <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span> or <span
class="propinst-margin-right">'margin-right'</span> has the value 
'auto', the computed value of that property is assigned
so that the seven width properties add up to the
width of the <a href="#containing-block">containing block</a>.

<li>If none of the properties has the value 'auto', <span
class="propinst-margin-right">'margin-right'</span> is assigned a
computed value so that the seven width properties add up to the
width of the <a href="#containing-block">containing block</a>.

<li>If more than one of the three has the value 'auto', and one of
them is <span class="propinst-width">'width'</span>, than the other
two (<span class="propinst-margin-left">'margin-left'</span> and/or
<span class="propinst-margin-right">'margin-right'</span>) will be
assigned the computed value '0' and <span
class="propinst-width">'width'</span> will be assigned a computed
value so that the seven width properties add up to the width of the <a
href="#containing-block">containing block</a>.

<li>Otherwise, if both <span
class="propinst-margin-left">'margin-left'</span> and <span
class="propinst-margin-right">'margin-right'</span> have the value
'auto', they will each be assigned a computed value that is half of
the available horizontal space (this centers the box within its
containing block).
</ol>

<H3>Width of absolutely positioned elements</H3>

<P>The width of an <a
href="visuren.html#absolute-positioning">absolutely positioned</a> box
is specified via the element's <span
class="propinst-width">'width'</span> property.

<P>However, if the <span class="propinst-width">'width'</span>
property has the value 'auto', the width of the box is given by the
<span class="propinst-left">'left'</span> and <span
class="propinst-right">'right'</span> properties. Note that these take
the place of the <span
class="propinst-margin-left">'margin-left'</span> and <span
class="propinst-margin-right">'margin-right'</span> properties, which
don't apply to absolutely positioned elements.

<P>If all three properties have the value 'auto', the box has exactly
the width of the <a href="#containing-block">containing block</a>.

<H3><a name="min-max-widths">Minimum and maximum widths</a>: <span
class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span></h3>

<!-- #include src=properties/min-width.srb -->
<!-- #include src=properties/max-width.srb -->

<P>These two properties allow authors to constrain box widths to a
certain range. Values have the following meanings:

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed minimum or maximum computed width.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage for determining the computed value.
The percentage is calculated
with respect 
to the generated box's <a href="#containing-block">containing block</a>.
</dl>

<P>The following algorithm describes how the two properties influence
the <a href="cascade.html#computed-value">computed value</a>
of the <span class="propinst-width">'width'</span> property:</p>

<OL>

<LI>the <a href="#normal-floated">normal width</a> is computed
(without <span class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span>).

<LI>if the computed value of <span
class="propinst-min-width">'min-width'</span> is greater than the
value of <span class="propinst-max-width">'max-width'</span>, <span
class="propinst-max-width">'max-width'</span> should be set to the
value of <span class="propinst-min-width">'min-width'</span>.

<LI>if the computed width is greater than <span
class="propinst-max-width">'max-width'</span>, the computed value of
<span class="propinst-width">'width'</span> is set to the value of
<span class="propinst-max-width">'max-width'</span>.

<LI>if the computed width is smaller than <span
class="propinst-min-width">'min-width'</span>, the computed value of
<span class="propinst-width">'width'</span> is set to the value of
<span class="propinst-min-width">'min-width'</span>.

</OL>

<H2><a name="box-height">Box height calculations</a>: the <span
class="propinst-height">'height'</span> property</H2>

<P>The height of a box is the minimal height necessary to include the
vertical content of the element and that of all its flowed children
(see also the section on <a href="#min-max-heights">minimum and
maximum heights</a>). This is the height necessary <em>before</em> any
relative offset of children.

<P>However, the height of an element may be set explicitly with
the <span class="propinst-height">'height'</span> property.

<!-- #include src=properties/height.srb -->

<P> This property can be applied to text, but it is most useful with
replaced elements such as images. 

<div class="example"><P>
<PRE>
  IMG.icon { height: 100px }
</PRE>
</div>

<P> If the <span class="propinst-width">'width'</span> and <span
class="propinst-height">'height'</span> of a replaced element are both
'auto', these properties will be set to the intrinsic dimensions of
the element.

<P> If applied to a textual element, the height can be enforced by the
user interface (e.g., a scrollbar).

<P> Negative values for <span class="propinst-height">'height'</span>
are illegal.

<P> See the section on <a href="#scaling">scaling</a> for information about
setting aspect ratios.

<!-- Ian: Is this true??? -->
<P>User agents may consider the value of the <span
class="propinst-height">'height'</span> property to be 'auto' if the
element is not a replaced element.

<H3>Height of replaced elements</H3>

<P>The height of a replaced element is calculated in a way analogous
to the calculation of the <a href="#replaced-width">width of a
replaced element</a>.

<H3>Height of absolutely positioned elements</H3>

<P>The height of an absolutely positioned element's box is specified
with the <span class="propinst-height">'height'</span> property. A
percentage value for the <span class="propinst-height">'height'</span>
property is computed with respect to the height of the parent
element. However, specifying a percentage value for <span
class="propinst-height">'height'</span> when the parent element's height
is set to 'auto' results in undefined behavior.

<P>If the <span class="propinst-height">'height'</span> has the
value 'auto', the height of the box is given by the <span
class="propinst-top">'top'</span> and <span
class="propinst-bottom">'bottom'</span> properties. Note that these take
the place of the <span
class="propinst-margin-top">'margin-top'</span> and <span
class="propinst-margin-bottom">'margin-bottom'</span> properties, which
don't apply to absolutely positioned elements.

<P>If all three properties have the value 'auto', the box has
exactly the height of the inherited reference box.

<H3><a name="min-max-heights">Minimum and maximum heights</a>: <span
class="propinst-min-height">'min-height'</span> and <span
class="propinst-max-height">'max-height'</span></h3>


<P>It is sometimes useful to constrain the height of elements to a
certain range. Two properties offer this functionality:

<!-- #include src=properties/min-height.srb -->
<!-- #include src=properties/max-height.srb -->

<P>This algorithm describes how the two properties influence the height
calculations:

<OL>

<LI>the normal height calculations (without 'min-height' and 'max-height')
are performed and the calculated height is found

<LI>if the value of 'min-height' is greater than the value of
'max-height', 'max-height' should be set to the value of 'min-height'

<LI>if the calculated height is greater than 'max-height', the
value of 'height' is set to 'max-height'. Goto step 1.

<LI>if the calculated height is smaller than 'min-height', the
value of 'height' is set to 'min-height'. Goto step 1.

<LI>terminate

</OL>

<P>When the algorithm terminates, use the calculated height as the
height of the element.



<!-- 

<P>If <span class="propinst-height">'height'</span> goes below the minimum
height, either because it was set explicitly, or because it was 'auto'
and the box height calculations would make it too small, the value will
be replaced with the minimum value instead.

<P>Similarly, if an element's <span
class="propinst-height">'height'</span> goes beyond the height of its
parent or reference box, either because it was set explicitly,
or because it was 'auto' and the box height calculations would make it
too large, the value will be replaced by either the height of the
parent or reference box, or the value set by <span
class="propinst-max-height">'max-height'</span>, whichever is smaller.

-->

<H3><a name="collapsing-margins">Collapsing margins</a></H3>

<P>In CSS2, horizontal margins never collapse.

<P>Vertical margins may collapse. Two or more adjoining vertical
margins (i.e., with no border, padding or content between them) are
collapsed to use the maximum of the margin values. In most cases,
after collapsing the vertical margins the result is visually more
pleasing and closer to what the designer expects. Please consult the
<a href="./visuren.html#mpb-examples">examples of margin, padding, and
borders</a> for an illustration of collapsed margins.

<P> In the case of negative margins, the absolute maximum of the
negative adjoining margins is deducted from the maximum of the
positive adjoining margins. If there are no positive margins, the
absolute maximum of the negative adjoining margins is deducted from
zero.

<H3><a name="containing-block">Containing blocks</a></H3>

<P>In CSS2, all box positions are calculated with respect to the inner
edges of a rectangular box called a <span class="index-def"
title="containing block"><dfn>containing block</dfn></span>. 

<P>The root of the <a href="conform.html#doctree">document tree</a>
generates a box that serves as the <span class="index-def"
title="initial containing block|containing block::initial"><a
name="initial-containing-block"><dfn>initial containing
block</dfn></a></span> for subsequent layout. If the <span
class="propinst-width">'width'</span> property for the root element
has the value 'auto', the user agent supplies an initial width (e.g.,
the user agent uses the current width of the <a
href="visuren.html#viewport">viewport</a>).

<P>The initial containing block cannot be positioned (i.e., user
agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-position">'position'</span> property) or floated
(i.e., user agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-float">'float'</span> property).

<P>The containing block for an box other than the root box determined
as follows:

<ul>
<li> If a box has no parent, then it has no containing block
<li> Otherwise, if the value of the <span
class="propinst-position">'position'</span> property for the parent
element is anything but 'normal' then the containing block is established
by the parent box's padding edge.
<li> Otherwise, if the value of the <span
class="propinst-display">'display'</span> property for the parent
element is anything but 'inline' then the containing block is
established by the parent box's padding edge.
<li> Otherwise, the containing block is the parent's containing block.
</ul>

<P>When the containing block is established by a <a
href="visuren.html#block-level">block-level</a> box, it has the same
width, height, and position as the content and padding area of the
block-level box. When the containing block is established by an <a
href="visuren.html#inline">inline</a> box, it has the same width,
height, and position as the content and padding area of the first <a
href="#line-box">line box</a> generated by the inline box.

<P>For example, for an inline element like EM, the containing block is
typically the enclosing paragraph (P). On the other hand, the
containing block of a positioned element is the element relative to
which it is positioned.

<P>Inline elements with 'position: relative' form a special group of
containing blocks; they are not block-level elements and -- if they
span several lines -- they are not rectangular. The "starting" point
for relative offsets in a containing block established by inline
elements is the top left corner of the first line box for
left-to-right scripts and the top right corner for right-to-left
scripts. 

<!-- The secondary direction in CSS2 is top-to-bottom.

[HWL: add figure]

-->

<H2><a name="scaling">Scaling</a></h2>

<P>If necessary, user agents may enforce an element's width and height
by scaling it. When scaling, the aspect ratio of the image is
preserved if values for the <span
class="propinst-width">'width'</span> and <span
class="propinst-height">'height'</span> properties are set to 'auto'.

<P>Authors may also specify a different aspect ratio that should be
preserved in scaling with the following property.

<H2><a name="line-height">Line height calculations</a>: the <span
class="propinst-line-height">'line-height'</span> and <span
class="propinst-vertical-align">'vertical-align'</span>
properties</H2>

<P>As described in the section on <a
href="visuren.html#block-formatting">block formatting
contexts</a>, user agents flow inline boxes horizontally into a series
of <a name="line-box">line boxes</a>. Each line box is a rectangle whose width is defined by
the first enclosing block element (see the section on <a
href="visudet.html#box-width">box width calculations</a>)

<P>The line box height is determined as follows. All elements have the
<span class="propinst-line-height">'line-height'</span> property,
which has the following meaning:

<ul>
<li>If the property is set on a block-level element, it
specifies the <em>minimal</em> line height for all lines of text
generated by the element.
<li>If the property is set on an inline element, it
specifies the <em>exact</em> line height for the element's inline box.
</ul>

<p>Since several inline elements may generate inline boxes on the same
line, the final height of a given line box is the maximum of the
minimal line height specified for the parent block-level element and
the heights required by all inline boxes on the current line. Replaced
elements that create inline boxes (e.g., inline images) also affect
the line height, but via the <span
class="propinst-height">'height'</span> and <span
class="propinst-vertical-align">'vertical-align'</span> properties,
not the <span class="propinst-line-height">'line-height'</span>
property. Replaced elements increase the line box height if the top of
the replaced element (i.e., including all of its padding, border and
margin) is above the tallest text section, or if the bottom is below
the lowest.

<P>When text on a line is smaller than the line box height, space may
be added above and below the text. For example, if the text is 12pt
high and the current line height is '14pt', 2pts of extra space is
added, namely 1pt above and 1pt below the line. Empty elements
influence these calculations just like elements with content.

<P>The difference between the font size and the line height is called
the <span class="index-def"
title="leading"><EM>leading</EM></span>. Half the leading is called
the <span class="index-def"
title="half-leading"><EM>half-leading</EM></span>. If a line of text
contains inline elements with different <span
class="propinst-line-height">'line-height'</span> values, then each
inline element has its own half-leading above and below.

<P>Note that the top and bottom of a line box do not necessarily
correspond to the tallest element, since elements can be positioned
vertically with the <span
class="propinst-vertical-align">'vertical-align'</span> property.
<!-- Give an example/drawing-->

<P>Padding, borders, or margins above and below non-replaced inline
elements do not influence the height of the line. In other words: if
the <span class="propinst-line-height">'line-height'</span> is too
small for the chosen padding or border, it will overlap with text on
other lines.

<P> In the normal case, when there is only one value of <span
class="propinst-line-height">'line-height'</span> throughout a
paragraph, and no tall images, the above definition will ensure that
baselines of successive lines are exactly <span
class="propinst-line-height">'line-height'</span> apart. This is
important when columns of text in different fonts have to be aligned,
for example in a table.

<P> Note that this doesn't prevent text on two adjacent lines from
overlapping. The <span
class="propinst-line-height">'line-height'</span> may be smaller than
the height of the text, in which case the leading will be
negative. This is useful if you know that the text will contain no
descenders (e.g., because it only contains uppercase), so the lines
can be put closer together.

<!-- #include src=properties/line-height.srb -->

<P> The property sets the distance between the baselines
of two adjacent lines.

<P> When a <span class="value-inst-number">&lt;number&gt;</span>, the
line height is given by the font size of the current element
multiplied by the <span
class="value-inst-number">&lt;number&gt;</span>. This differs from a
<span class="value-inst-percentage">&lt;percentage&gt;</span> value in
the way it inherits: when a <span
class="value-inst-number">&lt;number&gt;</span> value is specified,
child elements will inherit the factor itself, not the resultant value
(as is the case with <span
class="value-inst-percentage">&lt;percentage&gt;</span> and other
units).

<P> Negative values are illegal.

<div class="example"><P>
The three rules in the example below have the same resultant line height:

<PRE>
  DIV { line-height: 1.2; font-size: 10pt }     /* number */
  DIV { line-height: 1.2em; font-size: 10pt }   /* length */
  DIV { line-height: 120%; font-size: 10pt }    /* percentage */
</PRE>
</div>

<P> A value of 'normal' sets the <span
class="propinst-line-height">'line-height'</span> to a reasonable
value for the element's font. It is suggested that UAs set the
'normal' value to be a number in the range of 1.0 to 1.2.

<!-- <length> added from frosting -->

<!-- #include src=properties/vertical-align.srb -->

<P>The property affects the vertical positioning of the element. Some
	    of the possible values refer to the parent element:

  <DL>
    <DT>
      'baseline'
    <DD>
      align the baseline of the element (or the bottom, if the element doesn't
      have a baseline) with the baseline of the parent
    <DT>
      'middle'
    <DD>
      align the vertical midpoint of the element (typically an image) with the
      baseline plus half the x-height of the parent
    <DT>
      'sub'
    <DD>
      subscript the element. This value has no effect on the font size
	      of the element's text.
    <DT>
      'super'
    <DD>
      superscript the element. This value has no effect on the font size
	      of the element's text.
    <DT>
      'text-top'
    <DD>
      align the top of the element with the top of the parent element's font
    <DT>
      'text-bottom'
    <DD>
      align the bottom of the element with the bottom of the parent element's font
  </DL>

<P> Other possible values refer to the formatted line that
the element is a part of:

  <DL>
    <DT>
      'top'
    <DD>
      align the top of the element with the tallest element on the line
    <DT>
      'bottom'
    <DD>
      align the bottom of the element with the lowest element on the line
  </DL>

<P> Using the 'top' and 'bottom' alignment, unsolvable situations can
occur where element dependencies form a loop.

<P> Percentage values refer to the value of the <span
class="propinst-line-height">'line-height'</span> property of the
element itself. They raise the baseline of the element (or the bottom,
if it has no baseline) the specified amount above the baseline of the
parent.  Negative values are possible, e.g., a value of '-100%' will
lower the element so that the baseline of the element ends up where
the baseline of the next line should have been. This allows precise
control over the vertical position of elements (such as images that
are used in place of letters) that don't have a baseline.

<H2><a name="floating-constraints">Floating constraints</a></H2>

<P> A floating element is positioned subject to the following
constraints (see the section on <a
href="./visuren.html#box-dimensions">box dimensions</a> for an
explanation of the terms):

<OL>
<LI> The left outer edge of a left-floating element may not be to the
left of the left inner edge of its parent element. The analogous rules
hold for right floating elements.

<LI> The left outer edge of a left floating element must be to the
right of the right outer edge of every earlier (in the HTML source)
left-floating element or the top of the former must be lower than the
bottom of the latter. The analogous rules hold for right floating
elements.

<LI> The right outer edge of a left-floating element may not be to the
right of the left outer edge of any right-floating element that is to
the right of it. The analogous rules
hold for right floating elements.

<LI> A floating element's top may not be higher than the inner top of
its parent.

<LI> A floating element's top may not be higher than the top of any
earlier floating or block-level element.

<LI> A floating element's top may not be higher than the top of any
<span class="index-inst" title="line-box">line-box</span> (see the
section on <a href="#line-height">line height calculations</a>) with
content that precedes the floating element in the HTML source.

<LI> A floating element must be placed as high as possible.

<LI> A left-floating element must be put as far to the left as
possible, a right-floating element as far to the right as possible. A
higher position is preferred over one that is further to the
left/right.
</OL>

<P>Elements that are after the floating element will overlap.
</BODY>
</HTML>

