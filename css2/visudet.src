<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: visudet.src,v 1.47 1998-01-29 00:49:43 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Visual rendering model details</TITLE>
<LINK rel="next" href="visufx.html">
<LINK rel="previous" href="visuren.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Visual rendering model details</H1>
<H2>Margin, border, and padding properties</h2> 

<P>The following sections include the definitions
of box properties and other details about box generation.

<H3><a name="margin-properties">Margin properties</a>:
<span class="propinst-margin-top">'margin-top'</span>, 
<span class="propinst-margin-right">'margin-right'</span>, 
<span class="propinst-margin-bottom">'margin-bottom'</span>,
<span class="propinst-margin-left">'margin-left'</span>, and
<span class="propinst-margin">'margin'</span></H3>

<P>Margin properties specify the width of the <a
href="visuren.html#box-margin-area">margin area</a> of a box.  The
<span class="propinst-margin">'margin'</span> shorthand property sets
the margin for all four sides while the other margin properties only
set their respective side. These properties apply to all elements
generating <a href="visuren.html#block-level">block-level</a> boxes \
that are not <a href="visuren.html#absolute-positioning">absolutely
positioned</a> and they apply to elements for which <span
class="propinst-display">'display'</span> is set to 'caption'.

<P>The properties defined in this section refer to the <span
class="index-def" title="&lt;margin-width&gt;::definition of"><a
name="value-def-margin-width"><strong>&lt;margin-width&gt;</strong></a></span>
value type, which may take one of the following values:

<dl>
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>Specifies a fixed width.
<dt><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span>
<dd>Specifies a percentage width. The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
<dt><strong>auto</strong>
<dd>See the section on <a href="#box-width">box width calculations</a>
for behavior.
</dl>

<P>Negative values for margin properties are allowed, but there may be
implementation-specific limits.  Percentage values for margin
properties refer to the width of the generated box's <a
href="#containing-block">containing block</a>.

<!-- #include src=properties/margin-top.srb -->

<P>This property sets the top margin of a generated box.

<div class="example"><P>
<PRE>
  H1 { margin-top: 2em }
</PRE>
</div>

<!-- #include src=properties/margin-right.srb -->


<P>This property sets the right margin of a generated box.

<div class="example"><p>
<PRE>
  H1 { margin-right: 12.3% }
</PRE>
</div>

<!-- #include src=properties/margin-bottom.srb -->

<P> This property sets the bottom margin of a generated box. 

<div class="example"><P>
<PRE>
  H1 { margin-bottom: 3px }
</PRE>
</div>

<!-- #include src=properties/margin-left.srb -->

<P> This property sets the left margin of a generated box.

<div class="example"><P>
<PRE>
  H1 { margin-left: 2em }
</PRE>
</div>

<!-- #include src=properties/margin.srb -->

<P> The <span class="propinst-margin">'margin'</span> property is a
shorthand property for setting <span
class="propinst-margin-top">'margin-top'</span>, <span
class="propinst-margin-right">'margin-right'</span> <span
class="propinst-margin-bottom">'margin-bottom'</span> and <span
class="propinst-margin-left">'margin-left'</span> at the same place in
the style sheet.

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom margins
are set to the first value and the right and left margins are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<div class="example"><P>
<PRE>
  BODY { margin: 2em } /* all margins set to 2em */
  BODY { margin: 1em 2em } /* top &amp; bottom = 1em, right &amp; left = 2em */
  BODY { margin: 1em 2em 3em } /* top=1em, right=2em, bottom=3em, left=2em */
</PRE>

<P> The last rule of the example above is equivalent to the example
below:

<PRE>
  BODY {
    margin-top: 1em;
    margin-right: 2em;
    margin-bottom: 3em;
    margin-left: 2em;        /* copied from opposite side (right) */
  }
</PRE>
</div>

<H3><a name="padding-properties">Padding properties</a>:
<span class="propinst-padding-top">'padding-top'</span>,
<span class="propinst-padding-right">'padding-right'</span>,
<span class="propinst-padding-bottom">'padding-bottom'</span>,
<span class="propinst-padding-left">'padding-left'</span>, and
<span class="propinst-padding">'padding'</span>
</H3> 

<P>The padding properties specify the width of the <a
href="visuren.html#box-content-area">content area</a> of a box. The <span
class="propinst-padding">'padding'</span> shorthand property sets the
padding for all four sides while the other padding properties only set
their respective side. These properties apply to all elements.

<P>The properties defined in this section refer to the <span
class="index-def" title="&lt;padding-width&gt;::definition of"><a
name="value-def-padding-width"><strong>&lt;padding-width&gt;</strong>
</a></span> value type, which may take one of the following values:</p>

<dl>
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>Specifies a fixed width.
<dt><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span>
<dd>Specifies a percentage width.
The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
</dl>

<P>Unlike margin properties, values for padding values cannot be
negative. Like margin properties, percentage values for padding
properties refer to the width of the generated box's containing block.

<!-- #include src=properties/padding-top.srb -->

<P> This property sets the top padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-top: 0.3em }
</PRE>
</div>

<!-- #include src=properties/padding-right.srb -->

<P> This property sets the right padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-right: 10px }
</PRE>
</div>

<!-- #include src=properties/padding-bottom.srb -->

<P> This property sets the bottom padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-bottom: 2em }
</PRE>
</div>

<!-- #include src=properties/padding-left.srb -->

<P> This property sets the left padding of a generated box.

<div class="example"><P>
<PRE>
  BLOCKQUOTE { padding-left: 20% }
</PRE>
</div>

<!-- #include src=properties/padding.srb -->

<P> The <span class="propinst-padding">'padding'</span> property is a
shorthand property for setting <span
class="propinst-padding-top">'padding-top'</span>, <span
class="propinst-padding-right">'padding-right'</span>, <span
class="propinst-padding-bottom">'padding-bottom'</span>, and <span
class="propinst-padding-left">'padding-left'</span> at the same place
in the style sheet.

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom paddings
are set to the first value and the right and left paddings are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<P> The surface color or image of the padding area is specified via
the <span class="propinst-background">'background'</span> property:

<div class="example"><P>
<PRE>
  H1 { 
    background: white; 
    padding: 1em 2em;
  } 
</PRE>

<P> The example above specifies a '1em' vertical padding (<span
class="propinst-padding-top">'padding-top'</span> and <span
class="propinst-padding-bottom">'padding-bottom'</span>) and a '2em'
horizontal padding (<span
class="propinst-padding-right">'padding-right'</span> and <span
class="propinst-padding-left">'padding-left'</span>). The 'em' unit is
<a href="syndata.html#absrel-units">relative</a> 
to the element's font size: '1em' is equal to the size of the
font in use.
</div>

<H3><a name="border-properties">Border properties</a></H3>

<P>The border properties specify the width, color, and style of the <a
href="visuren.html#box-border-area">border area</a> of a box. These
properties apply to all elements.

<H4><a name="border-width-properties">Border width</A>: <span
class="propinst-border-top-width">'border-top-width'</span>, <span
class="propinst-border-right-width">'border-right-width'</span>, <span
class="propinst-border-bottom-width">'border-bottom-width'</span>,
<span class="propinst-border-left-width">'border-left-width'</span>, and
<span class="propinst-border-width">'border-width'</span></H4>

<P>The border width properties specify the width of the <a
href="visuren.html#box-border-area">border area</a>.  The properties
defined in this section refer to the <span class="index-def"
title="&lt;border-width&gt;::definition of"><a
name="value-def-border-width"
class="value-def"><strong>&lt;border-width&gt;</strong></a></span>
value type, which may take one of the following values:</P>

<dl>
<dt><strong>thin</strong>
<dd>A thin border.
<dt><strong>medium</strong>
<dd>A medium border.
<dt><strong>thick</strong>
<dd>A thick border.
<dt><span class="value-inst-length"><strong>&lt;length&gt;</strong></span>
<dd>The border's thickness has an explicit value. Explicit
border widths cannot be negative.
</dl>

<P>The interpretation of the first three values depends on the user
agent. The following relationships must hold, however:

<P>'thin' &lt;='medium' &lt;= 'thick'.  

<P>Furthermore, these widths must be constant throughout a document.

<!-- #include src=properties/border-top-width.srb -->

<P> This property sets the width of the top border of a box.

<div class="example"><P>
<PRE>
  H1 { border: solid thick red }
  P  { border: solid thick blue }
</PRE>

<P> In the example above, H1 and P elements will have the same
border width regardless of font size. To achieve relative widths, the
'em' unit can be used:

<PRE>
  H1 { border: solid 0.5em }
</PRE>
</div>

<!-- #include src=properties/border-right-width.srb -->

<P> This property sets the width of the right
border of a box.

<!-- #include src=properties/border-bottom-width.srb -->

<P> This property sets the width of the bottom border of
a box.

<!-- #include src=properties/border-left-width.srb -->

<P> This property sets the width of the left border 
of a box.

<!-- #include src=properties/border-width.srb -->

<P> This property is a shorthand property for setting
<span class="propinst-border-top-width">'border-top-width'</span>, 
<span class="propinst-border-right-width">'border-right-width'</span>, 
<span class="propinst-border-bottom-width">'border-bottom-width'</span>,
 and
<span class="propinst-border-left-width">'border-left-width'</span> at
the same place in the style sheet. 

<P> If there is only one value, it applies to all
sides. If there are two values, the top and bottom borders
are set to the first value and the right and left are
set to the second. If there are three values, the top is
set to the first value, the left and right are set to the
second, and the bottom is set to the third. If there are
four values, they apply to the top, right, bottom, and left,
respectively.

<div class="example"><P>
In the examples below, the comments indicate the resulting widths
of the top, right, bottom and left borders:

<PRE>
  H1 { border-width: thin }                   /* thin thin thin thin */
  H1 { border-width: thin thick }             /* thin thick thin thick */
  H1 { border-width: thin thick medium }      /* thin thick medium thick */
</PRE>
</div>

<H4><A name="border-color-properties">Border color</A>:
<span class="propinst-border-top-color">'border-top-color'</span>,
<span class="propinst-border-right-color">'border-right-color'</span>,
<span class="propinst-border-bottom-color">'border-bottom-color'</span>,
<span class="propinst-border-left-color">'border-left-color'</span>, and
<span class="propinst-border-color">'border-color'</span>
</H4>

<P>The border color properties specify the color of a box's border.

<!-- #include src=properties/border-top-color.srb -->
<!-- #include src=properties/border-right-color.srb -->
<!-- #include src=properties/border-bottom-color.srb -->
<!-- #include src=properties/border-left-color.srb -->
<!-- #include src=properties/border-color.srb -->

<P>The <span class="propinst-border-color">'border-color'</span>
property sets the color of the four borders. <span
class="propinst-border-color">'border-color'</span> can have from one
to four values, and the values are set on the different sides as for
<span class="propinst-border-width">'border-width'</span>.

<P>If an element's border color is not specified 
with a border property, user agents must use the value
of the element's <span
class="propinst-color">'color'</span> property as the 
<a href="cascade.html#computed-value">computed value</a> 
for the border color.

<div class="example">
<P>In this  example, the border will be a solid black line.
<PRE>
  P { 
    color: black; 
    background: white; 
    border: solid;
  }
</PRE>
</div>

<H4><A name="border-style-properties">Border style</a>:
<span class="propinst-border-top-style">'border-top-style'</span>,
<span class="propinst-border-right-style">'border-right-style'</span>,
<span class="propinst-border-bottom-style">'border-bottom-style'</span>,
<span class="propinst-border-left-style">'border-left-style'</span>, and
<span class="propinst-border-style">'border-style'</span></H4>

<P>The border style properties specify the line style of a box's
border (solid, double, dashed, etc.). The properties defined in this
section refer to the <span class="index-def"
title="&lt;border-style&gt;, definition of"><a
name="value-def-border-style"><strong>&lt;border-style&gt;</strong></a></span>
value type, which make take one of the following:</p>

<dl>
<dt><strong><span class="index-def" title="'none'::as border style"><a name="value-def-none" class="value-def">none</a></span></strong>
<dd>No border.
<dt><strong><span class="index-def" title="'hidden'"><a name="value-def-hidden" class="value-def">hidden</a></span></strong>
<dd>Same as 'none', except in <a
href="tables.html#border-conflict-resolution">tables</a>.
<dt><strong><span class="index-def" title="'dotted'"><a name="value-def-dotted" class="value-def">dotted</a></span></strong>
<dd>The border is a series of dots.
<dt><strong><span class="index-def" title="'dashed'"><a name="value-def-dashed" class="value-def">dashed</a></span></strong>
<dd>The border is a series of short line segments.
<dt><strong><span class="index-def" title="'solid'"><a name="value-def-solid" class="value-def">solid</a></span></strong>
<dd>The border is a single line segment.
<dt><strong><span class="index-def" title="'double'"><a name="value-def-double" class="value-def">double</a></span></strong>
<dd>The border is two solid lines. The sum of
the two lines and the space between them
equals the value of <span
class="propinst-border-width">'border-width'</span>.
<dt><strong><span class="index-def" title="'groove'"><a name="value-def-groove" class="value-def">groove</a></span></strong>
<dd>The border looks as though it were carved
into the canvas.
<dt><strong><span class="index-def" title="'ridge'"><a name="value-def-ridge" class="value-def">ridge</a></span></strong>
<dd>The opposite of 'grove': the border
looks as though it were coming out of the canvas.
<dt><strong><span class="index-def" title="'inset'"><a name="value-def-inset" class="value-def">inset</a></span></strong>
<dd>The border makes the entire box look as though
it were embedded in the canvas.
<dt><strong><span class="index-def" title="'outset'"><a name="value-def-outset" class="value-def">outset</a></span></strong>
<dd>The opposite of 'inset': the
order makes the entire box look as though
it were coming out of the canvas.
</dl>

<P>All borders are drawn on top of the box's background. The color of
borders drawn for values of 'groove', 'ridge', 'inset', and 'outset'
depends on the element's <span class="propinst-color">'color'</span>
property.

<P><span class="index-inst" title="conformance"><a
href="conform.html#conformance">Conforming HTML user agents</a></span> may
interpret 'dotted', 'dashed', 'double', 'groove', 'ridge',
'inset', and 'outset' to be 'solid'. 

<!-- #include src=properties/border-top-style.srb -->
<!-- #include src=properties/border-right-style.srb -->
<!-- #include src=properties/border-bottom-style.srb -->
<!-- #include src=properties/border-left-style.srb -->
<!-- #include src=properties/border-style.srb -->

<P> The <span class="propinst-border-style">'border-style'</span>
property sets the style of the four borders. It can have from one to
four values, and the values are set on the different sides as for
<span class="propinst-border-width">'border-width'</span> above.

<div class="example"><P>
<PRE>
  #xy34 { border-style: solid dotted }
</PRE>
<P> In the above example, the horizontal borders will be 'solid' and
the vertical borders will be 'dotted'.
</div>

<P> Since the initial value of the border styles is 'none', no borders
will be visible unless the border style is set.

<H4><A name="border-shorthand-properties">Border shorthand properties</a>:
<span class="propinst-border-top">'border-top'</span>,
<span class="propinst-border-bottom">'border-bottom'</span>,
<span class="propinst-border-right">'border-right'</span>,
<span class="propinst-border-left">'border-left'</span>, and
<span class="propinst-border">'border'</span></h4>

<!-- #include src=properties/border-top.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the top border of a box.

<div class="example"><P>
<PRE>
  H1 { border-bottom: thick solid red }
</PRE>

<P> The above rule will set the width, style, and color of the border
<strong>below</strong> the H1 element. Omitted values will be set to
their <a href="cascade.html#initial-value">initial values</a>:

<PRE>
  H1 { border-bottom: thick solid }
</PRE>
<P> Since the color value is omitted in the above example, the border
color will be the same as the <span class="propinst-color">
'color'</span> value of the element itself.
</div>

<P> Note that while the <span
class="propinst-border-style">'border-style'</span> property accepts
up to four values, this property only accepts one style value.

<!-- #include src=properties/border-bottom.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the bottom border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border-right.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the right border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border-left.srb -->

<P> This is a shorthand property for setting the width, style, and
color of the left border of a box. Otherwise, it behaves like <span
class="propinst-border-top">'border-top'</span>.

<!-- #include src=properties/border.srb -->

<P> The <span class="propinst-border">'border'</span> property is a
shorthand property for setting the same width, color, and style for
all four borders of a box.  Unlike the shorthand <span
class="propinst-margin">'margin'</span> and <span
class="propinst-padding">'padding'</span> properties, the <span
class="propinst-border">'border'</span> property cannot set different
values on the four borders. To do so, one or more of the other border
properties must be used. Note that while the <span
class="propinst-border-width">'border-width'</span> property accepts
up to four length values, this property only accepts one.

<div class="example"><P>
For example, the first rule below is
equivalent to the set of four rules shown after it:

<PRE>
  P { border: solid red }
  P {
    border-top: solid red;
    border-right: solid red;
    border-bottom: solid red;
    border-left: solid red
  }
</PRE>
</div>

<P> Since, to some extent, the properties have overlapping
functionality, the order in which the rules are specified is
important.

<div class="example"><P>
Consider this example:
<PRE>
  BLOCKQUOTE {
    border-color: red;
    border-left: double;
    color: black
  }
</PRE>

<P> In the above example, the color of the left border is black,
while the other borders are red. This is due to <span
class="propinst-border-left">'border-left'</span> setting the
width, style, and color. Since the color value is not given by the
<span class="propinst-border-left">'border-left'</span> property, it
will be taken from the <span class="propinst-color">'color'</span>
property. The fact that the <span
class="propinst-color">'color'</span> property is set after the <span
class="propinst-border-left">'border-left'</span> property is not
relevant.
</div>

<H2><a name="containing-block">Containing blocks</a></H2>

<P>In CSS2, all box positions are calculated with respect to the edges
of a rectangular box called a <span class="index-def"
title="containing block"><dfn>containing block</dfn></span>.

<P>The root of the <a href="conform.html#doctree">document tree</a>
generates a box that serves as the <span class="index-def"
title="initial containing block|containing block::initial"><a
name="initial-containing-block"><dfn>initial containing
block</dfn></a></span> for subsequent layout. If the <span
class="propinst-width">'width'</span> property for the root element
has the value 'auto', the user agent supplies an initial width (e.g.,
the user agent uses the current width of the <a
href="visuren.html#viewport">viewport</a>).

<P>The initial containing block cannot be positioned (i.e., user
agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-position">'position'</span> property) or floated
(i.e., user agents <a href="syndata.html#skip">skip</a> the <span
class="propinst-float">'float'</span> property).

<P>The containing block for an box other than the root box determined
as follows:</p>

<ul>
<li>If the value of the <span
class="propinst-position">'position'</span> property for the parent
element is anything but 'normal' then the containing block is established
by the parent box.
<li>Otherwise, if the value of the <span
class="propinst-display">'display'</span> property for the parent
element is anything but 'inline' then the containing block is
established by the parent box.
<li>Otherwise, the containing block is the parent's containing block.
</ul>

<P>When the containing block is established by a <a
href="visuren.html#block-level">block-level</a> box, it has the same
width, height, and position as the parent's <a
href="visuren.html#padding-edge">padding edge</a>. When the containing
block is established by an <a href="visuren.html#inline">inline</a>
box, it has the same width, height, and position as the <a
href="visuren.html#padding-edge">padding edge</a> of the first <a
href="visuren.html#line-box">line box</a> generated by the inline box.

<P><a href="visuren.html#relative-positioning">Relatively
positioned</a> <a href="visuren.html#inline">inline</a> boxes must be
considered specially since (1) the <a
href="conform.html#rendered-content">rendered content</a> of an inline
element may not be rectangular in shape but (2) a relatively
positioned box establishes a new containing block and containing
blocks must be rectangular. The reference edges for descendants
are the following:</p>

<ul>
<li>For left-to-right scripts, the left and top edges are those
of the first line box. The bottom and right edges are undefined
in this case.
<li>For right-to-left scripts, the right and top edges are those
of the first line box. The bottom and left edges are undefined
in this case.
</ul>

<!-- The secondary direction in CSS2 is top-to-bottom.
[HWL: add figure]
-->

<H2><a name="box-width">Box width calculations</a></H2>

<P>As discussed in the section on <a
href="visuren.html#box-dimensions">box dimensions</a>, the <a
href="visuren.html#content-width">content width</a> of a box is either
assigned explicitly (via the <span
class="propinst-width">'width'</span> property) or calculated
"top-down" (based on box dimensions and the available horizontal space
of its containing block). The following sections explain the
exact computation of a box's width-related properties.

<h3><a name="the-width-property">Content width</a>: the <span
class="propinst-width">'width'</span> property</H3>

<!-- #include src=properties/width.srb -->

<P> This property specifies a box's <a
href="visuren.html#content-width">content width</a>. Values have the
following meanings:</P>

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed width.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage width. The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
<dt><strong>auto</strong>
<dd>See the section on <a href="#normal-floated">widths 
of boxes in the normal flow
and floated boxes</a>.
</dl>

<P>Negative values for <span class="propinst-width">'width'</span> are
illegal. User agents must <a href="syndata.html#skip">skip</a> this
property for elements with <span
class="propinst-display">'display'</span> set to 'row' or 'row-span'

<div class="example"><P>
For example:

<PRE>
  IMG.icon { width: 100px }
</PRE>
</div>

<h3><a name="normal-floated">Widths of boxes in the normal flow and
floated boxes</a></h3>

<P>The <span class="propinst-width">'width'</span> property does not
apply to non-replaced <a href="visuren.html#inline">inline</a>
elements. The width of the <a href="visuren.html#line-box">line boxes</a> is
determined by their <a href="#containing-block">containing block</a>.

<P>For other types of boxes in the <a
href="visuren.html#normal-flow">normal flow</a> and <a
href="visuren.html#floats">floats</a>, a box's margin, padding,
border, and content width must equal the width of its <a
href="#containing-block">containing block</a>. These widths are
specified with the following seven properties: <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-border-left">'border-left'</span>, <span
class="propinst-padding-left">'padding-left'</span>, <span
class="propinst-width">'width'</span>, <span
class="propinst-padding-right">'padding-right'</span>, <span
class="propinst-border-right">'border-right'</span>, and <span
class="propinst-margin-right">'margin-right'</span>.

<P>Three of these properties (<span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span>, and <span
class="propinst-margin-right">'margin-right'</span>) may take the
value 'auto'. All properties with 'auto' values must be assigned <a
href="cascade.html#computed-value">computed values</a> by
the user agent during layout. User agents must assign computed
values as follows.

<h4>Determining the content width</h4>

<P>When the <span class="propinst-width">'width'</span>
property has the value 'auto', user agents should
assign it a <a href="cascade.html#computed-value">computed value</a>
based on <a href="#comp-margin-widths">computed margin widths</a>.
In addition:</p>

<ol>
<li>For <a
href="visuren.html#inline">inline</a> elements and those that
generate <a
href="visuren.html#floats">floating</a> boxes, the computed value is
'0'.

<li>For <a href="conform.html#replaced-element">replaced elements</a>,
user agents should use the <a
href="visuren.html#intrinsic-dim">intrinsic width</a> of the element's
<a href="conform.html#rendered-content">rendered content</a> as the
box's <a href="cascade.html#computed-value">computed</a> width.  (Note
that for other values of <span class="propinst-width">'width'</span>,
the replaced contents may be scaled).

<li>Authors (and user agents) may specify <a
href="#min-max-widths">minimum and maximum</a> computed values for the
<span class="propinst-width">'width'</span> property via the <span
class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span> properties.
</ol>

<h4><a name="comp-margin-widths">Computing margin widths</a></h4>

<P>User agents should assign <a
href="cascade.html#computed-value">computed values</a> for <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span>, and <span
class="propinst-margin-right">'margin-right'</span> as follows:</p>

<ol>

<li>If exactly one of <span
class="propinst-margin-left">'margin-left'</span>, <span
class="propinst-width">'width'</span> or <span
class="propinst-margin-right">'margin-right'</span> has the value 
'auto', the computed value of that property is assigned
so that the seven width properties add up to the
width of the <a href="#containing-block">containing block</a>.

<li>If none of the properties has the value 'auto', <span
class="propinst-margin-right">'margin-right'</span> is assigned a
computed value so that the seven width properties add up to the
width of the <a href="#containing-block">containing block</a>.

<li>If more than one of the three has the value 'auto', and one of
them is <span class="propinst-width">'width'</span>, than the other
two (<span class="propinst-margin-left">'margin-left'</span> and/or
<span class="propinst-margin-right">'margin-right'</span>) will be
assigned the computed value '0' and <span
class="propinst-width">'width'</span> will be assigned a computed
value so that the seven width properties add up to the width of the <a
href="#containing-block">containing block</a>.

<li>Otherwise, if both <span
class="propinst-margin-left">'margin-left'</span> and <span
class="propinst-margin-right">'margin-right'</span> have the value
'auto', they will each be assigned a computed value that is half of
the available horizontal space (this centers the box within its
containing block).
</ol>

<H3>Width of absolutely positioned elements</H3>

<P>The width of an <a
href="visuren.html#absolute-positioning">absolutely positioned</a> box
is specified via the source element's <span
class="propinst-width">'width'</span> property.

<P>However, if the <span class="propinst-width">'width'</span>
property has the value 'auto', the width of the box is given by the
<span class="propinst-left">'left'</span> and <span
class="propinst-right">'right'</span> properties. Note that these take
the place of the <span
class="propinst-margin-left">'margin-left'</span> and <span
class="propinst-margin-right">'margin-right'</span> properties, which
don't apply to absolutely positioned elements.

<P>If all three properties have the value 'auto', the box has exactly
the width of its <a href="#containing-block">containing block</a>.

<H3><a name="min-max-widths">Minimum and maximum widths</a>: <span
class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span></h3>

<!-- #include src=properties/min-width.srb -->
<!-- #include src=properties/max-width.srb -->

<P>These two properties allow authors to constrain box widths to a
certain range. Values have the following meanings:

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed minimum or maximum computed width.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage for determining the computed value.
The percentage is calculated
with respect 
to the generated box's <a href="#containing-block">containing block</a>.
</dl>

<P>The following algorithm describes how the two properties influence
the <a href="cascade.html#computed-value">computed value</a>
of the <span class="propinst-width">'width'</span> property:</p>

<OL>

<LI>the <a href="#normal-floated">normal width</a> is computed
(without <span class="propinst-min-width">'min-width'</span> and <span
class="propinst-max-width">'max-width'</span>).

<LI>if the computed value of <span
class="propinst-min-width">'min-width'</span> is greater than the
value of <span class="propinst-max-width">'max-width'</span>, <span
class="propinst-max-width">'max-width'</span> should be set to the
value of <span class="propinst-min-width">'min-width'</span>.

<LI>if the computed width is greater than <span
class="propinst-max-width">'max-width'</span>, the computed value of
<span class="propinst-width">'width'</span> is set to the value of
<span class="propinst-max-width">'max-width'</span>.

<LI>if the computed width is smaller than <span
class="propinst-min-width">'min-width'</span>, the computed value of
<span class="propinst-width">'width'</span> is set to the value of
<span class="propinst-min-width">'min-width'</span>.

</OL>

<H2><a name="box-height">Box height calculations</a></H2>

<P>As discussed in the section on <a
href="visuren.html#box-dimensions">box dimensions</a>, the <a
href="visuren.html#content-height">content height</a> of a box is
either assigned explicitly (via the <span
class="propinst-height">'height'</span> property) or is the minimal
height necessary to include the vertical content of the element and
that of all its flowed children. This is the
height necessary <em>before</em> any relative offset of children.

<h3><a name="the-height-property">Content height</a>: the <span
class="propinst-height">'height'</span> property</H3>

<!-- #include src=properties/height.srb -->

<P> This property specifies a box's <a
href="visuren.html#content-height">content height</a>. Values have the
following meanings:</P>

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed height.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage height. The percentage is calculated
with respect to the generated box's <a href="#containing-block">containing block</a>.
<dt><strong>auto</strong>
<dd>See the section on <a href="#normal-floated">heights 
of boxes in the normal flow
and floated boxes</a>.
</dl>

<P>Negative values for <span class="propinst-height">'height'</span>
are illegal. User agents must <a href="syndata.html#skip">skip</a>
this property for elements with <span
class="propinst-display">'display'</span> set to 'col' or 'column-span'

<div class="example"><P>
<PRE>
  IMG.icon { height: 100px }
</PRE>
</div>

<P>The height may be enforced by the user interface (e.g., a
scrollbar).  

<H3><a name="normal-height">Determining the content height</a></H3>

<P>When the <span class="propinst-height">'height'</span> property has
the value 'auto', user agents should assign it a <a
href="cascade.html#computed-value">computed value</a> based on the
space required by the element's <a
href="conform.html#rendered-content">rendered content</a>.  In
addition:</p>

<ol>

<li>For <a href="conform.html#replaced-element">replaced elements</a>,
user agents should use the <a
href="visuren.html#intrinsic-dim">intrinsic height</a> of the element's
<a href="conform.html#rendered-content">rendered content</a> as the
box's <a href="cascade.html#computed-value">computed</a> height.  (Note
that for other values of <span class="propinst-height">'height'</span>,
the replaced contents may be scaled).

<li>Authors (and user agents) may specify <a
href="#min-max-heights">minimum and maximum</a> computed values for the
<span class="propinst-height">'height'</span> property via the <span
class="propinst-min-height">'min-height'</span> and <span
class="propinst-max-height">'max-height'</span> properties.
</ol>

<H3>Height of absolutely positioned elements</H3>

<P>The height of an absolutely positioned box is specified via the
source element's <span class="propinst-height">'height'</span>
property. However, specifying a percentage value for <span
class="propinst-height">'height'</span> when the parent element's
height is set to 'auto' results in undefined behavior.

<P>If the <span class="propinst-height">'height'</span> has the
value 'auto', the height of the box is given by the <span
class="propinst-top">'top'</span> and <span
class="propinst-bottom">'bottom'</span> properties. Note that these take
the place of the <span
class="propinst-margin-top">'margin-top'</span> and <span
class="propinst-margin-bottom">'margin-bottom'</span> properties, which
don't apply to absolutely positioned elements.

<P>If all three properties have the value 'auto', the box has
exactly the height of its <a href="#containing-block">containing block</a>.

<H3><a name="min-max-heights">Minimum and maximum heights</a>: <span
class="propinst-min-height">'min-height'</span> and <span
class="propinst-max-height">'max-height'</span></h3>


<P>It is sometimes useful to constrain the height of elements to a
certain range. Two properties offer this functionality:

<!-- #include src=properties/min-height.srb -->
<!-- #include src=properties/max-height.srb -->

<P>These two properties allow authors to constrain box heights to a
certain range. Values have the following meanings:

<dl>
<dt><span class="index-inst" title="&lt;length&gt;"><span class="value-inst-length"><strong>&lt;length&gt;</strong></span></span>
<dd>Specifies a fixed minimum or maximum computed height.
<dt><span class="index-inst" title="&lt;percentage&gt;"><span class="value-inst-percentage"><strong>&lt;percentage&gt;</strong></span></span>
<dd>Specifies a percentage for determining the computed value.
The percentage is calculated
with respect 
to the generated box's <a href="#containing-block">containing block</a>.
</dl>

<P>The following algorithm describes how the two properties influence
the <a href="cascade.html#computed-value">computed value</a>
of the <span class="propinst-height">'height'</span> property:</p>

<OL>

<LI>the <a href="#normal-height">normal height</a> is computed
(without <span class="propinst-min-height">'min-height'</span> and
<span class="propinst-max-height">'max-height'</span>).

<LI>if the value of <span
class="propinst-min-height">'min-height'</span> is greater than the
value of <span class="propinst-max-height">'max-height'</span>, <span
class="propinst-max-height">'max-height'</span> should be set to the
value of <span class="propinst-min-height">'min-height'</span>

<LI>if the calculated height is greater than <span
class="propinst-max-height">'max-height'</span>, the value of <span
class="propinst-height">'height'</span> is set to <span
class="propinst-max-height">'max-height'</span>.

<LI>if the calculated height is smaller than <span
class="propinst-min-height">'min-height'</span>, the value of <span
class="propinst-height">'height'</span> is set to <span
class="propinst-min-height">'min-height'</span>. 

</OL>

<H2><a name="collapsing-margins">Collapsing margins</a></H2>

<P>In CSS2, <span class="index-inst" title="horizontal
margin|margin::horizontal">horizontal margins</span> never collapse.

<P><span class="index-inst" title="vertical margin|margin::vertical">
Vertical margins</span> may collapse for certain types of boxes:</p>

<ul>
<li>Two or more adjoining vertical margins 
(i.e., with no border, padding, or content between them) 
of <a
href="visuren.html#block-level">block-level</a> boxes in
the normal flow collapse. The resulting margin width
is the maximum of the adjoining margin widths.
In the case of negative margins, the absolute maximum of the
negative adjoining margins is deducted from the maximum of the
positive adjoining margins. If there are no positive margins, the
absolute maximum of the negative adjoining margins is deducted from
zero.
<li>Vertical margins between a <a
href="visuren.html#floats">floating</a>
box and another box do not collapse.
<li>Vertical margins between an <a
href="visuren.html#absolute-positioning">absolutely positioned</a>
boxes do not collapse.
</ul>

<P>In most cases, after collapsing the vertical margins, the result is
visually more pleasing and closer to what the designer expects. Please
consult the <a href="./visuren.html#mpb-examples">examples of margin,
padding, and borders</a> for an illustration of collapsed margins.

<H2><a name="line-height">Line height calculations</a>: the <span
class="propinst-line-height">'line-height'</span> and <span
class="propinst-vertical-align">'vertical-align'</span>
properties</H2>

<P>As described in the section on <a
href="visuren.html#inline-formatting">inline formatting contexts</a>,
user agents flow inline boxes into a vertical stack of <a
href="visuren.html#line-box">line boxes</a>. The height of a line box
is determined as follows:

<ol>
<li>The height of each inline box in the line box is calculated.
The height of an inline box is given by the <span
class="propinst-line-height">'line-height'</span> property. The height
is generally proportional to the font size of text in the box.

<P>In the case of an inline <a
href="conform.html#replaced-element">replaced element</a>, the
<span class="propinst-height">'height'</span> property
determines the height of the inline box.

<li>The inline boxes are aligned vertically according
to the <span class="propinst-vertical-align">'vertical-align'</span>
property value for source inline elements. If an element
has the values 'top' or 'bottom' for this property, only
the height of the generated boxes affects the line box
height calculation; the boxes cannot be aligned until the
line box has been fully constructed. 

<li>The line box height is distance between the uppermost
box top and the lowermost box bottom.
</ol>

<P>Note that if all the boxes in the line box are aligned along their
bottoms, the line box will be exactly the height of the tallest box.
If, however, the boxes are aligned along a common baseline, the line
box top and bottom may not touch the top and bottom of the tallest
box.

<P>Note that top and bottom margins, borders, and padding specified
for <a href="visuren.html#inline">inline</a> elements do <em>not</em>
enter into the calculation of line box heights.

<H3>Leading and half-leading</h3>

<P>Since the height of an inline box may be greater than (<span
class="propinst-line-height">'line-height'</span> &gt; 1) the font
size of text in the box, there may be space above and below rendered
glyphs.  The difference between the font size and the computed value
of <span class="propinst-line-height">'line-height'</span> is called
the <span class="index-def"
title="leading"><EM>leading</EM></span>. Half the leading is called
the <span class="index-def"
title="half-leading"><EM>half-leading</EM></span>.

<P>User agents should center the glyph vertically in the box (adding
half-leading on the top and bottom).  For example, if a piece of text
is '12pt' high and the <span
class="propinst-line-height">'line-height'</span> value is '14pt',
2pts of extra space should be added (e.g., 1pt above and 1pt below the
box). Empty elements influence these calculations just like elements
with content.

<P>When the <span class="propinst-line-height">'line-height'</span>
value is less than the font size, the final line box height will be
less than the font size and the rendered glyphs will "bleed" outside
the box. If such a box touches the edge of a line box, the rendered
glyphs will also "bleed" into the adjacent line box.

<P>Although margins, borders, and padding do not enter into the line
box height calculation, they are still rendered around inline boxes
(except when boxes are split across lines).  This means that if the
height of a line box is shorter than the <a
href="visuren.html#outer-edge">outer edges</a> of the boxes it
contains, backgrounds and colors may "bleed" into adjacent line
boxes.

<!-- #include src=properties/line-height.srb -->

<P>The property specifies the height of an inline box. The height
generally refers to the font size of the element's text. For <a
href="conform.html#replaced-element">replaced elements</a>, the height
refers to the intrinsic height.

<ul>
<li>If the property is set on a <a
href="visuren.html#block-level">block-level</a> element whose content
is composed of <a href="visuren.html#inline">inline</a> elements, it
specifies the <em>minimal</em> height of each inline box.

<li>If the property is set on an <a
href="visuren.html#inline">inline</a> element, it specifies the
<em>exact</em> height of each box generated by
the element.
</ul>

<P>Values for this property have the following meanings:</p>

<dl>
<dt><strong>normal</strong>
<dd>Tells user agents to set the <a
href="cascade.html#computed-value">
computed value</a> to a "reasonable"
value based on the font size of the element. The
value has the same meaning as 'number'.
We recommend a value in the range of 1.0 to 1.2. 

<dt><span class="index-inst" title="&lt;length&gt;"><span
class="value-inst-length">&lt;length&gt;</span></span>
<dd>The box height is set to this length. Negative values are illegal.

<dt><span class="index-inst" title="&lt;number&gt;"><span
class="value-inst-number">&lt;number&gt;</span></span>
<dd>This number is <a
href="cascade.html#actual-value">actual value</a> for
the property (and thus, it is inherited). The 
<a href="cascade.html#computed-value">
computed value</a> of the property is this number multiplied
by the element's font size. Negative values are illegal.

<dt><span class="index-inst" title="&lt;percentage&gt;"><span
class="value-inst-percentage">&lt;percentage&gt;</span></span>
<dd>The 
<a href="cascade.html#actual-value">
actual value</a> of the property is this percentage multiplied
by the element's font size. <!-- What about intrinsic? -IJ -->
Negative values are legal. 
Percentages raise the baseline of the element (or the bottom,
if it has no baseline) the specified amount above the baseline of the
parent.  For example, a value of '-100%' will
lower the element so that the baseline of the element ends up where
the baseline of the next line should have been. This allows precise
control over the vertical position of elements (such as images that
are used in place of letters) that don't have a baseline.

</dl>

<div class="example"><P>
The three rules in the example below have the same resultant line height:

<PRE>
  DIV { line-height: 1.2; font-size: 10pt }     /* number */
  DIV { line-height: 1.2em; font-size: 10pt }   /* length */
  DIV { line-height: 120%; font-size: 10pt }    /* percentage */
</PRE>
</div>

<P>When an element contains text that is rendered in more than one
font, user agents should determine the <span
class="propinst-line-height">'line-height'</span> value 
according to the largest font size.

<div class="note"><P>
<em><strong>Note.</strong>
Generally, when there is only one value of <span
class="propinst-line-height">'line-height'</span> affecting all line
boxes in a paragraph (and not tall images), the above will
ensure that baselines of successive lines are exactly <span
class="propinst-line-height">'line-height'</span> apart. This is
important when columns of text in different fonts have to be aligned,
for example in a table.
</em>
</div>

<!-- #include src=properties/vertical-align.srb -->

<P>This property affects the vertical positioning inside a line box of
the boxes generated by an inline element. The following values only
have meaning with respect to a parent inline element; they have no
effect if no parent exists:</P>
 
<DL>
  <DT><strong>'baseline'</strong>
  <DD>Align the baseline of text in the box with the baseline of
      text in the parent box. If the box doesn't contain text,
      align the bottom of the box with the parent's baseline.
  <DT><strong>'middle'</strong>
  <DD>Align the vertical midpoint of the box with the baseline
      of text in the parent box plus half the x-height of the parent.
  <DT><strong>'sub'</strong>
  <DD>Subscript the box. This value has no effect on the font size
	      of the element's text.
  <DT><strong>'super'</strong>
  <DD>Superscript the element. This value has no effect on the font size
	      of the element's text.
  <DT><strong>'text-top'</strong>
  <DD>Align the top of the box with the top of the parent element's font
  <DT><strong>'text-bottom'</strong>
  <DD>Align the bottom of the box with the bottom of the parent 
      element's font
</DL>

<P>The remaining values refer to the line box in which the
generated box appears:</p>

<DL>
  <DT><strong>'top'</strong>
  <DD>Align the top of the box with the top of the line box.
  <DT><strong>'bottom'</strong>
  <DD>Align the bottom of the box with the bottom of the line box.
</DL>

<H2><a name="floating-constraints">Floating constraints</a></H2>

<P> A floating box is positioned subject to the following
constraints:</p>

<OL>
<LI> The left <a href="visuren.html#outer-edge">outer edge</a> of a
left-floating box may not be to the left of the left <a
href="visuren.html#inner-edge">inner edge</a> of its <a
href="#containing-block">containing block</a>. Analogous rules hold
for right-floating elements.

<LI> The left <a href="visuren.html#outer-edge">outer edge</a> of a
left-floating box must be to the right of the right <a
href="visuren.html#outer-edge">outer edge</a> of every <a
href="visuren.html#preceding-box">preceding</a> left-floating box or the
top of the former must be lower than the bottom of the
latter. Analogous rules hold for right-floating boxes.

<LI>The right <a href="visuren.html#outer-edge">outer edge</a> of a
left-floating box may not be to the right of the left <a
href="visuren.html#outer-edge">outer edge</a> of any right-floating
box that is to the right of it. Analogous rules hold for
right-floating elements.

<LI>A floating box's top may not be higher than the <a
href="visuren.html#inner-edge">inner</a> top of its <a
href="#containing-block">containing block</a>.

<LI> The top of an element's floating box may not be higher than the
top of any <a href="visuren.html#block-level">block-level</a> or <a
href="visuren.html#floats">floated</a> box generated by a <a
href="conform.html#preceding">preceding</a> element.

<LI>The top of an element's floating box may not be higher than the
top of any <span class="index-inst" title="line-box"><a
href="visuren.html#line-box">line-box</a></span> containing a box generated by a
<a href="conform.html#preceding">preceding</a> element.

<LI> A floating box must be placed as high as possible.

<LI> A left-floating box must be put as far to the left as
possible, a right-floating box as far to the right as possible. A
higher position is preferred over one that is further to the
left/right.
</OL>

<!-- Please verify use of preceding or preceding box here. -IJ -->

</BODY>
</HTML>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:nil
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:nil
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
