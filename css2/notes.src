<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Appendix C: Implementation and performance notes</TITLE>
<LINK rel="next" href="grammar.html">
<LINK rel="previous" href="changes.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Appendix C: Implementation and performance
notes</H1>
<H2>Colors</H2>
<H3><a name="gamma-correction">Gamma Correction</H3>

<P><em>The following information is informative, not normative.
See the Gamma Tutorial in the PNG specification <a rel="biblioentry"
href="./refs.html#ref-PNG10">[PNG10]</a> 
if you aren't already familiar with gamma issues.</em>

<P> In the computation, UAs displaying on a CRT may assume an ideal
CRT and ignore any effects on apparent gamma caused by dithering. That
means the minimal handling they need to do on current platforms is:
  <DL>
    <DT>
      PC using MS-Windows
    <DD>
      none
    <DT>
      Unix using X11
    <DD>
      none
    <DT>
      Mac using QuickDraw
    <DD>
      apply gamma 1.39 <a rel="biblioentry"
href="./refs.html#ref-ICC32">[ICC32]</a> (ColorSync-savvy applications
      may simply pass the sRGB ICC profile to ColorSync
      to perform correct color correction)
<!-- ref14 doesn't exist -->
    <DT>
      SGI using X
    <DD>
      apply the gamma value from <TT>/etc/config/system.glGammaVal</TT> (the default
      value being 1.70; applications running on Irix 6.2 or above may simply pass
      the sRGB ICC profile to the color management system)
    <DT>
      NeXT using NeXTStep
    <DD>
      apply gamma 2.22
  </DL>
<P> "Applying gamma" means that each of the three R, G and B must be
converted to R'=R<SUP>gamma</SUP>, G'=G<SUP>gamma</SUP>,
G'=B<SUP>gamma</SUP>, before handing to the OS.

<P> This may rapidly be done by building a 256-element lookup table
once per browser invocation thus:

<PRE>
  for i := 0 to 255 do
    raw := i / 255;
    corr := pow (raw, gamma);
    table[i] := trunc (0.5 + corr * 255.0)
  end
</PRE>

<P> which then avoids any need to do transcendental math per color
attribute, far less per pixel.
</BODY>
</HTML>
