<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: notes.src,v 1.6 1997-09-08 02:57:08 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Appendix C: Implementation and performance notes</TITLE>
<LINK rel="next" href="grammar.html">
<LINK rel="previous" href="changes.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Appendix C: Implementation and performance
notes</H1>
<H2>Colors</H2>
<H3><a name="gamma-correction">Gamma Correction</a></H3>

<P><em>The following information is informative, not normative.
See the Gamma Tutorial in the PNG specification <a rel="biblioentry"
href="./refs.html#ref-PNG10">[PNG10]</a> 
if you aren't familiar with gamma issues.</em>

<P> In the computation, UAs displaying on a CRT may assume an ideal
CRT and ignore any effects on apparent gamma caused by dithering. That
means the minimal handling they need to do on current platforms is:
  <DL>
    <DT>
      PC using MS-Windows
    <DD>
      none
    <DT>
      Unix using X11
    <DD>
      none
    <DT>
      Mac using QuickDraw
    <DD>
      apply gamma 1.39 <a rel="biblioentry"
href="./refs.html#ref-ICC32">[ICC32]</a> (ColorSync-savvy applications
      may simply pass the sRGB ICC profile to ColorSync
      to perform correct color correction)
<!-- ref14 doesn't exist -->
    <DT>
      SGI using X
    <DD>
      apply the gamma value from <TT>/etc/config/system.glGammaVal</TT> (the default
      value being 1.70; applications running on Irix 6.2 or above may simply pass
      the sRGB ICC profile to the color management system)
    <DT>
      NeXT using NeXTStep
    <DD>
      apply gamma 2.22
  </DL>
<P> "Applying gamma" means that each of the three R, G and B must be
converted to R'=R<SUP>gamma</SUP>, G'=G<SUP>gamma</SUP>,
B'=B<SUP>gamma</SUP>, before handing to the OS.

<P> This may rapidly be done by building a 256-element lookup table
once per browser invocation thus:

<PRE>
  for i := 0 to 255 do
    raw := i / 255;
    corr := pow (raw, gamma);
    table[i] := trunc (0.5 + corr * 255.0)
  end
</PRE>

<P> which then avoids any need to do transcendental math per color
attribute, far less per pixel.

<H2>Fonts</H2>

<H3>Glossary of font terms</H3>

<dl>

<DT><a name="definingDocLock"><b>DocLock&trade;</b></a>

<dd>Bitstream's <i>DocLock&trade;</i> technology ensures that TrueDoc
PFRs can only be used with the site they are published for. A TrueDoc
PFR moved to a different site or referenced from another site will not
work.

<dt><a name="definingDSIG"><b>Digital Signature</b></a>

<dd>Part of a trust management technology, used to provide signed
assertions about a resource.  <!-- DSIG for example in OpenType,
http://www.microsoft.com/TRUETYPE/OTSPEC/dsig.htm -->

<dt><a name="definingFontCaching"></A><b>Font Caching</b></dt>

<dd><i>Font caching</i> allows for a temporary copy of fonts on the client
system. They are usually stored on disk with other cached items such as
graphics specifically for the UA.</dd>


<DT><a name="definingFontFace"><b>Font Face</b></A>

<DD>A "handle" that refers to a specific face of a font, excluding
the font size (? size may be needed for non-scalable fonts)

<!-- font family -->

<dt><a name="definingFontMatching"></A><b>Font Matching</b></dt>

<dd><i>Font matching</i> is a process of selecting a similar font based
on using one or more attributes of the primary font. Common attribute include
serif, sans serif, weight, cap height, x height, spacing, language, and
posture. Font matching is dependent on the algorithm and the variety of
candidate fonts.</dd>


<dt><a name="definingSubsetting"></A><b>Glyph Representation Sub-setting</b></dt>

<dd><i>Glyph Representation sub-setting</i> is the process by which
unwanted glyph representations, (together with their side bearings and
kerning information) are removed from a primary font to produce a
smaller subset font that covers a particular document or set of
documents. This is a particular win for documents that use ideographic
scripts, where the glyph complement of the base font can be very
large. Glyph representation sub-setting for documents using scripts
that require ligatures, such as Arabic, is difficult without knowing
the ligature formation rules of the final display system.</dd>

<dt><a name="definingIntellifont"><b>Intellifont</b></a>

<dd>Intellifont technology was developed by Agfa and is the native
format for Hewlett-Packard and other printers that use the PCL5
language. It is also the native font format on the Amiga
computers. 

<dt><a name="defininginfinifont"><b>Infinifont</b></a>

<dd>A font synthesis technique which, given a Panose-1 number (and,
optionally, additional font description data) can generate a faux font
without extrapolating from a single master outline or interpolating
between two or more outlines. See <a rel="biblioentry"
href="./refs.html#ref-INFINIFONT">[INFINIFONT]</a>.

<dt><a name="definingItalic"><b>Italic</b></a>

<dd>A class of letter forms for Latin scripts, that are more cursive
than roman letter forms but less so than script forms. Often, a pair of
fonts are designed to be used together; one is a serifed roman and one
is italic. Other terms to describe this class of letter forms include
cursive and, for Cyrillic scripts, kursiv. For sans-serif faces, the
companion face is often a slanted or oblique variant rather than a
different class of letter form.<br>
<img src="./images/italic-40.gif">


<dt><a name="definingKern"><b>Kerning</b></a>

<dd>Altering the spacing between selected glyph representations, which
would otherwise appear to be too close or too far apart, to obtain a
more even typographical color.

<p><img src="./images/kern-22.gif"></p>

<dt><a name="definingMultiMaster"></A><b>Multiple Master Font</b></dt>

<dd>A <i>Multiple Master Font</i> contain two primary fonts that are used
with special rendering software to provide an interpolated result. Adobe
Systems provides a mechanism that allows for parameters to be used to control
the output or the interpolated output font. These parameters usually describe
the characteristics of an original font and the multiple master result
is referred to as a synthesized font.</dd>

<dt><a name="definingOpenType"><b> Open Type</b></a>
            
<dd>Open Type is an extension to the TrueType font format which
contains additional information that extends the capabilities of the
fonts to support high-quality international typography.  Open Type can
associate a single character with multiple glyph representations, and
combinations of characters with a single glyph representation
(ligature formation).  Open Type includes two-dimensional information
to support features for complex positioning and glyph attachment.
TrueType Open contains explicit script and language information, so a
text-processing application can adjust its behavior accordingly. See 
<a rel="biblioentry" href="./refs.html#ref-OPENTYPE">[OPENTYPE]</a>. 

<dt><a name="definingServerFont"></A><b>Server Font</b></dt>

<dd>A <i>Server Font</i> is a font resource located on the web server
that is referenced by the WebFont definition. The user agent may use
this resource for rendering the page.</dd>

<!-- script need a definition -->

<dt><a name="definingSpeedo"><b>Speedo</b></a>

<dd><i>Speedo</i> font technology was developed by Bitstream and is
the native font format on the Atari ST and Falcon computers,. It is
also used by computers running X.

<dt><a name="definingTrueDoc"></A><b>TrueDoc</b></dt>

<dd><i>TrueDoc</i> technology was developed by Bitstream for the
creation, transport, and imaging of platform independent scalable
font objects on the web. Creation of font objects is done by the
TrueDoc character shape recorder (CSR) and the rendering of the font
objects is done by TrueDoc's character shape player (CSP). The
technology is intended to be used on the web for viewing and
printing.</dd>

<dt><a name="definingTrueDocPFR"></A><b>TrueDoc Portable Font Resource</b></dt>

<dd>A <i>TrueDoc Portable for resource</i> (or <b>PFR</b>) is a
platform independent scalable font object which is produce by a
character shape player. Input may be either TrueType or Type 1 of any
flavor on either Windows, Mac, or Unix. TrueDoc Portable Font
Resources provide  good compression ratios, are platform
independent, and because they are not in an native font format
(TrueType or Type 1) they can not be easily installed.</dd>

<dt><a name="definingTT"></A><b>TrueType</b></dt>

<dd><i>TrueType </i>is a font format developed by Apple and licensed
to Microsoft. TrueType is the native operating system font format for
Windows and Macintosh. TrueType contains a hierarchical set of tables
and glyph representations.  Characters can be hinted on a per
character and point size basis yielding excellent quality at screen
resolutions. TrueType fonts for Windows and Mac have few differences,
though they can be different enough to prevent cross platform
usage. Font foundries provide TrueType fonts for each platform and
usually include a license preventing electronic manipulation to
achieve cross platform transparency. </dd>

<dt><a name="definingTTC"></A><b>TrueType Collection</b></dt>

<dd>A <i>TrueType Collection</i> (or <b>TTC</b>) is an extension to
the TrueType format that includes tables that allow for multiple
TrueType fonts to be contained within a single TrueType font file.
TrueType collection files are relatively rare at this time. </dd>

<!-- add  CFF font sets -->

<dt><a name="definingTTGX"></A><b>TrueType GX Fonts</b></dt>

<dd><i>TrueType GX Fonts</i> contain extensions to the standard
TrueType format that allow for mutable fonts, similar to Multiple
Master fonts. There may be several mutation axis such as weight,
height, and slant. The axis can be defined to obtain almost any
effect. TrueType GX can also supports alternate glyph representation
substitution for ligatures, contextual forms, fractions, etc. To date,
TrueType GX is available only on the Mac. See <a rel="biblioentry"
href="./refs.html#ref-TRUETYPEGX">[TRUETYPEGX]</a>.

<!-- TrueType Open, ME and FE Win only -->

<dt><a name="definingT1"></A><b>Type 1 font</b></dt>

<dd><i>Type 1 fonts</i>, developed by Adobe Systems, were one of first
scalable formats available. Type 1 fonts are usually contain 228
characters with the glyph representations described using third degree
bezier curves. Mac, Windows, and X have similar but separate formats;
Adobe provides Adobe Type Manager for all three platforms. Type1c is a
more recent losslessly-compressed storage form for Type 1 glyph
representations.</dd>

<dt><a name="definingURLbound"><b>URL Binding</b></a>

<dd>A process of locking a particular font resource to a given Web
site by embedding an encrypted URL or a digitally signed usage
assertion into the font resource.

</dl>

<h3><a name="font-descriptors">General font descriptors</a></h3>

<p>These descriptors may be used to characterize fonts. They are not
specific to CSS or to Stylesheets.

<h4><a name=aname>Adorned font name</a></h4>

<p>This is the full name of a particular face of a font family. It
typically includes a variety of non-standardized textual qualifiers or
<i>adornments</i> appended to the font family name. It may also include
a foundry name or abbreviation, often prepended to the font family
name.

<p>The name of the font definition is important because it is the link
to any locally installed fonts. It is important that the name be
robust, both with respect to platform and application independence. For
this reason, the name should be one which is not application or
language specific.

<P>
The ideal solution would be to have a name which uniquely identifies
each collection of font data. This name does not exist in current
practice for font data. Fonts with the same face name can vary over of
number of descriptors. Some of these descriptors, such as different
complements of glyphs in the font may be insignificant if the needed
glyphs are in the font. Other descriptors, such as different width
metrics, make fonts with the same name incompatible. It does not seem
possible to define a rule that will always identify incompatibilities,
but will not prevent the use of a perfectly suitable local copy of the
font data with a given name. Therefore, only the range of Unicode
characters will be used to qualify matches for the font face name.

<P>Since a prime goal of the font face name in the font definition is
allow a user agent to determine when there is a local copy of the
specified font data, the font face name must be a name which will be
in all legitimate copies of the font data. Otherwise, unnecessary Web
traffic may be generated due to missed matches for the local copy.

<p>For TrueType fonts or all flavors, this value may be obtained from
the <tt>full font name</tt> from the <tt>name</tt> table.

<p>For Type 1 fonts, this value may be obtained from the PostScript
language name; the name which, in a PostScript language program, is
used as an operand of the findfont operator.  It is the name
associated with the font by a definefont operation.  This is usually
the value of the FontName entry in the font dictionary.For more
information, see Section 5.2 of the PostScript Language Reference
Manual, Second Edition <a href="#ref10">[Ref&nbsp;10]</a>. </p>

<p>Multiple Master Type 1 fonts allow specifying various design
dimensions (e.g., weight, such as light to extra-bold, and width, such
as condensed to expanded) <a href="#ref12">[Ref&nbsp;12]</a>.
Coordinates along these design dimensions are specified by numbers,
and are appended as a suffix to the base font name. To specify the
appearance of the font, numeric values must be supplied for each
design dimension of the multiple master font.  A completely specified
multiple master font is referred to as an instance of the multiple
master font.

<p>The PostScript language name used for a Multiple Master Type 1 is the name
the instance.  If the name contains spaces (such as &quot;MinionMM 366 465
11&quot;), these spaces are replaced with underscores.  For example, the base
font name here is TektonMM and the 2 dimensions specified have values of 200
and 300:</p>

<pre>  TektonMM_200_300</pre>
<p>The full font name of the TrueType font and the PostScript Language
name may differ by spacing and punctuation.  For example, spaces are
not allow in a PostScript Language name, but are common in full font
names. The TrueType name table can also contain the PostScript name,
which has no spaces.


<h4><a name=cline>Central Baseline</a></h4>

<p>This gives the position in the em square of the central
baseline. The central baseline is used by ideographic scripts for
alignment, just as the bottom baseline is used for Latin, Greek and
Cyrillic scripts.

<p>For TrueType GX fonts, this value may be obtained from the <a
rel="biblioentry" href="./refs.html#ref-TRUETYPEGX">[TRUETYPEGX]</a>
<tt>bsln</tt> table. Within this table, the <tt>ideographic
centered baseline</tt> may be used for stretches of predominantly
ideographic characters and the <tt>ideographic low baseline</tt> is
more suitable for ideographic characters in a run of predominantly
Latin, Greek or Cyrillic characters.

<h4><a name=emsq>Co-ordinate units on the em square</a></h4>

<p>Certain values, such as width metrics, are expressed in units that
are relative to an abstract square whose height is the intended
distance between lines of type in the same type size. This square is
called the EM square. The value of this descriptor specifies how many
units the EM square is divided into.  The valid range is 16 to 16384
units per EM square. Common values are 250 (Intellifont), 1000 (Type
1) and 2048 (TrueType).

<p>If this value is not specified, it becomes impossible to know what
any font metrics mean. For example, one font has lowercase glyph
representations of height 450; another has smaller ones of height 890!
The numbers are actually fractions; the first font has 450/1000 and
the second has 890/2048 which is indeed smaller.

<p>For Type 1 fonts, this value may be obtained from the
<tt>FontMatrix</tt> entry in the font dictionary. For TrueType fonts,
this value may be obtained from the <tt>unitsPerEm</tt> entry in the
<tt>head</tt> table. For Intellifont fonts, this value is contained in
the font attribute file.

<h4>Font encoding tables</h4>
<P>Either explicitly or implicitly, each font has a table associated
with it, the <span class="index-def" title="font encoding
table"><EM>font encoding table</EM> </span>, that tells for each glyph
what character it is a representation for. In "Type 1 fonts", the
table is referred to as an <span class="index-def" title="encoding
vector"><EM>encoding vector</EM></span>.

<P> In fact, many fonts contain several glyphs for the same
character. Which of those glyphs should be used depends either on the
rules of the language, or on the preference of the designer.

<P> In Arabic, for example, all letters have four different shapes,
depending on whether the letter is used at the start of a word, in the
middle, at the end, or in isolation. It is the same character in all
cases, and thus there is only one character in the HTML document, but
when printed, it looks differently each time.

<P> There are also fonts that leave it to the graphic designer to
choose from among various alternative shapes provided. Unfortunately,
CSS2 doesn't yet provide the means to select those
alternatives. Currently, it is always the default shape that is chosen
from such fonts.


<h4><a name=family>Font family name</a></h4>

<p>Specifies the family name portion of the font face name. For
example, the family name for Helvetica-Bold is Helvetica and the
family name of ITC Stone Serif Semibold Italic is ITC Stone
Serif. Some systems treat adornments relating to condensed or expanded
faces as if they were part of the family name. <!-- whole system is
too flat anyway - is Adobe Stone Serif the same family? Is Minion
Cyrillic the same family as Minion? -->

<p>For Type 1 fonts, this value may be obtained from the <tt>FamilyName</tt> entry in the FontInfo dictionary.

<!-- add the naming issues stuff here -->



<h4><a name=lrwidth>Glyph Representation widths</a></h4>


<p>For Type 1 fonts, this value may be obtained from the ???. For
TrueType fonts, the values are in the <tt>hmtx</tt> table.

<h4><a name=tbwidth>Glyph Representation heights</a></h4>

<P> ???


<h4><a name=stemh>Horizontal stem width</a></h4>

<p>
<p>For Type 1 fonts, this value may be obtained from the <tt>StdHW</tt>
entry, in the Private dictionary or the AFM file.

<h4><a name=cap>Height of capital glyph representations</a></h4>

<p>The y-coordinate of the top of flat capital letters in Latin, Greek
and Cyrillic scripts, measured from the baseline. This descriptor is not
useful for fonts that do not contain any glyph representations from
these scripts.

<p>For Type 1 fonts, this value may be obtained from the <tt>CapHeight</tt>
entry in the AFM file or from the <tt>Bluevalues</tt> entry in the
Private dictionary

<h4><a name=xht>Height of lowercase glyph representations</a></h4>

<p>The y-coordinate of the top of unaccented, non-ascending lowercase
letters in Latin, Greek and Cyrillic scripts, measured from the
baseline. Flat-topped letters are used, ignoring any optical
correction zone. Usually used as a ratio of lowercase to uppercase
heights, as a means of comparison between font families. The terms
large-eye, small-eye are also used to indicate the height of lowercase
glyph representations relative to the height of uppercase.

<br>
<img src="./images/x-height.gif">

<p>This descriptor is not useful for fonts that do not contain any glyph
representations from these scripts. Since the heights of lowercase and
uppercase letters are often formed into a ratio for comparing
different fonts, it may be useful to set both the lowercase and
uppercase heights to the same value for unicameral scripts such as
Hebrew, where for mixed Latin and Hebrew text the Hebrew characters
are typically set at a height midway between the capital and lowercase
heights of the Latin font.<br>
<img src="./images/heb-height-54.gif">

<p>For Type 1 fonts, this value may be obtained from the
<tt>Bluevalues</tt> entry in the Private dictionary.

<h4><a name=mline>Mathematical Baseline</a></h4>

<p>This gives the position in the em square of the mathematical
baseline. The mathematical baseline is used by ideographic scripts for
alignment, just as the bottom baseline is used for Latin, Greek and
Cyrillic scripts.

<p>For TrueType GX fonts, this value may be obtained from the 
<a rel="biblioentry" href="./refs.html#ref-TRUETYPEGX">[TRUETYPEGX]</a>
<tt>bsln</tt> table.

<h4><a name=bbox>Maximal bounding box</a></h4>

<p>
<p>For Type 1 fonts, this value may be obtained from the FontBBox
entry in the font dictionary. For TrueType fonts, the four values are
in the <tt>'xMin'</tt>, <tt>'xMax'</tt>, <tt>'yMin'</tt> and <tt>'yMax'</tt>
entries of the <tt>'head'</tt> table.<!-- Apple API to get this: http://17.126.23.20/dev/techsupport/insidemac/Text/Text-273.html#HEADING273-0 -->

<h4><a name=ascent>Maximum unaccented height</a></h4>

<p>
<p>For Type 1 fonts, this value may be obtained from the
<tt>'Ascender'</tt> value in the AFM file.  For TrueType and OpenType
fonts, this value may be obtained from the <tt>'Ascender'</tt> entry
in the <a rel="biblioentry" href="./refs.html#ref-OPENTYPE">[OPENTYPE]</a>
<tt>'hhea'</tt> table or (preferably) from the
	<tt>'sTypoAscender'</tt> value in the 
<a rel="biblioentry" href="./refs.html#ref-OPENTYPE">[OPENTYPE]</a>
<tt>'OS/2'</tt> table.

<P>For TrueType GX fonts, the <tt>'horizontalBefore'</tt> entry in the
<a rel="biblioentry"
href="./refs.html#ref-TRUETYPEGX">[TRUETYPEGX]</a> <tt>'fmtx'</tt>
table is used, overriding Ascender values in the <tt>'hhea'</tt>
table.

<h4><a name=descent>Maximum unaccented depth</a></h4>

<p>
<p>For Type 1 fonts, this value may be obtained from <tt>'descender'</tt> value in the AFM file. <!-- check Descender, sTypoDescender, horizontalAfter -->

<h4><a name="pan1">Panose-1 number</a></h4>

<p><span class="index-def" title="Panose-1"><em>Panose-1</em></span>
is an industry standard TrueType font classification and matching
technology. The PANOSE system consists of a set of ten numbers that
categorize the key attributes of a Latin typeface, a classification
procedure for creating those numbers, and Mapper software that
determines the closest possible font match given a set of
typefaces. The system <em>could</em>, with modification, also be used
for Greek and Cyrillic, but is not suitable for unicameral and
ideographic scripts (Hebrew, Armenian, Arabic,
Chinese/Japanese/Korean).  Panose-1 technology was originally
developed by Elseware Corporation and is now owned by Hewlett Packard.

<p><img src="./images/panose-16.gif"></p> 

<p>The Family, Serif Style and Proportion numbers are used by
Windows95 for font selection and matching.

<p>The meaning of the ten numbers and the allowable values (given in
parentheses) are given below for the most common case, where the
"family" digit is <tt>2, Text and Display</tt>. If the first digit has a
different value, the remaining nine digits have different meanings.

<dl>
<dt>Family
<dd><ul>
<li>Any (0)
<li>No Fit (1)
<li><a rel="biblioentry" href="./refs.html#ref-PANOSE"><b>Latin Text
		  and Display</b></a> <i>(2)</i>
<li><a rel="biblioentry" href="./refs.html#ref-PANOSE"><b>Latin Script</b></a> (3)
<li><a rel="biblioentry" href="./refs.html#ref-PANOSE"><b>Latin Decorative</b></a> (4)
<li><a rel="biblioentry" href="./refs.html#ref-PANOSE"><b>Latin Pictorial</b></a> (5)
</ul>

<dt>Serif Style
<dd><ul>
<li>Any (0)
<li>No Fit (1)
<li>Cove (2)
<li>Obtuse Cove (3)
<li>Square Cove (4)
<li>Obtuse Square Cove (5)
<li>Square (6)
<li>Thin (7)
<li>Bone (8)
<li>Exaggerated (9)
<li>Triangle (10)
<li>Normal Sans (11)
<li>Obtuse Sans (12)
<li>Perp Sans (13)
<li>Flared (14)
<li>Rounded (15)
</ul>

<dt>Weight
<dd><ul><li>Any (0)
<li>No Fit (1)
<li>Very Light  (2)[100]
<li>Light (3) [200]
<li>Thin (4) [300]
<li>Book (5) [400] <i>same as CSS1 'normal'</i>
<li>Medium (6) [500]
<li>Demi (7) [600]
<li>Bold (8) [700] <i>same as CSS1 'bold'</i>
<li>Heavy (9) [800]
<li>Black (10) [900]
<li>Extra Black / Nord (11) [900] <i>force mapping to CSS1 100-900 scale</i>
</ul>

<dt>Proportion
<dd><ul>
<li>Any (0)
<li>No Fit (1)
<li>Old Style (2)
<li>Modern (3)
<li>Even Width (4)
<li>Expanded (5)
<li>Condensed (6)
<li>Very Expanded (7)
<li>Very Condensed (8)
<li>Monospaced (9)
</ul>

<dt>Contrast
<dd><ul><li>Any (0)
<li>No Fit (1)
<li>None (2)
<li>Very Low (3)
<li>Low (4)
<li>Medium Low (5)
<li>Medium (6)
<li>Medium High (7)
<li>High (8)
<li>Very High (9)
</ul>

<dt>Stroke Variation
<dd><ul><li>Any (0)
<li>No Fit (1)
<li>No Variation (2)
<li>Gradual/Diagonal (3)
<li>Gradual/Transitional (4)
<li>Gradual/Vertical (5)
<li>Gradual/Horizontal (6)
<li>Rapid/Vertical (7)
<li>Rapid/Horizontal (8)
<li>Instant/Horizontal (9)
<li>Instant/Vertical (10)
</ul>

<dt>Arm Style
<dd><ul><li>Any (0)
<li>No Fit (1)
<li>Straight Arms/Horizontal (2)
<li>Straight Arms/Wedge (3)
<li>Straight Arms/Vertical (4)
<li>Straight Arms/Single Serif (5)
<li>Straight Arms/Double Serif (6)
<li>Non-Straight Arms/Horizontal (7)
<li>Non-Straight Arms/Wedge (8)
<li>Non-Straight Arms/Vertical 90)
<li>Non-Straight Arms/Single Serif (10)
<li>Non-Straight Arms/Double Serif (11)
</ul>

<dt>Letterform
<dd>
<ul><li>Any (0)
<li>No Fit (1)
<li>Normal/Contact (2)
<li>Normal/Weighted (3)
<li>Normal/Boxed (4)
<li>Normal/Flattened (5)
<li>Normal/Rounded (6)
<li>Normal/Off Center (7)
<li>Normal/Square (8)
<li>Oblique/Contact (9)
<li>Oblique/Weighted (10)
<li>Oblique/Boxed (11)
<li>Oblique/Flattened (12)
<li>Oblique/Rounded (13)
<li>Oblique/Off Center (14)
<li>Oblique/Square (15)
</ul>

<dt>Midline
<dd>
<ul><li>Any (0)
<li>No Fit (1)
<li>Standard/Trimmed (2)
<li>Standard/Pointed (3)
<li>Standard/Serifed (4)
<li>High/Trimmed (5)
<li>High/Pointed (6)
<li>High/Serifed (7)
<li>Constant/Trimmed (8)
<li>Constant/Pointed (9)
<li>Constant/Serifed (10)
<li>Low/Trimmed (11)
<li>Low/Pointed (12)
<li>Low/Serifed (13)
</ul>

<dt>XHeight
<dd><ul><li>Any (0)
<li>No Fit (1)
<li>Constant/Small (2)
<li>Constant/Standard (3)
<li>Constant/Large (4)
<li>Ducking/Small (5)
<li>Ducking/Standard (6)
<li>Ducking/Large (7)
</ul>
</dl>

<p>For further details on Panose-1, see <a rel="biblioentry"
	  href="./refs.html#ref-PANOSE">[PANOSE]</a>. 

<p><em>Panose-2</em> (see <a rel="biblioentry"
href="./refs.html#ref-PANOSE2">[PANOSE2]</a>) is a specification for a
more comprehensive font classification and matching technology which
is not limited to Latin typefaces. For example, the serif
characteristics of a Latin face may be compared with the stroke
terminations of a Kanji face.
 
<p><img src="./images/P2F24.gif"></p>

<p>The Panose-2 value is not stored inside any known font formats, but
may be measured.

<h4><a name=ucode>Range of Unicode characters</a></h4>

<p>This indicated the glyph repertoire of the font, relative to the
Basic Multilingual Plane of Unicode, and is used to eliminate
unsuitable fonts (ones that will not have the required glyphs). It
does not indicate that the font definitely has the required glyphs,
only that it is worth downloading and looking at the font. See <a
rel="biblioentry" href="./refs.html#ref-ISO10646">[ISO10646]</a> for
information about useful documents.

<p>Font formats that do not include this information, explicitly or
indirectly, may still use this descriptor, but the value must be
supplied by the document or stylesheet author, perhaps being obtained
by inspection.</p> 

<p>For Type 1 fonts, this value may be obtained
from the <!--@@look up spec for CID fonts --> CMap file).

<p>For TrueType and Opentype fonts, this information is available in
the font by looking at the 'ulUnicodeRange' bits in the 'OS/2' table,
which holds a bitfield representation of the set. This table is
defined in revision 1.66 of the TrueType specification, from
Microsoft. Considering this information as a set, each element
corresponds to a Unicode 2.0 character block, and the presence of that
element in the set indicates that the font has one or more glyph
representations to represent at least one character in that block. The
set has 128 elements as described below. The order generally follows
that in the Unicode 1.1 standard. This table may be used to convert
the information in a TrueType font into a CSS 'unicode-range'
descriptor.


<table>
<tr><th colspan="4"><hr><tr><th>Block<th>Add<th>Block name<th>Unicode range
<tr><th colspan="4"><hr><tr><td>0<td>1<td>Basic Latin<td>U+0-7F
<tr><td>1<td>2<td>Latin-1 Supplement<td>U+80-FF
<tr><td>2<td>4<td>Latin-1 Extended-A<td>U+100-17F
<tr><td>3<td>8<td>Latin Extended-B<td>U+180-24F
<tr><th colspan="4"><hr>
<tr><td>4<td>1<td>IPA Extensions<td>U+250-2AF
<tr><td>5<td>2<td>Spacing Modifier Letters<td>U+2B0-2FF
<tr><td>6<td>4<td>Combining Diacritical Marks<td>U+300-36F
<tr><td>7<td>8<td>Greek<td>U+370-3CF
<tr><th colspan="4"><hr>
<tr><td>8<td>1<td><i>Greek Symbols and Coptic</i><td>U+3D0-3EF
<tr><td>9<td>2<td>Cyrillic<td>U+400-4FF<!-- 0500-052F ?? -->
<tr><td>10<td>4<td>Armenian<td>U+530-58F
<tr><td>11<td>8<td>Hebrew<td>U+590-5FF
<tr><th colspan="4"><hr>
<tr><td>12<td>1<td><i>Hebrew Extended-A<br>Hebrew Extended-B</i><td>?? what ranges ??
<tr><td>13<td>2<td>Arabic<td>U+600-69F<!--0700-08FF ?? -->
<tr><td>14<td>4<td><i>Arabic Extended</i><td>U+670-6FF
<tr><td>15<td>8<td>Devanagari<td>U+900-97F
<tr><th colspan="4"><hr>
<tr><td>16<td>1<td>Bengali<td>U+980-9FF
<tr><td>17<td>2<td>Gurmukhi<td>U+A00-A7F
<tr><td>18<td>4<td>Gujarati<td>U+A80-AFF
<tr><td>19<td>8<td>Oriya<td>U+B00-B7F
<tr><th colspan="4"><hr>
<tr><td>20<td>1<td>Tamil<td>U+B80-BFF
<tr><td>21<td>2<td>Telugu<td>U+C00-C7F
<tr><td>22<td>4<td>Kannada<td>U+C80-CFF
<tr><td>23<td>8<td>Malayalam<td>U+D00-D7F<!-- 0D80-0DFF ?? -->
<tr><th colspan="4"><hr>
<tr><td>24<td>1<td>Thai<td>U+E00-E7F
<tr><td>25<td>2<td>Lao<td>U+E80-EFF
<!-- <tr><td>- <td><b>Tibetan ??</b><td>-->
<tr><td>26<td>4<td>Georgian<td>U+10A0-10EF
<tr><td>27<td>8<td><i>Georgian Extended</i><td>U+10F0-10FF ??
<tr><th colspan="4"><hr>
<tr><td>28<td>1<td>Hangul Jamo<td>U+1100-11FF
<tr><td>29<td>2<td>Latin Extended Additional<td>-
<tr><td>30<td>4<td>Greek Extended<td>U+1F00-1FFF
<tr><td>31<td>8<td>General Punctuation<td>U+2000-206F
<tr><th colspan="4"><hr>
<tr><td>32<td>1<td>Superscripts and Subscripts<td>-
<tr><td>33<td>2<td>Currency Symbols<td>U+20A0-20CF
<tr><td>34<td>4<td>Combining Marks for Symbols<td>U+20D0-20FF
<tr><td>35<td>8<td>Letterlike Symbols<td>U+2100-214F
<tr><th colspan="4"><hr>
<tr><td>36<td>1<td>Number Forms<td>U+2150-218F
<tr><td>37<td>2<td>Arrows<td>U+2190-21FF
<tr><td>38<td>4<td>Mathematical Operators<td>U+2200-22FF
<tr><td>39<td>8<td>Miscellaneous Technical<td>U+2300-23FF
<tr><th colspan="4"><hr>
<tr><td>40<td>1<td>Control Pictures<td>U+2400-243F
<tr><td>41<td>2<td>Optical Character Recognition<td>U+2440-245F
<tr><td>42<td>4<td>Enclosed Alphanumerics<td>U+2460-24FF
<tr><td>43<td>8<td>Box Drawing<td>U+2500-257F
<tr><th colspan="4"><hr>
<tr><td>44<td>1<td>Block Elements<td>U+2580-259F
<tr><td>45<td>2<td>Geometric Shapes<td>U+25A0-25FF
<tr><td>46<td>4<td>Miscellaneous Symbols<td>U+2600-26FF
<tr><td>47<td>8<td>Dingbats<td>U+2700-27BF
<tr><th colspan="4"><hr>
<tr><td>48<td>1<td>CJK Symbols and Punctuation<td>U+3000-303F
<tr><td>49<td>2<td>Hiragana<td>U+3040-309F
<tr><td>50<td>4<td>Katakana<td>U+30A0-30FF
<tr><td>51<td>8<td>Bopomofo<td>U+3100-312F
<tr><th colspan="4"><hr>
<tr><td>52<td>1<td>Hangul Compatibility Jamo<td>U+3130-318F
<!-- <tr><td>- <td><b>Kanbun ??</b><td>-->
<tr><td>53<td>2<td>CJK Miscellaneous<td>??
<tr><td>54<td>4<td>Enclosed CJK Letters and Months<td>U+3200-32FF
<tr><td>55<td>8<td>CJK compatibility<td>U+3300-33FF
<tr><th colspan="4"><hr>
<tr><td>56<td>1<td>Hangul<td>U+AC00-D7FF
<!-- <tr><td>57<td>0<td>RESERVED<td>-
<tr><td>58<td> RESERVED<td>- -->
<tr><td>59<td>8<td>CJK Unified Ideographs<td>U+4E00-9FFF
<tr><th colspan="4"><hr>
<!-- <tr><td>-<td><b>Surrogates ??</b><td>-->
<tr><td>60<td>1<td>Private Use Area<td>U+E000-F8FF
<tr><td>61<td>2<td>CJK Compatibility Ideographs<td>U+F900-FAFF
<tr><td>62<td>4<td>Alphabetic Presentation Forms<td>U+FB00-FB4F
<tr><td>63<td>8<td>Arabic Presentation Forms-A<td>U+FB50-FDFF
<tr><th colspan="4"><hr>
<tr><td>64<td>1<td>Combining Half Marks<td>U+FE20-FE2F<!-- this is only two characters -->
<tr><td>65<td>2<td>CJK compatibility Forms<td>U+FE30-FE4F
<tr><td>66<td>4<td>Small Form Variants<td>U+FE50-FE6F
<tr><td>67<td>8<td>Arabic Presentation Forms-B<td>U+FE70-FEFF<!--FEFF also in Specials -->
<tr><th colspan="4"><hr>
<tr><td>68<td>1<td>Halfwidth and Fullwidth Forms<td>U+FF00-FFEF
<tr><td>69<td>2<td>Specials<td>U+FFF0-FFFD 
<!-- this is just the 'unknown character' glyph -->
<!-- <tr><td>70 - <br>127<td>0<td>RESERVED<td>? -->
</table>

<p class=comment>The TrueType bitfield system has the problem that it
is tied to Unicode 1.1 and is unable to cope with Unicode expansion -
it is unable to represent Tibetan for example.

<p>There are other classifications into scripts, such as the 
<a rel="biblioentry" href="./refs.html#ref-MONOTYPE">[MONOTYPE]</a>
	system and a proposed ISO script system.

<p>Because of this, classification of glyph repertoires by the range
of Unicode characters that may be represented with a particular font
is suggested in this specification.

<h4><a name=tline>Top Baseline</a></h4>

<p>This gives the position in the em square of the top
baseline. The top baseline is used by  Sanscrit-derived scripts for
alignment, just as the bottom baseline is used for Latin, Greek and
Cyrillic scripts.

<p>For TrueType GX fonts, this value may be obtained from the <a
rel="biblioentry" href="./refs.html#ref-TRUETYPEGX">[TRUETYPEGX]</a>
<tt>bsln</tt> table.

<h4><a name=stemv>Vertical stem width</a></h4>

<p>The width of vertical (or near-vertical) stems of glyph
representations. This information is often tied to hinting, and may
not be directly accessible in some font formats. For Type 1 fonts,
this may be obtained from the <tt>/StdVW</tt> entry in the Private
dictionary or the AFM file. For TrueType fonts, this may be obtained
from the <tt>cvt</tt> table.

<h4><a name=slope>Vertical stroke angle</a></h4>

<p>Angle, in degrees counterclockwise from the vertical, of the dominant
vertical strokes of the font. The value is negative for fonts that
slope to the right, as almost all italic fonts do. This descriptor may
also be specified for oblique fonts, slanted fonts, script fonts, and
in general for any font whose vertical strokes are not precisely
vertical. A non-zero value does not of itself indicate an italic font.

<h3><a name=universal>Web Fonts for Multiple Media</a></h3>

<p>Below we list and define the font metadata and HTTP access
methods that have been found useful for client-side font matching,
synthesis, and download for heterogeneous platforms accessing the
Web. The data may be useful for any medium which needs to use fonts on
the Web by some other means than physical embedding of the font data
inside the medium.  These definitions are used in the main body of
this specification, where they are mapped onto an at-rule extension
to CSS1. These definitions could also be mapped onto VRML nodes, or
CGM Application Structures, or a Java API. Fonts retrieved by one
medium and stored in a proxy cache could be re-used by another medium,
saving download time and network bandwidth.

<p>A non-exhaustive list examples of such media includes:

<ul>
<li>2-D vector formats
<ul>
  <li>Computer Graphics Metafile
  <li>Simple Vector Format
</ul>
<li>3-D graphics formats
<ul>
  <li>VRML
  <li>3DMF
</ul>
<li>Object embedding technologies
<ul>
  <li>Java
  <li>Active-X
  <li>Obliq
</ul>
</ul>

<h3><a name=coneg>Font retrieval</a></h3>

<p>There are many different font formats in use by many different
platforms. To select a preferred font format, transparent content
negotiation is used (see <a rel="biblioentry"
href="./refs.html#ref-NEGOT">[NEGOT]</a>). It is always possible to
tell when a font is being dereferenced, because the URL is inside a
font description. Thus, only the relevant Accept headers need be sent
(not headers related to images, HTML, etc).

<h2>Printing</h2>
<H3>Future extensions</H3>
<p>The following is a short list of where we expect to see additional
work concerning printing.

<ul>

<li>Multi-column Properties. 

<li>Additional Page Properties. Documents might contain multiple
sections, each with a different page orientation, headers/footers,
etc. How elements span pages should be better controlled with
widow/orphan control and keep together type properties. Additional
formatting properties such as vertical page alignment and font
kerning. 

<li>Media Dependent Elements. It would be much easier for many users
if a separate style sheet did not have to be maintained for each
possible output medium. This would also support inline styles. Can
they be merged so that a media property is associated with each
element or style sheet property? What about properties that apply to
more than one element? How do the various media cascade? 

<li>Collections of Pages. The author may define a set of pages that
may be logically printed together, e.g., a catalog or a chapter of a
book. How does a user discover that the author has provided this? Is
there a uniform UI that is presented? Can collections contain other
collections? To what level? Are page relationships defined from a
table of contents type of page or on each page itself? What if a page
belongs to more than one collection? How can print collections be
reconciled with other planned site navigation tools? Do collections
have other uses besides printing, e.g., off line reading? 


<li>Headers and Footers. How can those provided by the page author be
reconciled with those desired by the user? What about site wide
headers and footers, logos, and watermarks? Should all information be
propagated even when redundant? Are headers a type of decoration or
style? Is it proper to have headers and footers appear in style
sheets? What if they have content in addition to format, e.g., a
company confidential message as well as page number location? Is there
a collection heading that has priority if the page is printed as part
of an author defined set? 

<li>Footnotes. How are footnotes specified within a page? Should we
have a separate method for those at the end of a page as well as those
at the end of a section? Can the user elect to have end of page
footnotes printed at the end of the section anyway? How are footnotes
presented on screen? As a pop-up? Can links to other HTML pages
automatically be treated as footnotes? 

<li>Environment Dependent Styles. Can the UA environment automatically
pick an appropriate style? If a high resolution color screen is used,
can it retrieve different images than a low resolution monochrome
screen? Should high resolution printers retrieve a higher resolution
image for printing? What if more than one printer is available? How
does the UA describe the highest quality available for the various
printers? Can certain display devices be paginated, thus presenting
headers, footers, etc. 

<li>Finishing Properties. These are the properties associated with a
page to be printed that are required to meet the author's or user's
printing requirements - rendering options, stapling or binding,
impositions, delivery, accounting, media type or grade, form name,
number of copies, etc. Especially useful in third party printing,
shared printers, and intranet print shops. How are these attached to a
document to be printed? Can portions be overridden? What about the
security of the accounting information. Can they be divided into
author and user fields, supplied at different points? 
</ul>

</BODY>
</HTML>
