<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Visual effects</title>
</head>
<body>
<h1 align="center">Visual effects</h1>

<P><em>The visual effects discussed in these sections do not alter layout,
only presentation.</em>

<H2><a name="overflow-clipping">Overflow and clipping</a></H2>

<P>Generally, the contents of a block box are confined within the
content edges of the box. In certain cases, a box may <span
class="index-def"
title="overflow|box::overflow"><dfn>overflow</dfn></span>, meaning its
content lies partly or entirely outside of the block:</P>

<ul>

<li>Content is too wide for the containing block. This may happen when an
element's <span class="propinst-width">'width'</span> property has a
value that causes the generated box (or inline boxes) to spill over
sides of the containing block. An inline replaced element
(e.g., an image) that has a large <span class="index-inst"
title="intrinsic width">intrinsic width</span> may also overflow.

<li>An element's height exceeds an explicit height assigned to the containing
block (i.e., the containing block's height is determined by the <span
class="propinst-height">'height'</span> property, not by content
height).

<li>It is <a href="visuren.html#absolute-positioning">positioned
absolutely</a>.

<li>It has <a href="box.html#margin-properties">negative margins</a>.
</ul>

<p>Whenever overflow occurs, the <span
class="propinst-overflow">'overflow'</span> property specifies how a
box is clipped. The <span class="propinst-clip">'clip'</span> property
specifies the size and shape of the clipping region.  Specifying a
small clipping region may cause clipping of otherwise visible
contents.

<H3><a name="overflow">Overflow</a>: the <span
class="propinst-overflow">'overflow'</span> property</H3>

<!-- #include src=properties/overflow.srb -->

<P>This property specifies whether the contents of a block-level
element are clipped when they overflow the element's box. Values have
the following meanings:</p>

<dl>

<dt><strong>visible</strong> 

<dd>This value indicates that nested boxes are not clipped, i.e., they
may be rendered outside the block box. <!-- In this case, the computed
values of margins outside the containing block are negative (see the
section on <a href="visudet.html#comp-margin-widths">computed
margin widths</a>). -->

<dt><strong>hidden</strong> 

<dd>This value indicates that the boxes are clipped and that no
scrolling mechanism should be provided to view the content outside the
clipping region; users will not have access to clipped
content. <!-- Padding and border are applied to the regular height and
width of each overflowing box, as if it were not overflowing. -->
The size and shape of the clipping region is specified
by the <span class="propinst-clip">'clip'</span> property.

<dt><strong>scroll</strong> 

<dd>This value indicates that if the user agent supports a visible
scrolling mechanism, that mechanism should be displayed for a box
whether or not any of its content is clipped. This avoids any problem
with scrollbars appearing and disappearing in a dynamic
environment. When this value is specified and the target medium is
'print' or 'projection', overflowing content should be printed.

<dt><strong>auto</strong> 

<dd>The behavior of the 'auto' value is user agent-dependent, but
should cause a scrolling mechanism to appear for overflowing boxes.

</dl>

<P> Even if <span class="propinst-overflow">'overflow'</span> is set
to 'visible', contents may be clipped to a UA's document window by the
native operating environment.

<div class="example"><P>
Consider the following example, of a block quotation
(BLOCKQUOTE) that is too big
for its containing block (established by a DIV). Here is
the source document:</p>

<PRE class="html-example">
&lt;DIV&gt;
&lt;BLOCKQUOTE&gt;
I didn't like the play, but then I saw
it under adverse conditions - the curtain was up.
&lt;DIV class="attributed-to"&gt;- Groucho Marx&lt;/DIV&gt;
&lt;/BLOCKQUOTE&gt;
&lt;/DIV&gt;
</PRE>

<P>Here is the style sheet controlling the sizes and style of the
generated boxes:

<PRE>
DIV { width : 100px; height: 100px;
      border: thin solid red
      }

BLOCKQUOTE   { width : 125px; height : 100px;
      position: absolute;
      top: 50px; left: 50px; 
      border: thin dashed black
      }

DIV.attributed-to { text-align : right; }
</PRE>


<P>The initial value of <span
class="propinst-overflow">'overflow'</span> is 'visible', so
the BLOCKQUOTE would be formatted without clipping, something like this:</P>

<P><img src="./images/overflow1.gif" alt="Rendered overflow"></p>

<P>Setting <span class="propinst-overflow">'overflow'</span> to
'hidden' for the DIV element, on the other hand, causes the
BLOCKQUOTE to be clipped by the containing block:

<P><img src="./images/overflow2.gif" alt="Clipped overflow"></p>

<P>A value of 'scroll' would tell UAs that support 
a visible scrolling mechanism to display one so that users
could access the clipped content.
</div>

<H3><a name="clipping">Clipping</a>: the <span
class="propinst-clip">'clip'</span> property</h3>

<p>A <span class="index-def" title="clipping region"><dfn>clipping
region</dfn></span> defines what portion of an element's <a
href="conform.html#rendered-content">rendered content</a> is
visible. By default, the clipping region for an element has the
dimensions of the containing block of its generated boxes. However, the
clipping region may be modified by the <span
class="propinst-clip">'clip'</span> property.

<!-- #include src=properties/clip.srb -->

<P>Values have the following meanings:</p>

<dl>
<dt><strong>auto</strong>
<dd>The clipping region for boxes generated by this element
is the same size as the boxes themselves.

<dt><span class="index-def" title="&lt;shape&gt;::definition of"><a
name="value-def-shape"
class="value-def"><strong>&lt;shape&gt;</strong></a></span>

<dd>In CSS2, the only valid &lt;shape&gt; value is:
rect (<span
class="value-inst-top">&lt;top&gt;</span> <span
class="value-inst-right">&lt;right&gt;</span> <span
class="value-inst-bottom">&lt;bottom&gt;</span> <span
class="value-inst-left">&lt;left&gt;</span>)

where <span class="value-inst-top">&lt;top&gt;</span>, <span
class="value-inst-bottom">&lt;bottom&gt;</span> <span
class="value-inst-right">&lt;right&gt;</span>, and <span
class="value-inst-left">&lt;left&gt;</span> specify offsets from the
respective sides of the box.

<P><span class="index-def" title="&lt;top&gt;::definition of"><a
name="value-def-top" class="value-def">&lt;top&gt;</a></span>, <span
class="index-def" title="&lt;right&gt;::definition of"><a
name="value-def-right" class="value-def">&lt;right&gt;</a></span>,
<span class="index-def" title="&lt;bottom&gt;::definition of"><a
name="value-def-bottom" class="value-def">&lt;bottom&gt;</a></span>,
and <span class="index-def" title="&lt;left&gt;::definition of"><a
name="value-def-left" class="value-def">&lt;left&gt;</a></span> may
either have a <span class="value-inst-length">&lt;length&gt;</span>
value or 'auto'.  Negative lengths are permitted. The value 'auto'
means that a given edge of the clipping region will be the same as the
edge of the element's generated box. (I.e., 'auto' is the same as '0'.)

<P> When converted to pixel coordinates, the bottom-right corner is
excluded from the clipping rectangle. This rule is necessary to permit
the definition of zero-width or zero-height rectangles.
</dl>

<P>If the clipping region exceeds the bounds of the UA's
document window, contents may be clipped to that window by the
native operating environment.

<div class="example"><P>
The following two rules:</P>
<PRE>
P { clip: rect(5px, 10px, 10px, 5px); }
P { clip: rect(5px, -5px, 10px, 5px); }
</PRE>

<P>will create the rectangular clipping regions delimited
by the dotted line in the following illustrations:</p>

<P><IMG src="images/clip.gif" alt="Two clipping regions"></p>
</div>

<div class="note"><P>
<em><strong>Note.</strong>
In CSS2, all clipping regions are rectangular. We anticipate
future extensions to permit non-rectangular clipping.
</em>
</div>

<H2><a name="visibility">Visibility</a>: the <span
class="propinst-visibility">'visibility'</span> property</H2>

<!-- #include src=properties/visibility.srb -->

<p>The <span class="propinst-visibility">'visibility'</span> property
specifies whether the boxes generated by an element are
rendered. Invisible boxes still affect layout (set the <span
class="propinst-display">'display'</span> property to 'none' to
suppress box generation altogether).  Values have the following
meanings:</p>

<dl>
<dt><strong>visible</strong>
<dd>The generated box is visible. 
<dt><strong>hidden</strong>
<dd>The generated box is invisible, but still affects layout.
<dt><strong>collapse</strong>
<dd>Please consult the section on 
<a href="tables.html#dynamic-effects">dynamic row and column
effects</a> in tables. If used on elements other than rows or columns,
'collapse' has the same meaning as 'hidden'.
</dl>

<P>This property may be used in conjunction with scripts to create
dynamic effects.

<div class="html-example"><P>
In the following example, pressing either form button invokes a
user-defined script function that causes the corresponding box to
become visible and the other to be hidden. Since these boxes
have the same size and position, the
effect is that one replaces the other.

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;STYLE type=&quot;text/css&quot;&gt;
&lt;!--
   #container1 { position: absolute; top: 2in; left: 2in; width: 2in}
   #container2 { position: absolute; top: 2in; left: 2in; width: 2in;
                 visibility: hidden; }
--&gt;
&lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;P&gt;Choose a suspect:&lt;/P&gt;
&lt;DIV id="container1"&gt;
   &lt;IMG alt="Al Capone" width="100" height="100" src="suspect1.jpg"&gt;
   &lt;P&gt;Name: Al Capone&lt;/P&gt;
   &lt;P&gt;Residence: Chicago&lt;/P&gt;
&lt;/DIV&gt;

&lt;DIV id="container2"&gt;
   &lt;IMG alt="Lucky Luciano" width="100" height="100" src="suspect2.jpg"&gt;
   &lt;P&gt;Name: Lucky Luciano&lt;/P&gt;
   &lt;P&gt;Residence: New York&lt;/P&gt;
&lt;/DIV&gt;

&lt;FORM method="post" action="http://www.suspect.org/process-bums"&gt;
   &lt;P&gt;
   &lt;INPUT name="Capone" type="button" value="Capone" onclick='show("container1");hide("container2")'&gt;
   &lt;INPUT name="Luciano" type="button" value="Luciano" onclick='show("container2");hide("container1")'&gt;
&lt;/FORM&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>

<P>Note that the <span class="propinst-position">'position'</span>
property of each DIV element has the value 'relative'. A more
visually appealing version of the above might be designed using
overlapping <a href="visuren.html#absolute-positioning">
absolutely positioned</a> boxes.</p>
</div>
</body>
</html>
