<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: changes.src,v 2.22 2002-04-22 22:05:21 bbos Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Appendix B: Changes</TITLE>
</HEAD>
<BODY>
<H1 align="center">Changes</H1>
<P><em>This appendix is informative, not normative.</em></P>

<H2>Changes from CSS1</H2>

<P>CSS2 builds on CSS1 and all valid CSS1 style sheets are valid CSS2
style sheets. The changes between the CSS1 specification (see
[[CSS1]]) and this specification fall into three groups: new
functionality, updated descriptions of CSS1 functionality, and changes
to CSS1.

<H3>New functionality</H3>

<P>In addition to the functionality of CSS1, CSS2 supports:</p>

<UL>

<LI>The concept of <A HREF="media.html">media types</A>.

<LI>The <a href="cascade.html#value-def-inherit">'inherit'</a> 
value for all properties.

<LI><A HREF="page.html">Paged media</A>

<LI><A HREF="aural.html">Aural style sheets</A>

<LI>Several internationalization features, including <a
href="generate.html#lists">list numbering styles</a>, support for <a
href="visuren.html#direction">bidirectional text</a>, and support for
language-sensitive <a href="generate.html#quotes">quotation
marks</a>.

<LI><A HREF="fonts.html#font-selection">An extended font selection</A>
mechanism, including intelligent matching, synthesis, and downloadable
fonts. Also, the concept of system fonts has been is introduced, and a
new property, <span
class="propinst-font-size-adjust">'font-size-adjust'</span>, has been added.

<LI><A HREF="tables.html">Tables</A>, including new values on <span
class="propinst-display">'display'</span> and <span
class="propinst-vertical-align">'vertical-align'</span>.

<LI><A HREF="visuren.html#relative-positioning">Relative</A> and <A
HREF="visuren.html#absolute-positioning">absolute positioning</A>,
including <A HREF="visuren.html#fixed-positioning">fixed
positioning</A>.

<LI>New box types (along with block and inline): <a
href="visuren.html#compact">compact</a> and <a href="visuren.html#run-in">
run-in</a>.

<LI>The ability to control content <a
href="visufx.html#overflow">overflow</a>, <a
href="visufx.html#clipping">clipping</a>, and <a
href="visufx.html#visibility">visibility</a> in the visual formatting
model.

<LI>The ability to specify minimum and maximum <a
href="visudet.html#min-max-widths">widths</a> and <a
href="visudet.html#min-max-heights">heights</a> in the visual
formatting model.

<LI>An extended <A HREF="selector.html">selector</A> mechanism,
including child selectors, adjacent selectors, and attribute selectors.

<LI><A HREF="generate.html#generated-text">Generated content</a>,
<a href="generate.html#counters">counters and automatic numbering</A>, and
<a href="generate.html#markers">markers</a>.

<LI>Text shadows, through the new <span
class="propinst-text-shadow">'text-shadow'</span> property.

<LI>Several new <A
HREF="selector.html#pseudo-classes">pseudo-classes</A>, :first-child, :hover,
:focus, :lang.

<LI>System <A HREF="ui.html#system-colors">colors</A> and 
<A href="ui.html#system-fonts">fonts</a>.

<LI><A href="ui.html#cursor-props">Cursors</a>.

<LI><A href="ui.html#dynamic-outlines">Dynamic outlines</a>.

</UL>



<H3>Updated descriptions</H3>

<P>The CSS1 specification was short and concise. This specification is
much more voluminous and more readable. Much of the additional content
describes new functionality, but the description of CSS1 features has
also been extended. Except in a few cases described below, the
rewritten descriptions do not indicate a change in syntax nor
semantics. 

<H3><a name="changes-from-css1">Semantic changes from CSS1</a></H3>

<P>While all CSS1 style sheets are valid CSS2 style sheets, there are
a few cases where the CSS1 style sheet will have a different meaning
when interpreted as a CSS2 style sheet. Most changes are due to
implementation experience feeding back into the specification, but
there are also some error corrections.

<UL>
<LI>The meaning of "!important" has been changed. In CSS1,
"!important" in an author's style sheet took precedence over
one in a user style sheet. This has been reversed in CSS2.


<LI>In CSS2 <A HREF="syndata.html#color-units">color values</A> are clipped
with regard to the device gamut, not with regard to the sRGB gamut as
in CSS1.

<LI>CSS1 simply said that 'margin-right' was ignored if the both
'margin-left' and 'width' were set. In CSS2 the choice between
relaxing 'margin-right' or 'margin-left' depends on the writing direction.

<LI>In CSS1, several properties (e.g., 'padding') had values referring
to the width of the parent element. This was an error; the value
should always refer to the width of a block-level element and this
specification reflects this by introducing the term "containing block".

<LI>The initial value of 'display' is 'inline' in CSS2, not 'block' as
in CSS1.

<LI>In CSS1 'background-position' was relative to the content edge, in
CSS2 it is relative to the padding edge.

<LI>In CSS1, the 'clear' property applied to all elements. This was an
error, and the property only applies to block-level elements in CSS2.

<LI>In CSS1, <span class="index-inst"
title="pseudo-classes:::link|:link|link
(pseudo-class)">':link'</span>, <span class="index-inst"
title="pseudo-classes:::visited|:visited|visited
(pseudo-class)">':visited'</span> and <span class="index-inst"
title="pseudo-classes:::active|:active|active
(pseudo-class)">':active'</span> were mutually exclusive; in CSS2, <a
href="selector.html#dynamic-pseudo-classes">':active'</a> can occur
together with <a href="selector.html#link-pseudo-classes">':link' or
':visited'</a>.

<LI>The suggested scaling factor between adjacent <span
class="propinst-font-size">'font-size'</span> indexes in the table of font
sizes has been reduced from 1.5 to 1.2.

<LI>The computed value, not the actual value, of <span
class="propinst-font-size">'font-size'</span> is inherited.

<LI>The CSS1 description of 'inside' (for <span
class="propinst-list-style-position">'list-style-position'</span>)
allowed the interpretation that the left margin of the text was
affected, rather than the position of the bullet. In CSS2 that
interpretation is ruled out.

<li>Please also consult the <em>normative</em> section on the <a
href="grammar.html#tokenizer-diffs">differences between the CSS1 and
CSS2 tokenizer</a>.
</UL>

<H2>Changes from CSS2</H2>

<P>CSS2.1 is an updated version of CSS2. The changes between the CSS2
specification (see [[CSS2]]) and this specification fall into four
groups: known errors, typographical errors, clarifications, and
changes.</P>

<h3><a name="known-errors">Known Errors</a></h3>

<h4 id="x1">Shorthand properties</h4>

<p>Shorthand properties take a list of subproperty values <em>or</em>
the value 'inherit'. One cannot mix 'inherit' with other subproperty
values as it would not be possible to specify the subproperty to which
'inherit' applied. The definitions of a number of shorthand properties
do not enforce this rule: 'border-top', 'border-right',
'border-bottom', 'border-left', 'border', 'background', 'font',
'list-style', 'cue', and 'outline'.

<h4 id="x3"><a href="syndata.html#tokenization">Section 4.1.1</a> (and
<a href="grammar.html#q2">D2</a>)</h4>

<ul>
<li>The "nmchar" token should also allow the range "A-Z".
<li>In the rule for "any" (in the core syntax), change "FUNCTION"
to "FUNCTION any* ')'".
</ul>

<p><small class="date">[2001-04-03]</small> The underscore character
("_") should be allowed in identifiers. The definitions of the lexical
macros "nmstart" and "nmchar" should include it and become,
respectively:

<pre>
nmstart  [a-zA-Z_]|{nonascii}|{escape} 
nmchar   [a-zA-Z0-9-_]|{nonascii}|{escape}
</pre>

<h4 id="x4"><a href="syndata.html#q4">4.1.3 Characters and case</a></h4>

<p>In the third bullet, add to point 1.:

<blockquote>
<p>1.with a space (or other whitespace character): "\26 B" ("&amp;B") 
</blockquote>

<p>the following text: "In this case, user agents should treat a
"CR/LF" pair (13/10) as a single whitespace character."

<p><small class="date">[2001-07-30]</small> The underscore should be
allowed in identifiers. Change "In CSS2, identifiers [...] can contain
only the characters [A-Za-z0-9] and ISO 10646 characters 161 and
higher, plus the hyphen (-)" to:

<blockquote><p>In CSS2, identifiers [...] contain only the characters
[A-Za-z0-9] and ISO 10646 characters 161 and higher, plus the hyphen
(-) and the underscore (_)</p></blockquote>

<h4 id="x5"><a href="syndata.html#values">Section 4.3 (Double sign problem)</a></h4>

<p>Several values described in subsections of this section
incorrectly allow two "+" or "-" signs at their beginnings. 
<a href="syndata.html#length-units">Lengths</a>, for instance,
are described as follows:</p>

<blockquote>
<p>The format of a length value (denoted by &lt;length&gt; in this
specification) is an optional sign character ('+' or '-', with '+'
being the default) immediately followed by a &lt;number&gt; (with or without a decimal point) 
immediately followed by a unit identifier (e.g., px, deg, etc.).
</blockquote>

<p>However, since &lt;number&gt; already allows a "+" or "-"
sign, the above definition means two signs may appear. The following
value types allow two signs but are meant to allow one 
initial sign only:</p>

<ul>
<li><a href="syndata.html#length-units">Lengths</a>
<li><a href="syndata.html#percentage-units">Percentages</a>
<li><a href="syndata.html#angle-units">Angles</a>
</ul>

<h4 id="s-4-3-2"><a href="syndata.html#length-units">Section 4.3.2
Lengths</a></h4>

<p><small class="date">[2001-08-28]</small> The suggested reference
pixel is based on a <ins>96&nbsp;dpi</ins> device, not 90&nbsp;dpi.
The visual angle is thus about <ins>0.0213 degrees</ins> instead of
0.0227, and a pixel at arm's length is about <ins>0.26&nbsp;mm</ins>
instead of 0.28

<h4 id="x6"><a href="syndata.html#color-units">Section 4.3.6</a></h4>

<p>Delete the comments about range
restriction after the following examples:

<pre>
EM { color: rgb(255,0,0) }      
EM { color: rgb(100%, 0%, 0%) } 
</pre>

<h4 id="x7"><a href="selector.html#q2">5.10 Pseudo-elements and pseudo-classes</a></h4>

<p>In the second bullet, the following sentence is incomplete: "The
exception is ':first-child', which can be deduced from the document
tree." The ':lang()' pseudo-class can be deduced
from the document in some cases.

<h4 id="x8"><a href="box.html#mpb-examples">8.2 Example of margins, padding, and borders</a></h4>

<p>The colors in the example HTML do not match the colors in the
image. 

<h4 id="s-8-5-2"><a href="box.html#border-color-properties">Section
8.5.2 Border color: 'border-top-color', 'border-right-color',
'border-bottom-color', 'border-left-color', and
'border-color'</a></h4>

<p><small class="date">[2001-06-25]</small> The value 'transparent' is 
also allowed on 'border-top-color', 'border-right-color', etc. Change
the line "Value: &lt;color&gt; | inherit" to

<blockquote><p>Value: &lt;color&gt; | transparent | inherit</blockquote>

<h4 id="x2"><a href="box.html#padding-properties">Section 8.4 Padding properties</a></h4>

<p>The five properties related to padding ('padding', 'padding-top',
'padding-right', 'padding-bottom', and 'padding-left') should say that
they don't apply to table rows, row groups, header groups, footer
groups, columns, and column groups.

<h4 id="x9"><a href="box.html#border-style-properties">8.5.3 Border
style</a></h4>

<p>Change the sentence "The color of borders drawn for values of
'groove', 'ridge', 'inset', and 'outset' depends on the element's
'color' property" to

<blockquote><p>The color of borders drawn for values of 'groove',
'ridge', 'inset', and 'outset' should be based on the element's
'border-color' property, but UAs may choose their own algorithm to
calculate the actual colors used. For instance, if the 'border-color'
has the value 'silver', then a UA could use a gradient of colors from
white to dark gray to indicate a sloping border.</blockquote>

<h4 id="s-8-5-4"><a
href="box.html#border-shorthand-properties">Section 8.5.4 Border
shorthand properties: 'border-top', 'border-bottom', 'border-right',
'border-left', and 'border'</a></h4>

<p>Change &lt;'border-top-width'&gt; to &lt;border-width&gt; as the first
value option for 'border-top', 'border-right', 'border-bottom',
and 'border-left', and change &lt;'border-style'&gt; to &lt;border-style&gt;.
For 'border', change &lt;'border-width'&gt;
to &lt;border-width&gt; and
&lt;'border-style'&gt; to &lt;border-style&gt;.

<p><small class="date">[2001-06-25]</small> The value 'transparent' is
also allowed on 'border-top', 'border-bottom', 'border-right',
'border-left', and 'border'.

<p>Change the two lines "Value: [ &lt;'border-top-width'&gt; ||
&lt;'border-style'&gt; || &lt;color&gt; | inherit" to

<blockquote><p>Value: [ &lt;border-top-width&gt; || &lt;border-style&gt;
|| [&lt;color&gt; | transparent] | inherit</blockquote>

<h4 id="x10"><a href="box.html#value-def-border-width">8.5.4 Border shorthand properties: 'border-top', 'border-bottom', 'border-right', 'border-left', and
    'border'</a></h4>

<p>Change &lt;'border-top-width'&gt; to &lt;border-width&gt; as the first
value option for 'border-top', 'border-right', 'border-bottom',
and 'border-left', and change &lt;'border-style'&gt; to &lt;border-style&gt;.
For 'border', change &lt;'border-width'&gt;
to &lt;border-width&gt; and
&lt;'border-style'&gt; to &lt;border-style&gt;.

<h4 id="x11"><a href="visuren.html#choose-position">Section 9.3.1</a></h4>

<p>The definition of the value 'static' should
say that the properties 'top', 'right', 'bottom', and 'left'
do not apply.

<h4 id="x12"><a href="visuren.html#position-props">Section 9.3.2</a></h4>

<p>The properties 'top', 'right', 'bottom', and 'left', incorrectly
refer to offsets with respect to a box's content edge. The proper edge
is the margin edge. Thus, for 'top', the description should read,
"This property specifies how far a box's top margin edge is offset
below the top edge of the box's containing block."

<h4 id="x13"><a href="visuren.html#relative-positioning">Section 9.4.3</a></h4>

<p>In the first sentence, add to the end of
"Once a box has been laid out according to the normal flow"
the words "or floated,".

<h3 id="s-9-7"><a href="visuren.html#q24">Section 
9.7 Relationships between 'display', 'position', and 'float'</a></h3>

<p>If an element floats, the
'display' property is set to a block-level value, but not necessarily
'block'. In bullet 3, change "Otherwise, if 'float' has a value other
than 'none', 'display' is set to 'block' and the box is floated" to:

<blockquote><p>
Otherwise, if 'float' has a value other than 'none', the box is
floated and 'display' is set according to this table:
<table>
<tr><th>Specified value <th>Computed value
<tr><td>inline-table <td>table
<tr><td>inline, run-in, compact, table-row-group, table-column,
table-column-group, table-header-group, table-footer-group, table-row,
table-cell, table-caption <td>block
<tr><td>others <td>same as specified
</table>
</blockquote>

<h4 id="x14"><a href="visudet.html#q5">Section 10.3.2 
Inline, replaced elements</a> (and 10.3.4, 10.3.6, and 10.3.8)</h4>

<p>Change:</p>

<blockquote>
<p> A specified value of 'auto' for 'width' gives the element's intrinsic
  width as the computed value.
</blockquote>

<p>to:</p>

<blockquote>
<p> If 'width' has a specified value of 'auto' and 'height' also has a
  specified value of 'auto', the element's intrinsic width is the
  computed value of 'width'.  If 'width' has a specified value of
  'auto' and 'height' has some other specified value, then the computed
  value of 'width' is
    (intrinsic width) * ( (computed height) / (intrinsic height) ).
</blockquote>

<h4 id="x15"><a href="visudet.html#q6">Section 10.3.3</a></h4>

<p>In the last sentence of the paragraph following the equation --
"If the value of 'direction' is 'ltr', this happens to 
'margin-left' instead." -- substitute 'rtl' for 'ltr'.

<h4 id="x16"><a href="visudet.html#q16">Section 10.6.2 
Inline, replaced elements ...</a> (and 10.6.5)</h4>

<p>Change:</p>

<blockquote>
<p> If 'height' is 'auto', the computed value
    is the intrinsic height. 
</blockquote>

<p>to:</p>

<blockquote>
<p> If 'height' has a specified value of 'auto' and 'width' also has a
  specified value of 'auto', the element's intrinsic height is the
  computed value of 'height'.  If 'height' has a specified value of
  'auto' and 'width' has some other specified value, then the computed
  value of 'height' is
    (intrinsic height) * ( (computed width) / (intrinsic width) ).
</blockquote>


<h4 id="x17"><a href="visudet.html#q17">Section 10.6.3</a></h4>

<p>The height calculation for block-level, non-replaced elements in
normal flow, and floating, non-replaced elements is not quite correct.
The height calculation should read as follows:</p>

<p>If <span class="propinst-top">'top'</span>, <span
class="propinst-bottom">'bottom'</span>, <span
class="propinst-margin-top">'margin-top'</span>, or <span
class="propinst-margin-bottom">'margin-bottom'</span> are 'auto',
their computed value is 0. If <span
class="propinst-height">'height'</span> is 'auto', the height depends
on whether the element has any block-level children and whether it has
padding or borders.

<p>If it only has inline-level children, the height is the distance
between the top of the topmost line box and the bottom of the
bottommost line box.

<p>If it has block-level children, the height is the distance between
the top border-edge of the topmost block-level child box and the
bottom border-edge of the bottommost block-level child box.  However,
if the element has a non-zero top padding and/or top border, then the
content starts at the top <em>margin</em> edge of the topmost child.
Similarly, if the element has a non-zero bottom padding and/or bottom
border, then the content ends at the bottom <em>margin</em> edge of
the bottommost child.

<p>Only children in the normal flow are taken into account (i.e.,
floating boxes and absolutely positioned boxes are ignored, and
relatively positioned boxes are considered without their offset). Note
that the child box may be an <a
href="visuren.html#anonymous-block-level">anonymous box.</a>

<h4 id="x18"><a href="visufx.html#overflow">Section 11.1.1</a></h4>

<p>The example of a DIV element containing a BLOCKQUOTE
containing another DIV is not rendered correctly. The first
rule:

<pre>
DIV { width : 100px; height: 100px;
      border: thin solid red;
      }
</pre>

<p>Applies to both the external and internal DIV, so, for
example, the internal DIV box should be rendered
with a red border. The intention of the authors was 
that the first style rule only apply to the external DIV.
This could be accomplished by making it more specific by
adding a "class" or "id" value to the markup and changing
the selectors accordingly.

<h4 id="s-11-2"><a href="visufx.html#propdef-visibility">11.2
Visibility: the 'visibility' property</a></h4>

<p><small class="date">[2001-06-25]</small> Change "initial" and
"inherited" to:

<blockquote><p>
<em>Initial:</em> visible<br>
<em>Inherited:</em> yes
</blockquote>

<p>This has the same effect as the original definition, but removes
the undefined state of the root element (which was a problem for DOM
implementations).

<h4 id="x19"><a href="generate.html#content">12.2 The 'content'
					    property</a></h4>

<p>The 'content' property applies to 'display : marker' elements and
both :before and :after pseudo-elements.

<h4 id="x20"><a href="generate.html#lists">12.6.2 Lists</a></h4>

<p>Under the 'list-style' property, the following example:</p>

<pre>
UL > UL { list-style: circle outside } /* Any UL child of a UL */
</pre>

<p>Will never match valid HTML markup (since a UL element
cannot be a child of another UL element; there must be
at least an intervening LI element).

<h4 id="x21"><a href="fonts.html#font-size-props">Section 15.2.4</a></h4>

<p>Under the 'font-size-adjust' property, in the formula given
for &lt;number&gt;, the variables y, a', and c are explained. An
explanation for the variable "a" is missing and should read:</p>

<pre> a = aspect value of first-choice font
</pre> <p>In the sentence beginning "In bicameral scripts..." change
"(font size divided by x-height)" to 
"(x-height divided by font size)".

<p><small class="date">[2001-06-25]</small> 'font-size-adjust' should be
applied to the first choice font as well. (This should have no effect
since the value of 'first-size-adjust' typically will be the ex:em
ratio of the first choice font.) This corrects an oversight related to
cases where the property is inherited into children inline elements.

<h4 id="x22"><a href="fonts.html#generic-font-families">Section 15.2.6</a></h4>

<p>'Totum' and 'Kodic' is not a 'serif' but 'sans-serif'. 'pathang' is
not a 'sans-serif' but 'serif'.


<h4 id="x23"><a href="fonts.html#algorithm">Section 15.5</a></h4>

<p>In bullet 2, change "the UA uses the 'font-family' descriptor"
to "the UA uses the 'font-family' property".

<p>In bullet 6, change "steps 3, 4 and 5" to
"steps 2, 3, 4 and 5".

<h4 id="s-16-6"><a href="text.html#propdef-white-space">Section 16.6
Whitespace: the 'white-space' property</a></h4>

<p><small class="date">[2001-08-28]</small> The 'white-space' property
applies to <em>all</em> elements, not just block-level elements.

<h4 id="x24"><a href="tables.html#q2">Section 17.2 The CSS table
model</a></h4>

<p>In the definition of <strong>table-header-group</strong>, change
"footer" to "header" in "Print user agents may repeat footer rows on
each page spanned by a table."

<h4 id="x25"><a href="tables.html#anonymous-boxes">17.2.1 Anonymous table objects </a></h4>

<p>Move the first bullet text to the prose before the list of
generation rules. The rules should then be the following:</p>

<ol>

<li>If the parent P of a 'table-cell' element T is not a 'table-row',
an object corresponding to a 'table-row' will be generated between P
and T.  This object will span all consecutive 'table-cell' siblings
(in the document tree) of T.

<li>If the parent P of a 'table-row' element T is not a 'table',
'inline-table', or 'table-row-group' element, an
object corresponding to a 'table' element will be
generated between P and T. This object will span all consecutive siblings
(in the document tree) of T that require a 'table' parent:
'table-row', 'table-row-group', 'table-header-group', 
'table-footer-group', 'table-column', 'table-column-group', and 'table-caption'.

<li>If the parent P of a 'table-column' element T is not a 'table',
'inline-table', or 'table-column-group' element, an
object corresponding to a 'table' element will be
generated between P and T. This object will span all consecutive siblings
(in the document tree) of T that require a 'table' parent:
'table-row', 'table-row-group', 'table-header-group', 
'table-footer-group', 'table-column', 'table-column-group', and 'table-caption'.

<li>If the parent P of a 'table-row-group' (or 'table-header-group',
'table-footer-group', or 'table-column-group') element T is not a 'table' or 'inline-table', an
object corresponding to a 'table' element will be generated between P
and T. This object will span all consecutive siblings (in the document
tree) of T that require a 'table' parent: 'table-row',
'table-row-group', 'table-header-group', 'table-footer-group',
'table-column', 'table-column-group', and 'table-caption'.

<li>If a child T of a 'table' element (or 'inline-table') P is not a
'table-row-group', 'table-header-group', 'table-footer-group', or
'table-row' element, an object corresponding to a 'table-row' element
will be generated between P and T. This object spans all consecutive
siblings of T that are not 'table-row-group', 'table-header-group',
'table-footer-group', or 'table-row' elements.

<li>If a child T of a 'table-row-group' element (or
'table-header-group' or 'table-footer-group') P is
not a 'table-row' element, an object corresponding to a 'table-row'
element will be generated between P and T. This object spans all
consecutive siblings of T that are not 'table-row' elements.

<li>If a child T of a 'table-row' element P is not a 'table-cell'
element, an object corresponding to a 'table-cell' element will be
generated between P and T. This object spans all consecutive siblings
of T that are not 'table-cell' elements.
</ol>

<h4 id="x26"><a href="tables.html#q7">17.5 Visual layout of table
					  contents</a></h4>

<p>The following note:</p>

<blockquote>
<p><strong>Note.</strong> Table cells may be relatively and absolutely positioned, but this is not recommended: positioning and floating remove a
    box from the flow, affecting table alignment. 
</p>
</blockquote>

<p>Should be amended as follows:</p>

<blockquote>
<p><strong>Note.</strong> Table cells may be 
positioned, but this is not recommended: absolute and fixed
positioning, as well as floating, remove a box from the flow, affecting
table size.
</p>
</blockquote>

<h4 id="x27"><a href="tables.html#q7">17.5 Visual layout of table
					  contents</a></h4>

<p>Change:

<blockquote>
<p>Like other elements of the document language, internal table
elements generate rectangular boxes with content, padding, and
borders. They do not have margins, however.
</blockquote>

<p>to:

<blockquote>
<p>Like other elements of the document language, internal table
elements generate rectangular boxes with content and
borders. Cells have padding as well.  Internal table elements do not
have margins.
</blockquote>

<h4 id="x28"><a href="tables.html#separated-borders">Section 17.6.1 The
separated borders model</a></h4>

<p>In the image, change "cell-spacing" to "border-spacing".

<h4 id="s-A"><a href="sample.html">Appendix A. A sample style sheet
for HTML 4.0</a></h4>

<p><code>@media speech</code> should be <code>@media aural</code>.

<h4 id="underscore2"><a href="grammar.html#q2">Appendix D.2 Lexical
scanner</a></h4>

<p><small class="date">[2001-04-03]</small> The underscore character
("_") should be allowed in identifiers. The definitions of the lexical
macros "nmstart" and "nmchar" should include it and become,
respectively:

<pre>
nmstart  [a-z_]|{nonascii}|{escape} 
nmchar   [a-z0-9-_]|{nonascii}|{escape}
</pre>

<p>Note that the tokenizer is case-insensitive, so uppercase A-Z is
matched as well.

<p>(Same change in section 4.1.1, see <a href="#underscore">above</a>.)

<h3><a name="minor-errors">Minor Typographical Errors</a></h3>

<h4 id="x29"><a href="intro.html#q1">Section 2.1</a></h4>

<p>For the example with the LINK element, the list
following the example incorrectly refers to the "ref"
attribute. This should be the "href" attribute.

<h4 id="s-2-2a"><a href="intro.html#q2">Section 2.2</a></h4>

<p><small class="date">[2002-01-28]</small> The sentence: "For
example, the headline font size should be larger than then rest of the
text" should read: "For example, the headline font size should be
larger than <ins>the</ins> rest of the text."

<h4 id="x30"><a href="conform.html#q1">Section 3.1</a></h4>

<p>Under the definition of "Child", the phrase
"if an only if" should read "if and only if".

<p>Under the definition of "Sibling", the last sentence should read,
"Element B is a following sibling if it comes after A in the document
tree."

<h4 id="x31"><a href="conform.html#text-css">Section 3.4</a></h4>

<p>The correct RFC number for the registration of the
"text/css" content type is RFC 2318, not RFC 2138.

<h4 id="x32"><a href="selector.html#lang">Section 5.11.4</a></h4>

<p>In "XML uses an attribute called XML:LANG", the
XML attribute should be in lowercase, i.e., xml:lang.

<h4 id="x33"><a href="selector.html#first-line-pseudo">Section 5.12.1</a></h4>

<p>The rendering of the first example is:</p>

<pre>
THIS IS A SOMEWHAT LONG HTML PARAGRAPH THAT
will be broken into several lines. 
</pre>

<p>while the fictional tag sequence is given as:</p>

<pre>
&lt;P&gt<b>&lt;P:first-line&gt;</b> This is a somewhat long HTML 
      paragraph that will <b>&lt;/P:first-line&gt;</b> ...
</pre>

<p>The word "will" should follow the fictional tag sequence
for :first-line.

<h4 id="x34"><a href="cascade.html#cascading-order">Section 6.4</a></h4>

<p>The last sentence in the penultimate paragraph should
begin "All user and author rules..." instead of "All rules
user and author rules...".

<h4 id="x35"><a href="box.html#border-color-properties">Section 8.5.2</a></h4>

<ul>
<li>
The individual border-X-color property definitions may
also take the value 'transparent'.
<li>The 'border-color' shorthand property should read:
<pre>[ &lt;color&gt; | transparent ]{1,4} | inherit</pre>
</ul>

<h4 id="x36"><a href="box.html#border-style-properties">Section 8.5.3
Border style</a></h4>

<p>Under the definition of "ridge", change "grove" to "groove".

<h4 id="x37"><a href="visuren.html#q5">Section 9.2.1</a></h4>

<p>In the example after the diagram, the
HTML fragment "&lt;P&gt;This is the content of P.&lt;/&gt;"
should end instead with the end tag "&lt;/P&gt;".

<h4 id="x38"><a href="visuren.html#anonymous">Section 9.2.2, Anonymous inline boxes</a></h4>

<p>In the (third paragraph) sentence "In the example, the color of the
anonymous initial boxes is inherited from the P, but the background is transparent", substitute the word "inline" for "initial". 

<h4 id="x39"><a href="visuren.html#relative-positioning">Section 9.4.3</a></h4>

<p>In the second paragraph, "a new a new" should only read "a new".

<h4 id="x40"><a href="visuren.html#q24">Section 9.7 Relationships between 'display', 'position', and 'float'</a></h4>

<ul>
<li>In bullet two, change "Otherwise, 'position' ..." to
"Otherwise, if 'position' ...".
<li>In bullet four, change "remaining display properties"
to "remaining display property values".
</ul>

<h4 id="x41"><a href="visudet.html#q15">Section 10.6.1</a></h4>

<p>The <span class="propinst-height">'height'</span> property doesn't
apply. The height of the content area is equal to the actual font size
of the element. The vertical padding, border and margin of an inline,
non-replaced box start at the top and bottom of the font, not the
<span class="propinst-line-height">'line-height'</span>. But only the
<span class="propinst-line-height">'line-height'</span> is used to
compute the height of the line box.

<p>If more than one font size is used (this could happen when glyphs
are found in different fonts), the height of the content area is not
defined by this specification. However, we recommend that the largest
font size determine the content height.

<h4 id="x42"><a href="visufx.html#overflow">Section 11.1.1</a></h4>

<p>In the description of the 'scroll' value, add "a"
to "if the user agent uses [a] scrolling mechanism".</p>

<h4 id="x43"><a href="generate.html#content">Section 12.2</a></h4>

<p>In the definition of &lt;counter&gt;, the sentence "The latter
function also has two forms: 'counter(name, string)' or 'counter(name,
string, style)'" should read "two forms: 'counters(name, string)' or
'counters(name, string, style)'"

<h4 id="x44"><a href="generate.html#markers">Section 12.6.1</a></h4>

<p>Change the third paragraph as follows:

<blockquote>
<p>For the :before pseudo-element, the baseline in the marker box will
be vertically aligned with the baseline in the first line box of the
principal box. If the principal box contains no line boxes, or if
there is a block box within the principal box that is above the first
line box, the top outer edge of the marker box will be aligned with
the top outer edge of the principal box. 

<p>For the :after pseudo-element, the baseline in the marker box will
be vertically aligned with the baseline in the last line box in the
principal box.  If the principal box contains no line boxes, or if
there is a block box within the principal box that is below the last
line box, the bottom outer edge of the marker box will be aligned with
the bottom outer edge of the principal box.
</blockquote>

<p><small class="date">[2001-07-19]</small> In the last example above
'marker-offset', the line <code>"&lt;TITLE>Markers to create numbered
notes4>/TITLE>"</code> should read <code>"&lt;TITLE>Markers to create
numbered notes&lt;/TITLE>"</code> instead.

<h4 id="x45"><a href="page.html#page-box">Section 13.2</a></h4>

<p>In the following code, put a ":" after "size".

<pre>
@page { size 8.5in 11in; margin: 2cm }
</pre>


<h4 id="x46"><a href="colors.html#gamma-correction">Section 14.3</a></h4>

<p>The first sentence has one too many "the"s in
"please consult the the Gamma Tutorial...".

<h4 id="x47"><a href="aural.html#propdef-voice-family">Section 19.8</a></h4>

<p>In the following sentence from the
definition of the 'voice-family' property:

<blockquote>
<p>If quoting is omitted, any whitespace characters before and after the
font name are ignored and any sequence of
whitespace characters inside the font name is converted to a single space. 
</blockquote>

<p>all occurrences of the word "font" should be replaced by "voice family".

<h4 id="x48"><a href="grammar.html#q2">Section D.2 Lexical scanner </a></h4>

<p>Remove "RGB S*" from the rule "term" since rgb() is covered by
the "function" production, which matches counter(), atrr(), format(),
and others as well.

<h4 id="x49"><a href="grammar.html#tokenizer-diffs">Section D.3 Comparison of tokenization in CSS2 and CSS1 </a></h4>

<p>In the last bullet, change <code>.\55ft</code> to 
<code>.\35 5ft</code>. 

<h4 id="x50"><a href="sample.html">Appendix A: Sample Style Sheet for HTML 4.0</a></h4>

<p>The value of the 'line-height' property set for the BODY
element should be "1.12em".

<p>The OBJECT and APPLET elements should have 'display: inline'.

<h4 id="x51"><a href="propidx">Appendix F. Property index</a></h4>

<p>The initial value for 'background' is missing. The "XX" should be
"see individual properties."

<h4 id="x52"><a href="indexlist.html">Appendix H: Index</a></h4>

<p>The index includes anchors that differ only by
base ("A" and "a") and this is not legal HTML. From
<a href="/TR/html4/struct/links.html#h-12.2.1">HTML 4.01, section 12.2.1</a>: 

<blockquote>
<p>Anchor names that differ only in case may not
appear in the same document. 
</blockquote>

<p>Browser behavior may differ because of this.

<h3><a name="clarifications">Clarifications</a></h3>

<h4 id="s-2-2"><a
href="http://www.w3.org/TR/REC-CSS2/intro.html#q2">2.2 A brief CSS2
tutorial for XML</a></h4>

<p>The specification for the <a
href="/1999/06/REC-xml-stylesheet-19990629/">XML style sheet PI</a>
was written after CSS2 was finalized. The first line of the full XML
example should not be <code>&lt;?XML:stylesheet type="text/css"
href="bach.css"?&gt;</code>, but

<pre>&lt;?xml-stylesheet type="text/css" href="bach.css"?&gt;</pre>

<h4 id="x54"><a href="selector.html#syndata.html#tokenization">Section 4.1.1</a></h4>

<p>DELIM should not include single or double quote. Refer also
to section 4.1.6 on strings, which must have matching single or
double quotes around them.

<h4 id="x55"><a href="selector.html#descendant-selectors">Section 5.5</a></h4>

<p>Near the end of the section, the text 'Note the whitespace on
either side of the "*"' may be misleading. The note is not meant to
imply that whitespace is required on both sides of the "*" (since the
grammar does not require it in this case) but that one may use
whitespace in this case.

<h4 id="x56"><a href="selector.html#id-selectors">Section 5.9 ID selectors</a></h4>

<p>The word "precedence" in the last but one paragraph should be
"specificity."

<h4 id="s-5-12-1"><a href="selector.html#first-line-pseudo">Section
5.12.1 The :first-line pseudo-element</a></h4>

<p><small class="date">[2001-08-27]</small> Add the following
clarifications at the end of the section:

<blockquote><p>In case a certain first line is the first line of some
block-level element <var>A</var> as well as of <var>A</var>'s ancestor
<var>B </var>, the fictional tag sequence is as follows:

<pre>&lt;B&gt;...&lt;A&gt;...&lt;B:first-line&gt;&lt;A:first-line&gt;This is the first line&lt;/A:first-line&gt;&lt;/B:first-line&gt;</pre>

<p>All fictional tags for first-line are inside the smallest enclosing
block -level element and the nesting order of the fictional tags
A:first-line and B-first-line is the same as that of the elements
<var>A</var> and <var>B </var>.

<p>The "first formatted line" of a block level element is the first
line in the element's flow, i.e., ignoring any floats or absolutely
positioned elements. For example, in

<pre>
&lt;div&gt;
&lt;p style="float: left"&gt;Floating paragraph...&lt;/p&gt;
&lt;p&gt;First line starts here...&lt;/p&gt;
&lt;/div&gt;
</pre>

<p>he selector 'div:first-line' applies to the first line of the
second p, because the first p is taken out of the flow.
</blockquote>

<h4 id="x57"><a href="cascade.html#value-def-inherit">Section 6.2.1</a></h4>

<p>The 'inherit' value causes the properties value to be
inherited. This applies even to properties for which values
do not otherwise inherit.

<h4 id="x58"><a href="cascade.html#cascade">6.4 The Cascade
</a></h4>

<p>Change "Rules specified in a given style sheet
    override rules imported from other style sheets." to
Change "Rules specified in a given style sheet
    override rules of the same weight imported from other style sheets."
</p>

<h4 id="x59"><a href="cascade.html#specificity">Section 6.4.3 Calculating a
selector's specificity</a></h4>

<p>Add a note:

<blockquote><p>The specificity is based only on the form of the selector.
In particular, a selector of the form "<code>[id=p33]</code>" is
counted as an attribute selector (a=0, b=1, c=0), even if the
<code>id</code> attribute is defined as an "ID" in the source
document's DTD.
</blockquote>

<h4 id="x60"><a href="box.html#box-dimensions">Section 8.1</a></h4>

<ul>
<li>From the definition of "padding edge", delete the sentence "The
padding edge of a box defines the edges of the containing block
established by the box." For information about containing
blocks, consult <a href="visudet.html#containing-block-details">
Section 10.1</a>.

<li>Border backgrounds are not specified by border properties. Change
the last paragraph of 8.1 to:
<blockquote>
<p>The background style of the content, padding, and border areas of a
box is specified by the <span
class="propinst-background">'background'</span> property of the
generating element. Margin backgrounds are always transparent.
</blockquote>
</ul>

<h4 id="x61"><a href="box.html#collapsing-margins">Section 8.3.1</a></h4>

<p>Add this clarifying note to the first bullet of the explanation
of vertical collapsing of margins:</p>

<blockquote>
<p><strong>Note.</strong> Adjoining boxes may be generated by
elements that are not related as siblings or ancestors.
</blockquote>


<h4 id="x62"><a href="visuren.html#inline-formatting">Section 9.4.2</a></h4>

<p>The statement "When an inline box is split, margins, borders, and
padding have no visual effect where the split occurs." may be
generalized. Margins, borders, and padding have no visual effect
where one or more splits occur.

<h4 id="x63"><a href="visuren.html#relative-positioning">Section 9.4.3</a></h4>

<p>Relatively positioned boxes do not always establish new containing
blocks. Change the second paragraph to:</p>

<blockquote>
<p>A relatively positioned box keeps its normal flow size, including
line breaks and the space originally reserved for it. The section on
<a href="visuren.html#containing-block">containing blocks</a> explains when a
relatively positioned box establishes a new containing block.
</blockquote>

<p>The following attempts to clarify the meaning of the 'left',
'right', 'top' and 'bottom' properties for relative positioning:

<blockquote>
<p>For relatively positioned elements, 'left' and 'right' move the
box(es) horizontally, without changing their size. 'Left' moves the
boxes to the right, and 'right' moves them to the left. Since boxes
are not split or stretched as a result of 'left' or 'right', the
computed values are always: left = -right.

<p>If both 'left' and 'right' are 'auto' (their initial values), the
computed values are '0' (i.e., the boxes stay in their original
position).

<p>If 'left' is 'auto', its computed value is minus the value of 'right'
(i.e., the boxes move to the left by the value of 'right').

<p>If 'right' is specified as 'auto', its computed value is minus the
value of 'left'.

<p>If neither 'left' nor 'right' is 'auto', the position is
over-constrained, and one of them has to be ignored. If the
'direction' property is 'ltr', the value of 'left' wins and 'right'
becomes -'left'. If 'direction' is 'rtl', 'right' wins and 'left' is
ignored.

<div class="example">
<p><strong>Example.</strong> The following two style sheets are equivalent:

<pre>
DIV.a8 { position: relative; left: -1em; right: auto }
</pre>

and

<pre>
DIV.a8 { position: relative; left: auto; right: 1em }
</pre>
</div>

<p>The 'top' and 'bottom' properties move relatively positioned
elements up or down.  They also must be each other's negative. If both
are 'auto', their computed values are both '0'. If one of them is
'auto', it becomes the negative of the other. If neither is 'auto',
'bottom' is ignored (i.e., the computed value of 'bottom' will be
minus the value of 'top').
</blockquote>

<h4 id="x64"><a href="visuren.html#direction">Section 9.10</a></h4>

<p>In this sentence of the last paragraph:</p>

<blockquote>
<p>Conforming HTML user agents may therefore ignore the 'direction'
and 'unicode-bidi' properties in author and user style sheets.
</blockquote>

<p>the word "ignore" means that if a 'unicode-bidi' or 'direction'
value conflicts with the HTML 4.0 "dir" attribute value, then user
agents may choose to use the "dir" value rather than the CSS
properties.

<p>User agents are not required to support the <span
class="propinst-direction">'direction'</span> and <span
class="propinst-unicode-bidi">'unicode-bidi'</span> properties to
conform to CSS2 unless they support bi-directional text rendering
(except for the case of HTML 4.0 as noted above).

<h4 id="s-10-3-3"><a href="visudet.html#q6">10.3.3 Block-level,
non-replaced elements in normal flow</a></h4>

<p><small class="date">[2001-06-25]</small> Add the following note at
the end of the section:

<blockquote><p>Note that 'width' may not be greater than 'max-width' and
not less than 'min-width'. In particular, it may not be negative. See
the rules in section 10.4 below.</blockquote>

<h4 id="x65"><a href="visudet.html#propdef-line-height">Section 10.8.1</a></h4>

<p>Clarify this paragraph:

<blockquote>
<p>Note that replaced elements have a 'font-size' and a 'line-height'
property, even if they are not used directly to determine the height
of the box. The 'font-size' is, however, used to define the 'em' and
'ex' units, and the 'line-height' has a role in the 'vertical-align'
property.
</blockquote>

<p>as follows:

<blockquote>
<p>Note that replaced elements have a <span
class="propinst-font-size">'font-size'</span> and a <span
class="propinst-line-height">'line-height'</span> property, even if
they are not used directly to determine the height of the box: 'em'
and 'ex' values are relative to values of <span
class="propinst-font-size">'font-size'</span> and percentage values
for <span class="propinst-vertical-align">'vertical-align'</span> are
relative to values of <span
class="propinst-line-height">'line-height'</span>.
</blockquote>

<p><small class="date">[2001-08-27]</small> Under 'line-height', after
the sentence "If the property is set on a block-level element whose
content is composed of inline-level elements, it specifies the
<em>minimal</em> height of each generated inline box," add the
following clarification:

<blockquote><p>The minimum height consist of a minimum height above
the block's baseline and a minimum depth below it, exactly as if each
line box starts with a zero-width inline box with the block's font and
line height properties (what T<sub>E</sub>X calls a
"strut").</blockquote>

<h4 id="x66"><a href="visufx.html#overflow-clipping">Section 11.1</a></h4>

<p>Clarifications to the last two bullets on when overflow may
occur:</p>

<ul>
<li>A descendent box is positioned
absolutely partly outside of the box.
<li>A descendent box has negative margins, causing it
to be positioned partly outside the box.
</ul>

<h4 id="x67"><a href="visufx.html#overflow">Section 11.1.1</a></h4>

<p>Remove 'projection' from this sentence under the value 'scroll'

<blockquote>
<p>
When this value is specified and the target medium is 'print' or 'projection', overflowing content should be printed. 
</p>
</blockquote>

<h4 id="x68"><a href="visufx.html#clipping">Section 11.1.2</a></h4>

<p>Values of "rect()" should be separated by commas. Thus, the
definition of &lt;shape&gt; should start:</p>

<blockquote>
<p>In CSS2, the only valid &lt;shape&gt; value is: rect (&lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;,
&lt;left&gt;) ...
</blockquote>

<p>Due to this ambiguity, user agents may support separation of
offsets in "rect()" with or without commas.

<h4 id="x69"><a href="generate.html#content">12.2 The 'content'
					    property</a></h4>

<p>Clarification to the following lines:</p>

<blockquote>
<p>The :before and :after pseudo-elements elements allow values of the
'display' property as follows:

<ul>
<li>If the subject of the 
selector is a block-level
element, allowed values are 'none', 'inline', 'block', and 'marker'. 
If the value of the pseudo-element's
<span class="propinst-display">'display'</span> property
has any other value, the pseudo-element will behave as if its value
were 'block'. 
<li>If the subject of the 
selector is an inline-level
element, allowed values are 'none' and 'inline'.
If the value of the pseudo-element's
<span class="propinst-display">'display'</span> property
has any other value, the pseudo-element will behave as if its value
were 'inline'.
</ul>
</blockquote>

<h4 id="s-12-4-2">Section 12.4.2 Inserting quotes with the 'content'
property</h4>

<p><small class="date">[2001-08-06]</small> Add the following sentence
at the end of the 2nd paragraph:

<blockquote><p>A 'close-quote' that would make the depth negative is
in error and is ignored: the depth stays at 0 and no quote mark is
rendered (although the rest of the 'content' property's value is still
inserted).
</blockquote>

<h4 id="x70"><a href="generate.html#lists">Lists 12.6.2</a></h4>

<p>To clarify Hebrew numbering, add 
"(Alef,
Bet, ... Tet Vav, Tet Zayin, ... Yod Tet, Kaf ...)".

<h4 id="x71"><a href="colors.html#q2">14.2 The background</a></h4>

<p>Second sentence: "In terms of the box model, 'background' refers to
the background of the content and the padding areas" should also
mention the border area. (See also <a href="#x60">errata to section
8.1</a> above.) Thus:

<blockquote>
<p>In terms of the box model, "background" refers to the background of
the content, padding and border areas.
</blockquote>

<p>In the fourth paragraph, add to the end of "User agents should
observe the following precedence rules to fill in the background" 
the following words: "of the canvas".

<h4 id="x72"><a href="colors.html#propdef-background-attachment">14.2.1
Background properties</a></h4>

<p>Add this note after the first paragraph after 'background-attachment':

<blockquote><p>Note that there is only <em>one</em> viewport per
document. I.e., even if an element has a scrolling mechamism (see
'overflow'), a 'fixed' background doesn't move with it.</blockquote>

<p><small class="date">[2001-08-27]</small> Under 'background-repeat',
the sentence "All tiling covers the content and padding areas [...]" should
be 

<blockquote><p>"All tiling covers the content, padding <ins>and
border</ins> areas [...]".</blockquote>

<p><small class="date">[2001-08-27]</small> Under 'background-attachment',
the sentence "Even if the image is fixed [...] background or padding
area of the element" should be

<blockquote><p>Even if the image is fixed, it is still only visible
when it is in the background, padding <ins>or border</ins> area of the
element.</blockquote>

<h4 id="x73"><a href="fonts.html#font-family-prop">Section 15.2.2 Font family</a></h4>

<p><small class="date">[2000-10-31]</small> Replace the sentence that
says: "Although many fonts provide the "missing character" glyph,
typically an open box, as its name implies this should not be
considered a match except for the last font in a font set" by:

<blockquote>
<p>Although many fonts provide the "missing character" glyph,
  typically an open box, as its name implies this should not be
  considered a match.
</blockquote>

<h4 id="x74"><a href="fonts.html#font-properties">Section 15.2.4</a></h4>

<p>Add to the explanation of 'font-size' the following
clarification: "The font size corresponds to the em square,
a concept used in typography. 
Note that certain glyphs may bleed outside their em squares."</p>

<h4 id="x75"><a href="fonts.html#algorithm">Section 15.5 Font matching
algorithm</a></h4>

<p><small class="date">[2000-10-31]</small> In point 8, replace the
sentence that says: "If a particular character cannot be displayed
using this font, the UA should indicate that a character is not being
displayed (for example, using the 'missing character' glyph)" by

<blockquote>
<p>If a particular character cannot be displayed using this font,
  then the UA has no suitable font for that character. The UA should
  map each character for which it has no suitable font to a visible
  symbol chosen by the UA, preferably a "missing character" glyph
  from one of the font faces available to the UA.
</blockquote>

<h4 id="x76"><a href="text.html#indentation-prop">Section 16.1</a></h4>

<p>Add to:</p>

<blockquote>
<p>
The value of 'text-indent' may be negative, but there may be
implementation-specific limits.
</p>
</blockquote>

<p>the following clarification: "If the value of 'text-indent'
is negative, the value of 'overflow' will affect whether the
text is visible."

<h4 id="x77"><a href="text.html#alignment-prop">16.2 Alignment: the 'text-align' property</a></h4>

<p>Change "double justify" to "justify" under "left, right, center,
and justify".

<h4 id="x78"><a href="tables.html#table-layers">Section 17.5.1 Table layers and
transparency</a></h4>

<p><small class="date">[2000-12-12]</small> In point 6, change 'These
"empty" cells are transparent' to:

<blockquote>
<p>These "empty" cells are transparent if the value of their 'empty-cells'
property is 'hide'</blockquote>

<p><small class="date">[2001-08-27]</small> At the end of the section
add the following paragraph:

<blockquote><p>Note that if the table has 'border-collapse: separate',
the background of the area given by the 'border-spacing' property is
always the background of the table element. See 17.6.1</blockquote>

<h4 id="table-width"><a href="tables.html#width-layout">Section 17.5.2 Table width algorithms</a></h4>

<p>Add the following paragraph after the initial paragraph of this
section:

<blockquote>
<p>Note that this section overrides the rules that apply to
calculating widths as described in <a
href="visudet.html#Computing_widths_and_margins">section 10.3</a>. In
particular, if the margins of a table are set to '0' and the width to
'auto', the table will not automatically size to fill its containing
block. However, once the calculated value of 'width' for the table is
found (using the algorithms given below or, when appropriate, some
other UA dependant algorithm) then the other parts of section 10.3
do apply. Therefore a table can be centered using left and right
'auto' margins, for instance.
</blockquote>

<p>The WG may introduce ways of automatically making tables fit their
containing blocks in CSS3.

<h4 id="x79"><a href="tables.html#empty-cells">Borders around empty cells: the
'empty-cells' property</a></h4>

<p><small class="date">[2000-12-12]</small> The 'empty-cells' property 
not only controls the borders, but also the background.

<h4 id="x80"><a href="tables.html#collapsing-borders">Section 17.6.2 The
collapsing borders model</a></h4>

<p>In the sentence after the question, add "and
padding-left<sub>i</sub> and padding-right<sub>i</sub> refer 
to the left (resp., right) padding of cell i."

<h4 id="x81"><a href="ui.html#system-colors">Section 18.2</a></h4>


<p>For the 'ButtonHighlight' value, change the description
from "Dark shadow" to "Highlight color".


<h4 id="x82"><a href="aural.html#speaking-props">Section 19.3</a></h4>

<p>The parenthetical phrase "somewhat analogous to the 'display' property"
is misleading. The 'speak' property resembles 'visibility' in
some ways and 'display' in others.

<h4 id="x83"><a href="sample.html">Appendix A</a></h4>

<p>The @page rule should be entirely outside the @media block:

<pre>
@page         { margin: 10% }
 @media print {
        H1, H3, H4,
        ... 
 }
</pre>

<h4 id="x84"><a href="grammar.html#q2">Appendix D.2 Lexical scanner</a></h4>

<p>Remove the following line from the scanner as it
do not appear in the grammar:</p>

<pre>
"@"{ident}              {return ATKEYWORD;}
</pre>

<p>The DIMEN token is in the scanner to ensure that a number followed
by an identifier is read as one token rather than two. This case
is considered an error in CSS2.

<h4 id="refs"><a href="refs.html">Appendix E. References</a></h4>

<p>The entry for "[URI]" referred to a draft that has become an RFC.
The entry can be changed to:

<blockquote>
<dl>
<dt>[URI] <dd>"Uniform Resource Identifiers (URI): Generic Syntax," T.
Berners-Lee, R. Fielding, L. Masinter. August 1998. Internet RFC 2396.
Available at <a
href="http://www.ietf.org/rfc/rfc2396.txt">http://www.ietf.org/rfc/rfc2396.txt</a>
</dl>
</blockquote>

<h3><a name="changes">Changes</a></h3>

<p>The following changes are proposed by the CSS Working Group.
Please note that these changes have "working draft" status and
may not be considered definitive unless incorporated into
a revised Recommendation. 

<h4 id="s-9-3-2"><a href="visuren.html#position-props">Section 9.3.2
Box offsets: 'top', 'right', 'bottom', 'left'</a></h4>

<p><small class="date">[2000-10-24]</small> A value 'static-position'
is added. Replace the section by this text:

<blockquote>
<p>An element is said to be positioned if its 'position' property has a
value other than 'static'. Positioned elements generate positioned
boxes, laid out according to four properties:</p>

<div class="propdef">
<dl><dt><span class="index-def"><strong>'top'</strong></span></dt>
<dd>
<table class="propinfo" cellspacing=0 cellpadding=0>
<tr valign=baseline><td><em>Value:</em></td>
<td>&lt;length> | &lt;percentage> | auto | static-position | inherit</td></tr>
<tr valign=baseline><td><em>Initial:</em></td>
<td>auto</td></tr>
<tr valign=baseline><td><em>Applies to:</em></td>
<td>positioned elements</td></tr>
<tr valign=baseline><td><em>Inherited:</em></td>
<td>no</td></tr>
<tr valign=baseline><td><em>Percentages:</em></td>
<td>refer to height of containing block</td></tr>
<tr valign=baseline><td><em>Media:</em></td>
<td>visual</td></tr>
</table>
</dd></dl></div>

<p>This property specifies how far a box's top margin edge is offset below
the top edge of the box's containing block.</p>

<div class="propdef">
<dl><dt><span class="index-def"><strong>'right'</strong></span></dt>
<dd>
<table class="propinfo" cellspacing=0 cellpadding=0>
<tr valign=baseline><td><em>Value:</em></td>
<td>&lt;length> | &lt;percentage> | auto | static-position | inherit</td></tr>
<tr valign=baseline><td><em>Initial:</em></td>
<td>auto</td></tr>
<tr valign=baseline><td><em>Applies to:</em></td>
<td>positioned elements</td></tr>
<tr valign=baseline><td><em>Inherited:</em></td>
<td>no</td></tr>
<tr valign=baseline><td><em>Percentages:</em></td>
<td>refer to width of containing block</td></tr>
<tr valign=baseline><td><em>Media:</em></td>
<td>visual</td></tr>
</table>
</dd></dl></div>

<p>This property specifies how far a box's right margin edge is offset to
the left of the right edge of the box's containing block.

<div class="propdef">
<dl><dt><span class="index-def"><strong>'bottom'</strong></span></dt>
<dd>
<table class="propinfo" cellspacing=0 cellpadding=0>
<tr valign=baseline><td><em>Value:</em></td>
<td>&lt;length> | &lt;percentage> | auto | inherit</td></tr>
<tr valign=baseline><td><em>Initial:</em></td>
<td> auto</td></tr>
<tr valign=baseline><td><em>Applies to:</em></td>
<td> positioned elements</td></tr>
<tr valign=baseline><td><em>Inherited:</em></td>
<td> no</td></tr>
<tr valign=baseline><td><em>Percentages:</em></td>
<td> refer to height of containing block</td></tr>
<tr valign=baseline><td><em>Media:</em></td>
<td> visual</td></tr>
</table>
</dd></dl></div>

<p>This property specifies how far a box's bottom margin edge is offset
above the bottom of the box's containing block.</p>

<div class="propdef">
<dl><dt><span class="index-def"><strong>'left'</strong></span></dt>
<dd>
<table class="propinfo" cellspacing=0 cellpadding=0>
<tr valign=baseline><td><em>Value:</em></td>
<td> &lt;length> | &lt;percentage> | auto | static-position | inherit</td></tr>
<tr valign=baseline><td><em>Initial:</em></td>
<td> auto</td></tr>
<tr valign=baseline><td><em>Applies to:</em></td>
<td> positioned elements</td></tr>
<tr valign=baseline><td><em>Inherited:</em></td>
<td> no</td></tr>
<tr valign=baseline><td><em>Percentages:</em></td>
<td> refer to width of containing block</td></tr>
<tr valign=baseline><td><em>Media:</em></td>
<td> visual</td></tr>
</table>
</dd></dl></div>

<p>This property specifies how far a box's left margin edge is offset to
the right of the left edge of the box's containing block.</p>

<p>The values for the four properties have the following meanings:</p>

<dl>
<dt><strong>&lt;length></strong></dt>
<dd>
The offset is a fixed distance from the reference edge.
</dd>
<dt><strong>&lt;percentage></strong></dt>
<dd>
The offset is a percentage of the containing block's width (for
     'left' or 'right') or height (for 'top' and 'bottom'). For 'top'
     and 'bottom', if the height of the containing block is not
     specified explicitly (i.e., it depends on content height), the
     percentage value is interpreted like 'auto'.
</dd>
<dt><strong>auto</strong></dt>
<dd>
The effect of this value depends on which of related
     properties have the value 'auto' as well. See the sections on
     the width and height of absolutely positioned, non-replaced
     elements for details.
</dd>
<dt><strong>static-position</strong></dt>
<dd>
Only applies to absolutely positioned elements.
</dd>
<dd>
For 'left' use the distance from the left edge of the containing
     block to the left margin edge of a hypothetical box that would have
     been the first box of the element if its 'position' property had
     been 'static'. The value is negative if the hypothetical box is to
     the left of the containing block.
</dd>
<dd>
For 'right' use the distance from the right edge of the containing
     block to the right margin edge of the same hypothetical box as
     above. The value is positive if the hypothetical box is to the left
     of the containing block's edge.
</dd>
<dd>
For 'top' use the distance from the top edge of the containing
     block to the top margin edge of a hypothetical box that would have
     been the first box of the element if its 'position' property had
     been 'static'. The value is negative if the hypothetical box is
     above the containing block.
</dd>
</dl>

<p>For absolutely positioned boxes, the offsets are with respect to the
box's containing block. For relatively positioned boxes, the offsets are
with respect to the outer edges of the box itself (i.e., the box is
given a position in the normal flow, then offset from that position
according to these properties).</p>
</blockquote>

<h4 id="s-10-6-4"><a
href="visudet.html#abs-non-replaced-height">Section 10.6.4 Absolutely
positioned, non-replaced elements</a></h4>

<p><small class="date">[2000-10-24]</small> Like normal-flow
block-level elements, absolutely positioned elements by default take
on the height of their contents. Replace the section by this text:</p>

<blockquote>
<p>For absolutely positioned elements, the vertical dimensions must satisfy
this constraint:</p>
<blockquote>
<p>'top' + 'margin-top' + 'border-top-width' + 'padding-top' +
     'height' + 'padding-bottom' + 'border-bottom-width' +
     'margin-bottom' + 'bottom' = height of containing block
</blockquote>
<p>If all three of 'top', 'height', and 'bottom' are auto, treat 'top' like
'static-position' and apply rule number three below.</p>

<p>If none of the three are 'auto': If both 'margin-top' and
'margin-bottom' are 'auto', solve the equation under the extra
constraint that the two margins get equal values. If one of 'margin-top'
or 'margin-bottom' is 'auto', solve the equation for that value. If the
values are over-constrained, ignore the value for 'bottom' and solve for
that value.</p>

<p>Otherwise, pick the one of the following six rules that applies.</p>

<ol>
<li>'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the
     height is based on the content, set 'auto' values for 'margin-top'
     and 'margin-bottom' to 0, and solve for 'top'</li>
<li>'top' and 'bottom' are 'auto' and 'height' is not 'auto', then
     treat 'top' like 'static-position', set 'auto' values for
     'margin-top' and 'margin-bottom' to 0, and solve for 'bottom'</li>
<li>'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the
     height is based on the content, set 'auto' values for 'margin-top'
     and 'margin-bottom' to 0, and solve for 'bottom'</li>
<li>'top' is 'auto', 'height' and 'bottom' are not 'auto', then set
     'auto' values for 'margin-top' and 'margin-bottom' to 0, and solve
     for 'top'</li>
<li>'height' is 'auto', 'top' and 'bottom' are not 'auto', then 'auto'
     values for 'margin-top' and 'margin-bottom' are set to 0 and solve
     for 'height'</li>
<li>'bottom' is 'auto', 'top' and 'height' are not 'auto', then set
     'auto' values for 'margin-top' and 'margin-bottom' to 0 and solve
     for 'bottom'</li>
</ol>
</blockquote>

<h4 id="s-10-3-7"><a
href="visudet.html#abs-non-replaced-width">Section 10.3.7 Absolutely
positioned, non-replaced elements</a></h4>

<p><small class="date">[2000-10-24]</small>Section to be replaced by
following text, which allows width to be based on content ("shrink to
fit"):</p>

<blockquote>
<p>The constraint that determines the computed values for these
elements is:

<blockquote>
<p>'left' + 'margin-left' + 'border-left-width' + 'padding-left' +
'width' + 'padding-right' + 'border-right-width' + 'margin-right' +
'right' = width of containing block
</blockquote>

<p>If all three of 'left', 'width', and 'right' are 'auto': if
'direction' is 'ltr' treat 'left' like 'static-position' and apply
rule number three below; otherwise, treat
'right' like 'static-position' and apply rule number one below.

<p>If none of the three is 'auto': If both 'margin-left' and
'margin-right' are 'auto', solve the equation under the extra
constraint that the two margins get equal values. If one of
'margin-left' or 'margin-right' is 'auto', solve the equation for that
value. If the values are over-constrained, ignore the value for 'left'
(in case 'direction' is 'rtl') or 'right' (in case 'direction' is
'ltr') and solve for that value.

<p>Otherwise, set 'auto' values for 'margin-left' and 'margin-right'
to 0, and pick the one of the following six rules that applies.

<ol>
<li>'left' and 'width' are 'auto' and 'right' is not 'auto', then the
width is shrink-to-fit. Then solve for 'left'

<li>'left' and 'right' are 'auto' and 'width' is not 'auto', then if
'direction' is 'ltr' treat 'left' like 'static-position', otherwise
treat 'right' like 'static-position'. Then solve for 'left' (if
'direction is 'rtl') or 'right' (if 'direction' is 'ltr').

<li>'width' and 'right' are 'auto' and 'left' is not 'auto', then the
width is shrink-to-fit . Then solve for 'right'

<li>'left' is 'auto', 'width' and 'right' are not 'auto', then solve
for 'left'

<li>'width' is 'auto', 'left' and 'right' are not 'auto', then solve
for 'width'

<li>'right' is 'auto', 'left' and 'width' are not 'auto', then solve
for 'right'
</ol>

<p>Calculation of the shrink-to-fit width is similar to computing the
width of a table cell using the automatic table layout algorithm.
Roughly: calculate the preferred width by formatting the content
without breaking lines other than where explicit line breaks occur,
and also calculate the preferred <em>minimum</em> width, e.g., by
trying all possible line breaks. CSS2 does not define the exact
algorithm. Thirdly, compute the <em>available width</em>: this is
computed by solving for 'width' after setting 'left' (in case 1) or
'right (in case 3) to 0.

<p>Then the shrink-to-fit width is: min(max(preferred minimum available width), preferred width).
</blockquote>

<h4 id="x88"><a href="visufx.html#clipping">Section 11.1.2</a></h4>

<p><small class="date">[1999-11-01]</small> While CSS2 specifies that
values of "rect()" specify offsets from
the respective sides of the box, current implementations interpret
values with respect to the top and left edges for <em>all</em>
four values (top, right, bottom, and left). The Working Group
proposes to revise CSS2 to conform to current practice.

<h4 id="s-17-6"><a href="tables.html#borders">Section 17.6
Borders</a></h4>

<p><small class="date">[2001-10-03]</small> Several popular browsers
assume an initial value for 'border-collapse' of 'separate' rather
than 'collapse' or exhibit behavior that is close to that value, even
if they do not actually implement the CSS table model. Therefore the
CSS WG proposes to change the initial value to 'separate', in the
expectation that it better matches what users expect it to be.


</BODY>
</HTML>

