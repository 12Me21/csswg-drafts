<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: grammar.src,v 1.22 1998-01-27 16:30:28 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Appendix D: The grammar of CSS2</TITLE>
<LINK rel="previous" href="notes.html">
<LINK rel="next" href="refs.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Appendix D: The grammar of CSS2</H1>
<P><em>This appendix is normative.</em>

<P>The grammar below defines the syntax of CSS2. It is in some sense,
however, a superset of CSS2 as this specification imposes additional
semantic constraints not expressed in this grammar. A conforming UA
must also adhere to the <a href="./syndata.html#syntax">
forward-compatible parsing rules</a>, the <a
href="./about.html#property-defs">property and value notation</a>,
and the unit notation. In
addition, the document language may impose restrictions, e.g. HTML
imposes restrictions on the possible values of the "class" attribute.
<!-- IJ: There used to be a link to "unit notation", but I couldn't
find anything in the spec that corresponded. -->

<P> The grammar below is LL(1) (but note that most UA's should not use
it directly, since it doesn't express the parsing conventions, only
the CSS2 syntax).  The format of the productions is optimized for
human consumption and some shorthand notation beyond 
<a rel="biblioentry" href="./refs.html#ref-YACC" class="normref">[YACC]</a> is used:</P>

<ul>
<li><strong>*</strong>: 0 or more
<li><strong>+</strong>: 1 or more
<li><strong>?</strong>: 0 or 1 
<li><strong>|</strong>: separates alternatives 
<li><strong>[]</strong>: grouping
</ul>

<p>The productions are:

<pre>
stylesheet
  : [CDO|CDC]* [ import [CDO|CDC]* ]*
    [ [ruleset|media|page|font_face] [CDO|CDC]* ]*
  ;
import
  : IMPORT_SYM [STRING|URL] [ medium [ ',' medium]* ]? ';'
  ;
media
  : MEDIA_SYM medium [ ',' medium ]* '{' ruleset* '}'
  ;
medium
  : IDENT
  ;
page
  : PAGE_SYM pseudo_page?
    '{' declaration [ ';' declaration ]* '}'
  ;
pseudo_page
  : colon IDENT
  ;
font_face
  : FONT_FACE_SYM '{' declaration [ ';' declaration ]* '}'
  ;
operator
  : '/' | ',' | /* empty */
  ;
combinator
  : '+' | '>' | /* empty */
  ;
unary_operator
  : '-' | '+'
  ;
property
  : IDENT
  ;
ruleset
  : selector [ ',' selector ]*
    '{' declaration [ ';' declaration ]* '}'
  ;
selector
  : simple_selector [ combinator simple_selector ]*
  ;
simple_selector
  : element_name [ id | class | attrib | pseudo ]*
  | solitary_id [ class | attrib | pseudo ]*
  | solitary_class [ id | class | attrib | pseudo ]*
  | solitary_pseudo [ id | class | attrib | pseudo ]*
  ;
element_name
  : IDENT | '*'
  ;
attrib
  : '[' IDENT [ [ '=' | INCLUDES ] [ IDENT | STRING ] ]? ']'
  ;
pseudo
  : COLON_AFTER_IDENT IDENT
  ;
solitary_pseudo
  : COLON IDENT
  ;
class
  : CLASS_AFTER_IDENT
  ;
solitary_class
  : CLASS
  ;
id
  : HASH_AFTER_IDENT
  ;
solitary_id
  : HASH
  ;
declaration
  : property colon expr prio?
  | /* empty */
  ;
colon
  : COLON
  | COLON_AFTER_IDENT
  ;
prio
  : IMPORTANT_SYM
  ;
expr
  : term [ operator term ]*
  ;
term
  : unary_operator?
    [ NUMBER | PERCENTAGE | LENGTH | EMS | EXS | ANGLE |
      TIME | FREQ | function ]
  | STRING | IDENT | hexcolor | URL | RGB | UNICODERANGE
  ;
function
  : FUNCTION expr ')'
  ;
hexcolor
  : HASH | HASH_AFTER_IDENT
  ;
</pre>

<p> The following is the tokenizer, written in flex <a
rel="biblioentry" href="./refs.html#ref-FLEX" class="normref">[FLEX]</a>
notation. The
tokenizer is case-insensitive (flex command line
option -i).

<p>The two occurrences of "\377" represent the highest character
number that current versions of Flex can deal with (decimal 255). They
should be read as "\4177777" (decimal 1114111), which is the highest
possible code point in <span class="index-inst"
title="unicode">Unicode</span>/<span class="index-inst"
title="iso-10646">ISO-10646</span>.

<pre>
h		[0-9a-f]
nonascii	[\200-\377]
unicode		\\{h}{1,6}
escape		{unicode}|\\[ -~\200-\377]
nmstart		[a-z]|{nonascii}|{escape}
nmchar		[a-z0-9-]|{nonascii}|{escape}
string1		\"([\t\n !#$%&amp;(-~]|\'|{nonascii}|{escape})*\"
string2		\'([\t\n !#$%&amp;(-~]|\"|{nonascii}|{escape})*\'

ident		{nmstart}{nmchar}*
name		{nmchar}+
num		[0-9]+|[0-9]*"."[0-9]+
string		{string1}|{string2}
url		([!#$%&amp;*-~]|{nonascii}|{escape})*
w		[ \t\r\n\f]*

urange		{h}(\?{0,5}|{h}(\?{0,4}|{h}(\?{0,3}|{h}(\?{0,2}|{h}(\??|{h})))))

%s AFTER_IDENT

%%

[ \t\r\n\f]+			{BEGIN(INITIAL);}

\/\*[^*]*\*+([^/][^*]*\*+)*\/	/* ignore comments */

"&lt;!--"				{return CDO;}
"-->"				{return CDC;}
"~="				{BEGIN(INITIAL); return INCLUDES;}

{string}			{return STRING;}

{ident}				{BEGIN(AFTER_IDENT); return IDENT;}

&lt;AFTER_IDENT>"."{ident}		{return CLASS_AFTER_IDENT;}
"."{ident}			{BEGIN(AFTER_IDENT); return CLASS;}

&lt;AFTER_IDENT>":"		{return COLON_AFTER_IDENT;}
":"				{return COLON;}

"#"{name}			{BEGIN(AFTER_IDENT); return HASH;}

"@import"			{BEGIN(INITIAL); return IMPORT_SYM;}
"@page"				{BEGIN(INITIAL); return PAGE_SYM;}
"@media"			{BEGIN(INITIAL); return MEDIA_SYM;}
"@font-face"			{BEGIN(INITIAL); return FONT_FACE_SYM;}
"@"{ident}			{BEGIN(INITIAL); return ATKEYWORD;}

"!important"			{return IMPORTANT_SYM;}

{num}em				{return EMS;}
{num}ex				{return EXS;}
{num}px				{return LENGTH;}
{num}cm				{return LENGTH;}
{num}mm				{return LENGTH;}
{num}in				{return LENGTH;}
{num}pt				{return LENGTH;}
{num}pc				{return LENGTH;}
{num}deg			{return ANGLE;}
{num}rad			{return ANGLE;}
{num}grad			{return ANGLE;}
{num}ms				{return TIME;}
{num}s				{return TIME;}
{num}Hz				{return FREQ;}
{num}kHz			{return FREQ;}
{num}{ident}			{return DIMEN;}
{num}%				{return PERCENTAGE;}
{num}				{return NUMBER;}

"url("{w}{string}{w}")"		{return URL;}
"url("{w}{url}{w}")"		{return URL;}
{ident}"("			{return FUNCTION;}

U\+{urange}			|
U\+{h}{1,6}-{h}{1,6}		{BEGIN(INITIAL); return UNICODERANGE;}

.				{BEGIN(INITIAL); return *yytext;}
</pre>

<p>[This grammar allows "A:active" to be written as "A: active", which
is incorrect. How to fix that?]

</body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
