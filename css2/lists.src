<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: lists.src,v 2.19 1998-04-18 16:49:02 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Lists</TITLE>
</HEAD>
<BODY>
<H1 align="center">Lists</H1>

<H2>Visual formatting of lists</H2> 

<P>The CSS list properties provide basic list formatting features:</p>

<ul>
<li>Authors may specify a marker that appears before each list item
('display: list-item').
<li>Markers may be placed outside or inside the list item's content 
(see <span class="propinst-list-style-position">'list-style-position'</span>).
<li>Markers may be represented by predefined shapes, by numerals
in a variety of international numbering schemes, or by images 
(see <span class="propinst-list-style-type">'list-style-type'</span>
and <span class="propinst-list-style-image">'list-style-image'</span>).
<li>With 
<a href="./selector.html#descendant-selectors">descendant
selectors</a> and 
<a href="./selector.html#child-selectors">child selectors</a>,
it's possible to specify different marker types depending on the depth
of embedded lists.
</ul>

<P>Although CSS <a href="generate.html#markers">markers</a> give
authors finer control over list-like formatting, the list properties
defined in this chapter may achieve suitable results with fewer rules.

<P>An element with a <span class="propinst-display">'display'</span>
property value of 'list-item' generates a <a
href="visuren.html#principal-box"> principal box</a> for the content
and an inline box for the marker, if any. The position of the marker
box (see the <span
class="propinst-list-style-position">'list-style-position'</span>
property) does not affect the position of the principal box.

<P>The properties in this chapter allow authors to specify the marker
type (image, glyph, or number) and its position with respect to the
content box (outside the content or at the beginning of content). They
do not allow authors to specify distinct style (colors, fonts,
alignment, etc.) for the list marker or adjust its position with
respect to the principal box. Both of these are possible with <a
href="generate.html#markers">markers</a>, however.  Furthermore, when a
marker M (created with 'display: marker') is used with a list item
created by the properties in this chapter, M replaces the standard
list item marker.

<P>The <a href="colors.html#background-properties">background
properties</a> apply to the content box only; the marker box is
transparent.

<div class="note"><P>
<em><strong>Note.</strong>
There is no "list" presentation for other types of list structures
(e.g., "definition lists" declared by DL, DT, and DD in HTML). Each
part of a definition list is simply a block element.</em>
</div>

<H3><a name="list-props">List properties</a>: <span
class="propinst-list-style-type">'list-style-type'</span>, <span
class="propinst-list-style-image">'list-style-image'</span>, <span
class="propinst-list-style-position">'list-style-position'</span>, and
<span class="propinst-list-style">'list-style'</span>
</H3>

<!-- #include src=properties/list-style-type.srb -->

<P> This property specifies appearance of the list item marker if
<span class="propinst-list-style-image">'list-style-image'</span> has
the value 'none' or if the image pointed to by the URI cannot be
displayed. The value 'none' specifies no marker, otherwise there are
three types of marker: glyphs, numbering systems, and alphabetic systems.

<P>Glyphs are specified with 
<strong><span class="index-def" title="disc"><a class="value-def"
name="value-def-disc">disc</a></span></strong>, 
<strong><span class="index-def" title="circle"><a class="value-def"
name="value-def-circle">circle</a></span></strong>, and 
<strong><span class="index-def" title="square"><a class="value-def"
name="value-def-square">square</a></span></strong>. Their exact
rendering depends on the user agent.

<P>Numbering systems are specified with:</P>

<dl>
<dt><span class="index-def" title="decimal">
<a class="value-def" name="value-def-decimal">
<strong>decimal</strong></a></span>
<dd>Decimal numbers, beginning with 1.
<dt><strong><span class="index-def" title="decimal-leading-zero"><a class="value-def" name="value-def-decimal-leading-zero">decimal-leading-zero</a></span></strong>
<dd>Decimal numbers 01, 02, 03, ... (or 001, 002, 003, ... if more than 99 items)
<dt><strong><span class="index-def" title="lower-roman"><a class="value-def" name="value-def-lower-roman">lower-roman</a></span></strong>
<dd>Lowercase roman numerals (i, ii, iii, iv, v, etc.).
<dt><strong><span class="index-def" title="upper-roman"><a class="value-def" name="value-def-upper-roman">upper-roman</a></span></strong>
<dd>Uppercase roman numerals (I, II, III, IV, V, etc.).
<dt><strong><span class="index-def" title="hebrew"><a class="value-def" name="value-def-hebrew">hebrew</a></span></strong>
<dd>Traditional Hebrew numbering.
<dt><strong><span class="index-def" title="georgian"><a class="value-def" name="value-def-georgian">georgian</a></span></strong>
<dd>Traditional Georgian numbering 
(an, ban, gan, ..., he, tan, in, in-an, ...).
<dt><strong><span class="index-def" title="armenian"><a class="value-def" name="value-def-armenian">armenian</a></span></strong>
<dd>Traditional Armenian numbering.
<dt><strong><span class="index-def" title="cjk-ideographic"><a class="value-def" name="value-def-cjk-ideographic">cjk-ideographic</a></span></strong>
<dd>Plain ideographic numbers
<dt><strong><span class="index-def" title="hiragana"><a class="value-def" name="value-def-hiragana">hiragana</a></span></strong>
<dd>a, i, u, e, o, ka, ki, ...
<dt><strong><span class="index-def" title="katakana"><a class="value-def" name="value-def-katakana">katakana</a></span></strong>
<dd>A, I, U, E, O, KA, KI, ...
<dt><strong><span class="index-def" title="hiragana-iroha"><a class="value-def" name="value-def-hiragana-iroha">hiragana-iroha</a></span></strong>
<dd>i, ro, ha, ni, ho, he, to, ...
<dt><strong><span class="index-def" title="katakana-iroha"><a class="value-def" name="value-def-katakana-iroha">katakana-iroha</a></span></strong>
<dd>I, RO, HA, NI, HO, HE, TO, ...
</dl>

<P>A user agent that does not recognize a numbering system should use
'decimal'.

<div class="note"><P>
<em><strong>Note.</strong>
This document does not specify the exact mechanism of each
numbering system (e.g., how roman numerals are calculated). 
A future W3C Note may provide further clarifications.
</em>
</div>

<P>Alphabetic systems are specified with:</P>

<dl>
<dt><strong><span class="index-def" title="lower-latin"><a class="value-def" name="value-def-lower-latin">lower-latin</a></span></strong> or <strong>lower-alpha</strong>
<dd>Lowercase ascii letters (a, b, c, ... z).
<dt><strong><span class="index-def" title="upper-latin"><a class="value-def" name="value-def-upper-latin">upper-latin</a></span></strong> or <strong>upper-alpha</strong>
<dd>Uppercase ascii letters (A, B, C, ... Z).
<dt><strong><span class="index-def" title="lower-greek"><a class="value-def" name="value-def-lower-greek">lower-greek</a></span></strong>
<dd>Lowercase classical Greek 
alpha, beta, gamma, ... (&#941;, &#942;, &#943;, ...)
</dl>

<P>This specification does not define how alphabetic systems wrap at
the end of the alphabet. For instance, after 26 list items,
'lower-latin' rendering is undefined. Therefore, for long lists, we
recommend that authors specify true numbers.


<div class="html-example"><P>
For example, the following HTML document:
<PRE>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"&gt;
&lt;HTML&gt;
   &lt;HEAD&gt;
     &lt;TITLE&gt;Lowercase latin numbering&lt;/TITLE&gt;
     &lt;STYLE type="text/css"&gt;
          OL { list-style-type: lower-roman }   
     &lt;/STYLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;OL&gt;
      &lt;LI&gt; This is the first item.
      &lt;LI&gt; This is the second item.
      &lt;LI&gt; This is the third item.
    &lt;/OL&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P>might produce something like this:

<PRE>
  i This is the first item.
 ii This is the second item.
iii This is the third item.
</PRE>

<P>Note that the list marker alignment (here, right justified)
depends on the user agent.
</div>

<div class="note"><P>
<em><strong>Note.</strong>
Future versions of CSS 
may provide more complete
mechanisms for international numbering styles.
</em>
</div>


<!-- #include src=properties/list-style-image.srb -->

<P> This property sets the image that will be used as the list item
marker. When the image is available, it will replace the marker set
with the <span
class="propinst-list-style-type">'list-style-type'</span> marker.

<div class="example"><P>
The following example sets the marker at the beginning of each list
item to be the image "ellipse.png".


<PRE>
  UL { list-style-image: url(http://png.com/ellipse.png) }
</PRE>
</div>

<!-- #include src=properties/list-style-position.srb -->

<P> This property specifies the position of the marker box in the
principal block box. Values have the following meanings:</p>

<dl>
<dt><strong>outside</strong>
<dd>The list item marker is in the <a href="box.html#box-padding-area">
padding area</a> of the principal block box.
<dt><strong>inside</strong>
<dd>The list item marker is the first inline box in the
principal block box, after which the element's content flows.
</dl>

<div class="html-example"><P>
For example:

<PRE>
&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;TITLE&gt;Comparison of inside/outside position&lt;/TITLE&gt;
    &lt;STYLE type="text/css"&gt;
      UL         { list-style: outside }
      UL.compact { list-style: inside }
    &lt;/STYLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;UL&gt;
      &lt;LI&gt;first list item comes first
      &lt;LI&gt;second list item comes second
    &lt;/UL&gt;

    &lt;UL class="compact"&gt;
      &lt;LI&gt;first list item comes first
      &lt;LI&gt;second list item comes second
    &lt;/UL&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P> The above example may be formatted as:</P>

<div class="figure">
<P><img src="./images/list-inout.gif" alt="Difference between inside
and outside list style position"></p>
</div>
</div>

<P>In right-to-left text, the markers would have been on the right
side of the box. 

<!-- #include src=properties/list-style.srb -->

<P> The <span class="propinst-list-style">'list-style'</span> property
is a shorthand notation for setting the three properties <span
class="propinst-list-style-type">'list-style-type'</span>, <span
class="propinst-list-style-image">'list-style-image'</span>, and <span
class="propinst-list-style-position">'list-style-position'</span> at
the same place in the style sheet.

<div class="example"><P>
<PRE>
  UL { list-style: upper-roman inside }  /* Any UL */
  UL > UL { list-style: circle outside } /* Any UL child of a UL */
</PRE>
</div>

<P>Although authors may specify <span
class="propinst-list-style">'list-style'</span> information directly
on list item elements (e.g., LI in HTML), they should do so with
care. The following rules look similar, but the first declares a <a
href="./selector.html#descendant-selectors">descendant selector</a>
and the second a (more specific) <a
href="./selector.html#child-selectors">child
selector.</a>

<PRE class="example">
  OL.alpha LI   { list-style: lower-alpha } /* Any LI descendant of an OL */
  OL.alpha > LI { list-style: lower-alpha } /* Any LI child of an OL */
</PRE>

<P>Authors who use only the <a
href="selector.html#descendant-selectors">descendant selector</a> may
not achieve the results they expect. Consider the following rules:

<PRE class="html-example">
&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;TITLE&gt;WARNING: Unexpected results due to cascade&lt;/TITLE&gt;
    &lt;STYLE type="text/css"&gt;
      OL.alpha LI  { list-style: lower-alpha }
      UL LI        { list-style: disc }
    &lt;/STYLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;OL class="alpha"&gt;
      &lt;LI&gt;level 1
      &lt;UL&gt;
         &lt;LI&gt;level 2
      &lt;/UL&gt;
    &lt;/OL&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P>The desired rendering would have level 1 list items with
'lower-alpha' labels and level 2 items with 'disc' labels. However,
the <a href="./cascade.html#cascading-order">cascading order</a> will
cause the first style rule (which includes specific class information)
to mask the second. The following rules solve the problem by employing
a <a href="./selector.html#child-selectors">child
selector</a> instead:

<PRE class="example">
    OL.alpha > LI  { list-style: lower-alpha }
    UL LI   { list-style: disc }
</PRE>

<P>Another solution would be to specify <span
class="propinst-list-style">'list-style'</span> information only on
the list type elements:

<PRE class="example">
    OL.alpha  { list-style: lower-alpha }
    UL        { list-style: disc }
</PRE>

<P>Inheritance will transfer the <span
class="propinst-list-style">'list-style'</span> values from OL and
UL elements to LI elements. This is the recommended way to
specify list style information.

<div class="example"><P>
<P>  A URI value may be combined with any other value, as in:

<PRE>
  UL { list-style: url(http://png.com/ellipse.png) disc }
</PRE>
<P> In the example above, the 'disc' will be used when the image is
unavailable.

<P>A value of 'none' for the <span
class="propinst-list-style">'list-style'</span> property sets both
<span class="propinst-list-style-type">'list-style-type'</span> and
<span class="propinst-list-style-image">'list-style-image'</span> to
'none':

<PRE>
  UL { list-style: none }
</PRE>

<P>The result is that no list-item marker is displayed.

</div>

</body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:nil
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:nil
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
