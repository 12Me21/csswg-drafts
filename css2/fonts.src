<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: fonts.src,v 1.3 1997-08-01 17:48:04 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Fonts</TITLE>
<LINK rel="next" href="text.html">
<LINK rel="previous" href="colors.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Fonts</H1>
<H2>Introduction to fonts</H2>
<!-- A diagram of document character set/font set/glyph relationship
-->

<P> A font doesn't contain <EM>characters</EM>, it contains pictures
of characters, known as <EM>glyphs</EM>. The glyphs, in the form of
outlines or bitmaps, constitute a particular representation of a
character. Either explicitly or implicitly, each font has a table
associated with it, the <span class="index-def" title="font encoding
table"><EM>font encoding table</EM> </span>, that tells for
each glyph what character it is a representation for. In Type 1 fonts,
the table is referred to as an <span class="index-def" title="encoding vector"><EM>encoding vector</EM></span>.

<P> In fact, many fonts contain several glyphs for the same
character. Which of those glyphs should be used depends either on the
rules of the language, or on the preference of the designer.

<P> In Arabic, for example, all letters have four different shapes,
depending on whether the letter is used at the start of a word, in the
middle, at the end, or in isolation. It is the same character in all
cases, and thus there is only one character in the HTML document, but
when printed, it looks differently each time.

<P> There are also fonts that leave it to the graphic designer to
choose from among various alternative shapes provided. Unfortunately,
CSS2 doesn't yet provide the means to select those
alternatives. Currently, it is always the default shape that is chosen
from such fonts.
<H3>Font sets</H3>

<P> To deal with the problem that a single font may not be enough to
display all the characters in a document, or even a single element,
CSS2 allows the use of <span class="index-def" title="font
set"><EM>font sets</EM></span>.

<P> A font set in CSS2 is a list of fonts, all of the same style and
size, that are tried in sequence to see if they contain a glyph for a
certain character.  An element that contains English text mixed with
mathematical symbols may need a font set of two fonts, one containing
letters and digits, the other containing mathematical symbols. See the
section on <A href="#font-selection">font selection</A> for a detailed
description of the selection mechanism for font sets.

<P> Here is an example of a font set suitable for a text that is
expected to contain text with Latin characters, Japanese characters,
and mathematical symbols:

<PRE>
  BODY { font-family: Baskerville, Mincho, Symbol, serif }
</PRE>

<P> The characters available in the Baskerville font (a font with only
Latin characters) will be taken from that font, Japanese will be taken
from Mincho, and the mathematical symbols will come from Symbol. Any
other characters will (hopefully) come from the generic font family
'serif'. The 'serif' font family will also be used if one or more of
the other fonts is unavailable.

<H3>The font database</H3>

<H2><a name="font-selection">Font selection</a></H2>

<P> Setting font properties will be among the most common uses of
style sheets.  Unfortunately, there exists no well-defined and
universally accepted taxonomy for classifying fonts, and terms that
apply to one font family may not be appropriate for
others. E.g., 'italic' is commonly used to label slanted text, but
slanted text may also be labeled as being <EM>Oblique, Slanted,
Incline, Cursive</EM> or <EM>Kursiv</EM>. Therefore it is not a simple
problem to map typical font selection properties to a specific font.

<!-- Font matching algorithm in section on database. -->
<P> CSS2 defines the properties <span
class="propinst">'font-family'</span>, <span
class="propinst">'font-style'</span>, <span
class="propinst">'font-variant'</span>, <span
class="propinst">'font-weight'</span>, <span
class="propinst">'font-size'</span>, and <span
class="propinst">'font'</span>. 

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font-family">
       <span class="index-def" title="'font-family', definition of">
       'font-family'</span></a></H3>
<TABLE class="propinfo">
<TR><TH align="right">Property name:<TD>'font-family'</TR>
<TR><TH align="right">Value:<TD>[[
<span class="value-inst"><span class="index-inst"
title="&lt;family-name&gt;">&lt;family-name&gt;</span></span> | 
<span class="value-inst"><span class="index-def"
title="&lt;generic-family&gt;">&lt;generic-family&gt;</span></span>],]*
  [<span class="value-inst"><span class="index-inst"
title="&lt;family-name&gt;">&lt;family-name&gt;</span></span> | 
<span class="value-inst"><span class="index-def" title="&lt;generic-family&gt;">&lt;generic-family&gt;</span></span>]</TR>
<TR><TH align="right">Initial:<TD>UA specific</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> The value is a prioritized list of font family names and/or
generic family names. Unlike most other CSS2 properties, values are
separated by a comma to indicate that they are alternatives:

<PRE>
  BODY { font-family: gill, helvetica, sans-serif }
</PRE>

<P>  There are two types of list values:
  <DL>
    <DT><span class="value-def"><span class="index-def"
title="&lt;family-name&gt;, definition of"&lt;family-name&gt;</span></span> 
    <DD>
      The name of a font family of choice. In the last example, "gill"
      and "helvetica" are font families.
    <DT><span class="value-def"><span class="index-def"
title="&lt;generic-family&gt;, definition of"&lt;generic-family&gt;</span></span> 
    <DD>
      In the example above, the last value is a generic family
      name. The following generic families are defined:
      <UL>
	<LI>
	  'serif' (e.g., Times)
	<LI>
	  'sans-serif' (e.g., Helvetica)
	<LI>
	  'cursive' (e.g., Zapf-Chancery)
	<LI>
	  'fantasy' (e.g., Western)
	<LI>
	  'monospace' (e.g., Courier)
      </UL>
      <P>
      Style sheet designers are encouraged to offer a generic font family as a
      last alternative.
  </DL>

<P> Font names containing whitespace should be quoted:

<PRE>
  BODY { font-family: "new century schoolbook", serif }
  
  &lt;BODY style="font-family: 'My own font', fantasy"&gt;
</PRE>

<P> If quoting is omitted, any whitespace characters before and after
the font name are ignored and any sequence of whitespace characters
inside the font name is converted to a single space.

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font-style">
       <span class="index-def" title="'font-style', definition of">
       'font-style'</span></a></H3>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>font-style</TR>
<TR><TH align="right">Value:<TD> normal | italic | oblique</TR>
<TR><TH align="right">Initial:<TD>normal</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>


<P> The <span class="propinst">'font-style'</span> property selects
between normal (sometimes referred to as "roman" or "upright"), italic
and oblique faces within a font family.

<P> A value of 'normal' selects a font that is classified as 'normal'
in the UA's font database, while 'oblique' selects a font that is
labeled 'oblique'.  A value of 'italic' selects a font that is labeled
'italic', or, if that is not available, one labeled 'oblique'.

<P> The font that is labeled 'oblique' in the UA's font database may
actually have been generated by electronically slanting a normal font.

<P> Fonts with Oblique, Slanted or Incline in their names will
typically be labeled 'oblique' in the UA's font database. Fonts with
<EM>Italic, Cursive</EM> or <EM>Kursiv</EM> in their names will
typically be labeled 'italic'.

<PRE>
  H1, H2, H3 { font-style: italic }
  H1 EM { font-style: normal }
</PRE>

<P> In the example above, emphasized text within H1 will appear in a
normal face.

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font-variant">
       <span class="index-def" title="'font-variant', definition of">
       'font-variant'</span></a></H3>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>font-variant</TR>
<TR><TH align="right">Value:<TD>normal | small-caps</TR>
<TR><TH align="right">Initial:<TD>normal</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>

<P> Another type of variation within a font family is the
small-caps. In a small-caps font the lower case letters look similar
to the uppercase ones, but in a smaller size and with slightly
different proportions. The <span
class="propinst">'font-variant'</span> property selects that font.

<P> A value of 'normal' selects a font that is not a small-caps font,
'small-caps' selects a small-caps font. It is acceptable (but not
required) in CSS2 if the small-caps font is a created by taking a
normal font and replacing the lower case letters by scaled uppercase
characters. As a last resort, uppercase letters will be used as
replacement for a small-caps font.

<P> The following example results in an H3 element in small-caps,
with emphasized words in oblique small-caps:

<PRE>
  H3 { font-variant: small-caps }
  EM { font-style: oblique }
</PRE>

<P> There may be other variants in the font family as well, such as
fonts with old-style numerals, small-caps numerals, condensed or
expanded letters, etc.  CSS2 has no properties that select those.

<P>
  <EM>CSS2 core:</EM> insofar as this property causes text to be transformed
  to uppercase, the same considerations as for
<span class="propinst">'text-transform'</span> apply.

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font-weight">
       <span class="index-def" title="'font-weight', definition of">
       'font-weight'</span></a></H3>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>font-weight</TR>
<TR><TH align="right">Value:<TD>normal | bold | bolder | lighter | 100 | 200 | 300 | 400  | 500 | 600 | 700 | 800 | 900</TR> 
<TR><TH align="right">Initial:<TD>normal</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>N/A</TR>
</TABLE>
</DIV>


<P> The <span class="propinst">'font-weight'</span> property selects
the weight of the font. The values '100' to '900' form an ordered
sequence, where each number indicates a weight that is at least as
dark as its predecessor. The keyword 'normal' is synonymous with
'400', and 'bold' is synonymous with '700'. Keywords other than
'normal' and 'bold' have been shown to be often confused with font
names and a numerical scale was therefore chosen for the 9-value list.

<PRE>
  P { font-weight: normal }   /* 400 */
  H1 { font-weight: 700 }     /* bold */
</PRE>
  <P>
  The 'bolder' and 'lighter' values select font weights that are relative to
  the weight inherited from the parent:
  <PRE>
  STRONG { font-weight: bolder }
</PRE>

<P> Child elements inherit the resultant weight, not the keyword
value.

<P> Fonts (the font data) typically have one or more properties whose
values are names that are descriptive of the "weight" of a font. There
is no accepted, universal meaning to these weight names. Their primary
role is to distinguish faces of differing darkness within a single
font family. Usage across font families is quite variant; for example
a font that you might think of as being bold might be described as
being <EM>Regular, Roman, Book, Medium, Semi-</EM> or <EM>DemiBold,
Bold,</EM> or <EM>Black,</EM> depending on how black the "normal" face
of the font is within the design. Because there is no standard usage
of names, the weight property values in CSS2 are given on a numerical
scale in which the value '400' (or 'normal') corresponds to the
"normal" text face for that family. The weight name associated with
that face will typically be <EM>Book, Regular, Roman, Normal</EM> or
sometimes <EM>Medium</EM>.

<P> The association of other weights within a family to the numerical
weight values is intended only to preserve the ordering of darkness
within that family. However, the following heuristics tell how the
assignment is done in typical cases:

<UL>
    <LI>
      If the font family already uses a numerical scale with nine
      values (like e.g. <EM>OpenType</EM> does), the font weights
      should be mapped directly.
    <LI>
      If there is both a face labeled <EM>Medium</EM> and one labeled
      <EM>Book, Regular, Roman</EM> or <EM>Normal,</EM> then the
      <EM>Medium</EM> is normally assigned to the '500'.
    <LI>
      The font labeled "Bold" will often correspond to the weight value '700'.
    <LI>
      If there are fewer then 9 weights in the family, the default
      algorithm for filling the "holes" is as follows. If '500' is
      unassigned, it will be assigned the same font as '400'. If any
      of the values '600', '700', '800' or '900' remains unassigned,
      they are assigned to the same face as the next darker assigned
      keyword, if any, or the next lighter one otherwise. If any of
      '300', '200' or '100' remains unassigned, it is assigned to the
      next lighter assigned keyword, if any, or the next darker
      otherwise.
</UL>

<P> The following two examples illustrate the process. Assume four
weights in the "Example1" family, from lightest to darkest:
<EM>Regular, Medium, Bold, Heavy.</EM> And assume six weights in the
"Example2" family: <EM>Book, Medium, Bold, Heavy, Black,
ExtraBlack.</EM> Note how in the second example it has been decided
<EM>not</EM> to assign "Example2 ExtraBlack" to anything.

<PRE>
    Available faces       |  Assignments  |  Filling the holes
    ----------------------+---------------+-------------------
    "Example1 Regular"    |  400          |  100, 200, 300
    "Example1 Medium"     |  500          |
    "Example1 Bold"       |  700          |  600
    "Example1 Heavy"      |  800          |  900
</PRE>
<PRE>
    Available faces       |  Assignments  |  Filling the holes
    ----------------------+---------------+-------------------
    "Example2 Book"       |  400          |  100, 200, 300
    "Example2 Medium"     |  500          |
    "Example2 Bold"       |  700          |  600      
    "Example2 Heavy"      |  800          |
    "Example2 Black"      |  900          |
    "Example2 ExtraBlack" |  (none)       |
</PRE>

<P> Since the intent of the relative keywords 'bolder' and 'lighter'
is to darken or lighten the face <EM>within the family</EM> and
because a family may not have faces aligned with all the symbolic
weight values, the matching of 'bolder' is to the next darker face
available on the client within the family and the matching of
'lighter' is to the next lighter face within the family.  To be
precise, the meaning of the relative keywords 'bolder' and 'lighter'
is as follows:

<UL>
    <LI>
      'bolder' selects the next weight that is assigned to a font that
      is darker than the inherited one. If there is no such weight, it
      simply results in the next darker numerical value (and the font
      remains unchanged), unless the inherited value was '900' in
      which case the resulting weight is also '900'.
    <LI>
      'lighter' is similar, but works in the opposite direction: it
      selects the next lighter keyword with a different font from the
      inherited one, unless there is no such font, in which case it
      selects the next lighter numerical value (and keeps the font
      unchanged).
</UL>

<P> There is no guarantee that there will be a darker face for each of
the <span class="propinst">'font-weight'</span> values; for example,
some fonts may have only a normal and a bold face, others may have
eight different face weights. There is no guarantee on how a UA will
map font faces within a family to weight values. The only guarantee is
that a face of a given value will be no less dark than the faces of
lighter values.

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font-size">
       <span class="index-def" title="'font-size', definition of">
       'font-size'</span></a></H3>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>font-size</TR>
<TR><TH align="right">Value:<TD> 
<span class="value-inst"><span class="index-def"
title="&lt;absolute-size&gt;">&lt;absolute-size&gt;</span></span>
| <span class="value-inst"><span class="index-def"
title="&lt;relative-size&gt;">&lt;relative-size&gt;</span></span>
| <span class="value-inst"><span class="index-def"
title="&lt;length&gt;">&lt;length&gt;</span></span> 
| <span class="value-inst"><span class="index-def"
title="&lt;percentage&gt;">&lt;percentage&gt;</span></span>. 
<TR><TH align="right">Initial:<TD>medium</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>relative to parent
element's font size</TR> 
</TABLE>
</DIV>

<DL>
    <DT><span class="value-def"><span class="index-def"
title="&lt;absolute-size&gt;, definition
of">&lt;absolute-size&gt;</span></span> 

    <DD> An <span class="value-inst"><span class="index-def"
    title="&lt;absolute-size&gt;,
    use">&lt;absolute-size&gt;</span></span> keyword is an index to a
    table of font sizes computed and kept by the UA. Possible values
    are: [ xx-small | x-small | small | medium | large | x-large |
    xx-large ]. On a computer screen a scaling factor of 1.5 is
    suggested between adjacent indexes; if the 'medium' font is 10pt,
    the 'large' font could be 15pt. Different media may need different
    scaling factors. Also, the UA should take the quality and
    availability of fonts into account when computing the table. The
    table may be different from one font family to another.

    <DT><span class="value-def"><span class="index-def"
title="&lt;relative-size&gt;, definition
of">&lt;relative-size&gt;</span></span> 

    <DD> A <span class="value-inst"><span class="index-def"
    title="&lt;relative-size&gt;">&lt;relative-size&gt;</span></span> keyword is interpreted
    relative to the table of font sizes and the font size of the
    parent element. Possible values are: [ larger | smaller ]. For
    example, if the parent element has a font size of 'medium', a
    value of 'larger' will make the font size of the current element
    be 'large'.  If the parent element's size is not close to a table
    entry, the UA is free to interpolate between table entries or
    round off to the closest one. The UA may have to extrapolate table
    values if the numerical value goes beyond the keywords.
  </DL>

<P> Length and percentage values should not take the font size table
into account when calculating the font size of the element.

<P>  Negative values are not allowed.

<P> On all other properties, 'em' and 'ex' length values refer to the
font size of the current element. On the <span
class="propinst">'font-size'</span> property, these length units refer
to the font size of the parent element.

<div class="note"><P>
<em><strong>Note.</strong> 
An application MAY reinterpret an explicit size,
depending on the context. E.g., inside a VR scene a font may get a
different size because of perspective distortion.
</em>
</div>

<P> Examples:

<PRE>
  P { font-size: 12pt; }
  BLOCKQUOTE { font-size: larger }
  EM { font-size: 150% }
  EM { font-size: 1.5em }
</PRE>

<P> If the suggested scaling factor of 1.5 is used, the last three
declarations are identical.

<DIV class="propdef">
<H3 class=propname>
    <a name="propdef-font">
       <span class="index-def" title="'font', definition of">
       'font'</span></a></H3>
<TABLE class="propinfo"><TR><TH align="right">Property name:<TD>font</TR>
<TR><TH align="right">Value:<TD>
[ 
<span class="value-inst"><span class="index-inst" title="&lt;font-style&gt;">&lt;font-style&gt;</span></span>
|| 
<span class="value-inst"><span class="index-inst" title="&lt;font-variant&gt;">&lt;font-variant&gt;</span></span>
||
<span class="value-inst"><span class="index-inst" title="&lt;font-weight&gt;">&lt;font-weight&gt;</span></span>
]? 
<span class="value-inst"><span class="index-inst" title="&lt;font-size&gt;">&lt;font-size&gt;</span></span>
[ / 
<span class="value-inst"><span class="index-inst" title="&lt;line-height&gt;">&lt;line-height&gt;</span></span>
]?
<span class="value-inst"><span class="index-inst" title="&lt;font-family&gt;">&lt;font-family&gt;</span></span>
</TR>
<TR><TH align="right">Initial:<TD>not defined for shorthand properties</TR>
<TR><TH align="right">Applies to:<TD>all elements</TR>
<TR><TH align="right">Inherited:<TD>yes</TR>
<TR><TH align="right">Percentage values:<TD>allowed on <span class="value-inst"><span class="index-inst" title="&lt;font-size&gt;">&lt;font-size&gt;</span></span>and
  <span class="value-inst"><span class="index-inst"
title="&lt;line-height&gt;">&lt;line-height&gt;</span></span></TR>
</TABLE>
</DIV>

<DL>
<DT><span class="value-def"><span class="index-def"
title="&lt;font-style&gt;, definition
of">&lt;font-style&gt;</span></span>
<DD> All values that are acceptable for the <span
class="propinst">'font-style'</span> property.
<DT><span class="value-def"><span class="index-def"
title="&lt;font-variant&gt;, definition
of">&lt;font-variant&gt;</span></span>
<DD>All values that are acceptable for the <span
class="propinst">'font-variant'</span> property.
<DT><span class="value-def"><span class="index-def"
title="&lt;font-weight&gt;, definition
of">&lt;font-weight&gt;</span></span>
<DD>All values that are acceptable for the <span
class="propinst">'font-weight'</span> property.
<DT><span class="value-def"><span class="index-def"
title="&lt;font-size&gt;, definition
of">&lt;font-size&gt;</span></span>
<DD>All values that are acceptable for the 
<span class="propinst">'font-size'</span> property.
<DT><span class="value-def"><span class="index-def"
title="&lt;line-height&gt;, definition
of">&lt;line-height&gt;</span></span>
<DD>All values that are acceptable for the 
<span class="propinst">'line-height'</span> property.
<DT><span class="value-def"><span class="index-def"
title="&lt;font-family&gt;, definition
of">&lt;font-family&gt;</span></span>
<DD>All values that are acceptable for the 
<span class="propinst">'font-family'</span> property.
</DL>


<P> The <span class="propinst">'font'</span> property is a shorthand
property for setting  
<span class="propinst">'font-style'</span>, <span
class="propinst">'font-variant'</span>, <span
class="propinst">'font-weight'</span>, <span
class="propinst">'font-size'</span>, <span
class="propinst">'line-height'</span>, and <span
class="propinst">'font-family'</span>, at the same place in the style
sheet. The syntax of this property is based on a traditional
typographical shorthand notation to set multiple properties related to
fonts.

<P> For a definition of allowed and initial values, see the previously
defined properties. Properties for which no values are given are set
to their initial value.

<PRE>
  P { font: 12pt/14pt sans-serif }
  P { font: 80% sans-serif }
  P { font: x-large/110% "new century schoolbook", serif }
  P { font: bold italic large Palatino, serif }
  P { font: normal small-caps 120%/120% fantasy }
</PRE>

<P> In the second rule, the font size percentage value ('80%') refers
to the font size of the parent element. In the third rule, the line
height percentage refers to the font size of the element itself.

<P> In the first three rules above, the <span
class="propinst">'font-variant'</span> and <span
class="propinst">'font-weight'</span> are not explicitly mentioned,
which means they are all three set to their initial value
('normal'). The fourth rule sets the <span
class="propinst">'font-weight'</span> to 'bold', the <span
class="propinst">'font-style'</span> to 'italic' and implicitly sets
<span class="propinst">'font-variant'</span> to 'normal'.

<P> The fifth rule sets the <span
class="propinst">'font-variant'</span> ('small-caps'), the <span
class="propinst">'font-size'</span> (120% of the parent's font), the
<span class="propinst">'line-height'</span> (120% times the font size)
and the <span class="propinst">'font-family'</span> ('fantasy'). It
follows that the keyword 'normal' applies to the two remaining
properties: <span class="propinst">'font-style'</span> and
<span class="propinst">'font-weight'</span>.

<H2>Building the font database</H2>
</BODY>
</HTML>
