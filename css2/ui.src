<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
        "http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html lang="en">
<!-- $Id: ui.src,v 2.23 2002-04-23 22:50:26 bbos Exp $ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>User interface</title>
<!-- Changed by: Tantek Celik, 23-04-2002 -->
</head>
<body>
<h1 align="center">User interface</h1>

<h2><a name="cursor-props">Cursors:</a> the <span
class="propinst-cursor">'cursor'</span> property</h2>

<!-- #include src=properties/cursor.srb -->

<p>This property specifies the type of cursor to be displayed for the
	pointing device. Values have the following meanings:

<dl>
<dt>auto
<dd>The UA determines the cursor to display based on the current
context.

<dt>crosshair
<dd>A simple crosshair (e.g., short line segments resembling a "+" sign).

<dt>default
<dd>The platform-dependent default cursor. Often rendered as an arrow.

<dt>pointer
<dd>The cursor is a pointer that indicates a link.

<dt>move
<dd>Indicates something is to be moved.

<dt>e-resize, ne-resize, nw-resize, n-resize, se-resize,
sw-resize, s-resize, w-resize

<dd>Indicate that some edge is to be moved. For example, the
'se-resize' cursor is used when the movement starts from the
south-east corner of the box.

<dt>text
<dd>Indicates text that may be selected. Often rendered as an I-bar.

<dt>wait
<dd>Indicates that the program is busy and the user should
	  wait. Often rendered as a watch or hourglass.

<dt>progress
<dd>A progress indicator.  The program is performing some processing, 
but is different from 'wait' in that the user may still interact with the program. 
Often rendered as a spinning beach ball.
					    
<dt>help
<dd>Help is available for the object under the cursor. Often rendered
	  as a question mark or a balloon.

</dl>

<div class="example"><p>
<pre>
p { cursor : text; }
</pre>
</div>

<h2><a name="system-colors">User preferences for colors</a></h2>

<p>In addition to being able to assign pre-defined <a
href="syndata.html#color-units">color values</a> to text, backgrounds,
etc., CSS2 allows authors to specify colors in a manner that
integrates them into the user's graphic environment. Style rules that
take into account user preferences thus offer the following
advantages:
	
<ol>
<li>They produce pages that fit the user's defined look and feel.</li>
<li>They produce pages that may be more accessible as the current user
settings may be related to a disability.</li>
</ol>

<p>The set of values defined for system colors is intended to be
exhaustive. For systems that do not have a corresponding value, the
specified value should be mapped to the nearest system attribute, or
to a default color.</p>

<p>The following lists additional values for color-related CSS
attributes and their general meaning. Any color property (e.g., <span
class="propinst-color">'color'</span> or <span
class="propinst-background-color">'background-color'</span>) can take
one of the following names. Although these are case-insensitive, it is
recommended that the mixed capitalization shown below be used, to
make the names more legible.</p>

<dl>
<dt>ActiveBorder
<dd>Active window border.
<dt>ActiveCaption
<dd>Active window caption.
<dt>AppWorkspace
<dd>Background color of multiple document interface.
<dt>Background
<dd>Desktop background.
<dt>ButtonFace
<dd>Face color for three-dimensional display elements.
<dt>ButtonHighlight
<dd>Highlight color for three-dimensional display elements (for
    edges facing away from the light source).
<dt>ButtonShadow
<dd>Shadow color for three-dimensional display elements.
<dt>ButtonText
<dd>Text on push buttons.
<dt>CaptionText
<dd>Text in caption, size box, and scrollbar arrow box.
<dt>GrayText
<dd>Grayed (disabled) text. This color is set to #000 if
the current display driver does not support a solid gray color.
<dt>Highlight
<dd>Item(s) selected in a control.
<dt>HighlightText
<dd>Text of item(s) selected in a control.
<dt>InactiveBorder
<dd>Inactive window border.
<dt>InactiveCaption
<dd>Inactive window caption.
<dt>InactiveCaptionText
<dd>Color of text in an inactive caption.
<dt>InfoBackground
<dd>Background color for tooltip controls.
<dt>InfoText
<dd>Text color for tooltip controls.
<dt>Menu
<dd>Menu background.
<dt>MenuText
<dd>Text in menus.
<dt>Scrollbar
<dd>Scroll bar gray area.
<dt>ThreeDDarkShadow
<dd>Dark shadow for three-dimensional display elements.
<dt>ThreeDFace
<dd>Face color for three-dimensional display elements.
<dt>ThreeDHighlight
<dd>Highlight color for three-dimensional display elements.
<dt>ThreeDLightShadow
<dd>Light color for three-dimensional display elements
(for edges facing the light source).
<dt>ThreeDShadow
<dd>Dark shadow for three-dimensional display elements.
<dt>Window
<dd>Window background.
<dt>WindowFrame
<dd>Window frame.
<dt>WindowText
<dd>Text in windows.
</dl>

<div class="example"><p>
For example, to set the foreground and background colors of a paragraph
to the same foreground and background colors of the user's window, 
write the following:

<pre>
p { color: WindowText; background-color: Window }
</pre>
</div>

<h2><a name="system-fonts">User preferences for fonts</a></h2>

<p>As for colors, authors may specify fonts in a way that makes use of
a user's system resources. Please consult the <span
class="propinst-font">'font'</span> property for details.

<h2><a name="dynamic-outlines">Dynamic outlines:</a> the <span
class="index-def" title="outline">'outline'</span> property</h2>

<p>At times, style sheet authors may want to create outlines around
visual objects such as buttons, active form fields, image maps, etc.,
to make them stand out. CSS2 outlines differ from <a
href="box.html#border-properties">borders</a> in the following
ways:</p>

<ol>
<li>Outlines do not take up space. 
<li>Outlines may be non-rectangular. 
</ol>

<p>The outline properties control the style of these dynamic outlines.

<!-- #include src=properties/outline.srb -->
<!-- #include src=properties/outline-width.srb -->
<!-- #include src=properties/outline-style.srb -->
<!-- #include src=properties/outline-color.srb -->

<p>The outline created with the outline properties is drawn "over" a
box, i.e., the outline is always on top, and doesn't influence the
position or size of the box, or of any other boxes. Therefore,
displaying or suppressing outlines does not cause reflow.

<p>The outline is drawn starting just outside the <a
href="box.html#border-edge">border edge</a>.

<p>Outlines may be non-rectangular. For example, if the element is
broken across several lines, the outline is the minimum outline that
encloses all the element's boxes. In contrast to <a
href="box.html#border-properties">borders</a>, the outline is not
open at the line box's end or start, but is always fully connected.

<p>The <span class="propinst-outline-width">'outline-width'</span>
property accepts the same values as <span
class="propinst-border-width">'border-width'</span>.  

<p>The <span class="propinst-outline-style">'outline-style'</span>
property accepts the same values as <span
class="propinst-border-style">'border-style'</span>,
except that 'hidden' is not a legal outline style.

<p>The <span class="propinst-outline-color">'outline-color'</span>
accepts all colors, as well as the keyword <span class="index-def"
title="invert"><a class="value-def"
name="value-def-invert">'invert'</a></span>. 'Invert' is expected to
perform a color inversion on the pixels on the screen. This is a
common trick to ensure the focus border is visible, regardless of
color background.

<p>The <span class="propinst-outline">'outline'</span> property is a
shorthand property, and sets all three of <span
class="propinst-outline-style">'outline-style'</span>, <span
class="propinst-outline-width">'outline-width'</span>, and <span
class="propinst-outline-color">'outline-color'</span>.

<p class="note">Note that the outline is the same on all sides. In
contrast to borders, there is no 'outline-top' or 'outline-left'
property.

<p>This specification does not define how multiple overlapping
outlines are drawn, or how outlines are drawn for boxes that are
partially obscured behind other elements.

<div class="note"><p>
<em><strong>Note.</strong>
Since the focus outline does not affect formatting (i.e., no
space is left for it in the box model), it may well overlap
other elements on the page.
</em>
</div>

<div class="example"><p>
Here's an example of drawing a
thick outline around a BUTTON element:

<pre>
button { outline-width : thick }
</pre>

<p>Scripts may be used to dynamically change the width
of the outline, without provoking reflow.
</div>

<h3>Outlines and the focus</h3>

<p>Graphical user interfaces may use outlines around elements to tell
the user which element on the page has the <span class="index-def"
title="focus"><dfn>focus</dfn></span>. These outlines are in addition
to any borders, and switching outlines on and off should not cause
the document to reflow. The focus is the subject of user interaction
in a document (e.g., for entering text, selecting a button,
etc.). User agents supporting the <a
href="media.html#interactive-media-group">interactive media group</a>
must keep track of where the focus lies and must also represent the
focus. This may be done by using dynamic outlines in conjunction with
the :focus pseudo-class.

<div class="example">
<p>For example, to draw a thick black line around an element when it
has the focus, and a thick red line when it is active, the following
rules can be used:

<pre>
:focus  { outline: thick solid black }
:active { outline: thick solid red }
</pre>
</div>

<h2>Magnification</h2> 

<p>The CSS working group considers that the magnification of a
document or portions of a document should not be specified through
style sheets. User agents may support such magnification in different ways
(e.g., larger images, louder sounds, etc.)


<p>When magnifying a page, UAs should preserve the relationships
between positioned elements. For example, a comic strip may be
composed of images with overlaid text elements. When magnifying this
page, a user agent should keep the text within the comic strip balloon.
</body>
</html>
