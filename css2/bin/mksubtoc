#!/usr/local/bin/perl
# sub TOC builder
#
# Arnaud Le Hors - lehors@w3.org
# $Id: mksubtoc,v 1.7 1997-12-11 21:39:32 ijacobs Exp $

$startlvl = 0;
$maxlvl = 0;

while ($_ = $ARGV[0], /^-/) {
    if (/^-l/) {
	shift;
	$startlvl = $ARGV[0] - 1;
    } elsif (/^-ml/) {
	shift;
	$maxlvl = $ARGV[0];
    } else {
	last;
    }
    shift;
}

$PROGNAME = substr($0, rindex($0, "/") + 1);

if ($#ARGV < 1) {
    die "Usage: $PROGNAME [-l startlvl] [-ml maxlvl] tocdb src [output]
\twrites to stdout when output not specified.\n";
}
$hdbasef = $ARGV[0];
shift;
$file = $ARGV[0];
shift;
if ($ARGV[0]) {
    $tocf = $ARGV[0];
} else {
    $tocf = "-";
}

# copy file in memory
sub readfile {
    open(INPUT, $_[0]) || die "$PROGNAME Error: Cannot open file: $_[0]\n";
    undef $/;			# read file as a single block
    $buf = <INPUT>;
    $/ = "\n";			# reset input record separator
    close(INPUT);
}

sub olinit {
    @ol = (0, 0, 0, 0, 0, 0);
}

sub ol {
# args: $h
    $hn = $_[0] - 1;
    for ($i = $#n; $i > $hn; $i--) {
	if ($ol[$i] != 0) {
	    print OUTPUT "</ol>\n";
	    $ol[$i] = 0;
	}
	$n[$i] = 0;
    }
    if ($hn >= 0) {
	if ($hn > $#ol || $ol[$hn] == 0) {
	    print OUTPUT "<ol>\n";
	    $ol[$hn] = 1;
	}
	$n[$hn]++;
    }
}

sub cleanup {
    $text = $_[0];
    $text =~ s/[ \t]*$//sgi;
    return $text;
}

### main

# read heading database
readfile($hdbasef);

# search for all the headings related to the given files and build the toc
open(OUTPUT, "> $tocf");
olinit();
# change extension
$hfil = $file;
$hfil =~ s/\.src/\.html/;
$_ = $buf;
while (/$file;(.*?);([0-9]*);([1-9A-Z].*?);(.*?)\n/sig) {
    $t = $1;
    $h = int($2);
    $anchor = $4;
    if ($h > $startlvl && ($maxlvl == 0 || $h <= $maxlvl)) {
	ol($h);
	# If there's an anchor, it has a name attr (by mktoc).
	# Reuse it (and rename name -> href everywhere)
	if ($t =~ /<a[^>]+>/si) {
	    $t =~ s/name\s*=\s*(?:[^\s>\"#]+#)?([^\s>\"]+)/href=\"#\1\"/isg;
	    $t =~ s/name\s*=\s*\"(?:[^\">#]+#)?([^\"]+)\"/href=\"#\1\"/isg;
	    print OUTPUT "<li>$t\n";
	} else {
	    if ($h > 1) {
		$url = "#$anchor";
		$rel = "";
	    }
	    $txt = cleanup($t);
	    print OUTPUT "<li><a href=\"$url\"$rel>$txt</a>\n";
	}
    }
    $_ = $';
}
ol(0);				# close all open lists
close(OUTPUT);
