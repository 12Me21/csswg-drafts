<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en">
<!-- $Id: cascade.src,v 1.18 1997-10-30 08:28:59 ian Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Cascade</TITLE>
<LINK rel="next" href="media.html">
<LINK rel="previous" href="selector.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Cascade</H1>

<P> In CSS, more than one style sheet can simultaneously influence a
document's presentation and rules from these style sheets may overlap
in scope (e.g., two rules that apply to the same element specify a
font size). CSS resolves these conflicts by assigning a weight to each
style rule and when several rules apply, choosing the one with the
greatest weight. This is known as the <span class="index-def"
title="cascade, definition of"><em>cascade</em></span>.

<P>By default, rules in a user's personal style sheets have less
weight than rules in the author's documents. Thus, if there are
conflicts between the style sheets of an incoming document and the
reader's personal sheets, the author's rules will be used. Both reader
and author rules override the UA's <a
href="convent.html#default-style-sheet">default style sheet</a>.

<P> Imported style sheets also cascade and their weight depends on
their import order. Rules specified in a given style sheet override
rules imported from other style sheets. Imported style sheets can
themselves import and override other style sheets, recursively, and
the same precedence rules apply.

<H2><a name="cascading-order">Cascading order</a></H2>
<!-- Carefully distinguish what is
  1) UA dependent
  2) Object-language dependent
-->

<P> Conflicting rules are intrinsic to the CSS mechanism. To find the
value for an element/property combination, user agents must apply 
the following algorithm:

<OL>
    <LI>
      Find all declarations that apply to the element/property in
      question.  Declarations apply if the selector matches the
      element in question. If no declarations apply, terminate
      the algorithm.

    <LI>
      Sort the declarations by explicit weight: declarations marked
      <span class="index-inst" title="'important'">'!important'</span>
      carry more weight than unmarked (normal) declarations. See the
      section on <a href="important-rules">'important'</a> rules for
      more information. 

    <LI>
      Sort by origin: the author's style sheets override the reader's
      style sheet which override the UA's default values. An imported
      style sheet has the same origin as the style sheet from which it
      is imported. 

    <LI>
      Sort by specificity of selector: more specific selectors will
      override more general ones. The definition and calculation of
      specificity is object-language dependent.

       	<P> Pseudo-elements and pseudo-classes are counted as normal
       	elements and classes, respectively.  

    <LI> Sort by order specified: if two rules have the same weight,
    the latter specified wins. Rules in imported style sheets are
    considered to be before any rules in the style sheet itself.
</OL>

<P>The search for the property value must be terminated when any of
the above steps yields a rule that has a higher weight than the other
rules that apply to the same element/property combination.

<P>If the cascade does not yield a value, the user agent must seek an
<a href="process.html#inheritance">inherited value</a>, and if no value
inherits, the user agent must assign the initial value.  (See the <a
href="process.html">CSS2 processing model</a> for more general
information.)

<P> This strategy gives author's style sheets considerably higher
weight than those of the reader. It is therefore important that the
user agent give the user the ability to turn off the influence of a
certain style sheet, e.g., through a pull-down menu.

<H3><a name="important-rules">'Important' rules</a></H3>

<P> Style sheet designers can increase the weights of their
declarations by declaring them <span class="index-def"
title="'important'">'important'</span>.

<div class="example"><P>
<PRE>
  H1 { color: black ! important; background: white ! important }
  P  { font-size: 12pt ! important; font-variant: italic }
</PRE>
</div>

<P> In the example above, the first three declarations have increased
weight, while the last declaration has normal weight.

<P> A reader rule with an important declaration will override an
author rule with a normal declaration. An author rule with an
important declaration will override a reader rule with an important
declaration.

<P>Declaring a shorthand property (e.g., <span
class="propinst-background">'background'</span>) to be important
is equivalent to declaring all of its sub-properties important.

<H3>Cascading order in HTML</H3>
In HTML, a selector's specificity is calculated as follows:

<ul>
<li>(a) count the number of "id" attributes in the selector
<li>(b) count the number of other attributes in the selector
(including class attributes)
<li>(c) count the number of element names in the selector
</ul>

<P>Concatenating the three numbers (in a number system with a large
base) gives the specificity. 

<div class="example"><P>
Some examples:

<PRE>
  LI            {...}  /* a=0 b=0 c=1 -&gt; specificity =   1 */
  UL LI         {...}  /* a=0 b=0 c=2 -&gt; specificity =   2 */
  UL OL~LI      {...}  /* a=0 b=0 c=3 -&gt; specificity =   3 */
  /H1 [REL=up]/ {...}  /* a=0 b=1 c=1 -&gt; specificity =  11 */
  UL OL LI.red  {...}  /* a=0 b=1 c=3 -&gt; specificity =  13 */ 
  LI.red.level  {...}  /* a=0 b=2 c=1 -&gt; specificity =  21 */
  #x34y         {...}  /* a=1 b=0 c=0 -&gt; specificity = 100 */ 
</PRE>
</div>


<P> A declaration in the "style" attribute of an element has the same
weight as a declaration with an "id"-based selector that is specified
at the end of the style sheet:

<div class="example"><P>
<PRE>
&lt;STYLE type="text/css"&gt;
  #x97z { color: blue }
&lt;/STYLE&gt;

&lt;P ID=x97z style="color: red"&gt;
</PRE>

<P> In the above example, the color of the P element would be
red. Although the specificity is the same for both declarations, the
declaration in the "style" attribute will override the one in the
STYLE element because of cascading rule number 5.
</div>

<H3>Precedence of document language attributes</H3> 
<P> The UA may choose to honor other attributes of the document language
(e.g., HTML presentational attribute such as "align"). If so, these
attributes are translated to the corresponding CSS rules with
specificity equal to 1. The rules are assumed to be at the start of
the author style sheet and may be overridden by subsequent style sheet
rules.

<div class="note"><P>
<em><strong>Note.</strong>
In a transition phase, this policy will make it easier for
stylistic attributes to coexist with style sheets.
</em>
</div>

</BODY>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
End:
-->
