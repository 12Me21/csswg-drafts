<!DOCTYPE HTML SYSTEM "http://www.w3.org/TR/WD-html40/sgml/HTML4.dtd">
<html lang="en">
<!-- $Id: selector.src,v 1.8 1997-08-07 16:29:30 ijacobs Exp $ -->
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Selectors</TITLE>
<LINK rel="next" href="cascade.html">
<LINK rel="previous" href="doctree.html">
<LINK rel="STYLESHEET" href="style/default.css" type="text/css">
</HEAD>
<BODY>
<H1 align="center">Selectors</H1>
<H2>Grouping selectors</H2>

<P> To reduce the size of style sheets, one can group selectors in
comma-separated lists:

<PRE>
  H1, H2, H3 { font-family: helvetica }
</PRE>

<P> Similarly, declarations can be grouped:
  
<PRE>
  H1 { 
    font-weight: bold; 
    font-size: 12pt;
    line-height: 14pt; 
    font-family: helvetica; 
    font-variant: normal;
    font-style: normal;
  }
</PRE>

<P> In addition, some properties have their own grouping syntax:

<PRE>
  H1 { font: bold 12pt/14pt helvetica }
</PRE>

<P> which is equivalent to the previous example.

<H2>Contextual selectors</H2>
<!-- discuss contextual + grouping too -->
(Contextual selectors can have one class per simple selector)
<H2>Pseudo-classes and pseudo-elements</H2>

<P> In CSS2, style is normally attached to an element based on its
position in the document structure. This simple model is sufficient
for a wide variety of styles, but doesn't cover some common
effects. The concept of <span class="index-def"
title="pseudo-classes">pseudo-classes</span> and 
<span class="index-def" title="pseudo-elements">pseudo-elements</span> extend
addressing in CSS2 to allow external information to influence the
formatting process.

<P> Pseudo-classes and pseudo-elements can be used in CSS selectors,
but do not exist in the source document. Rather, they are "inserted"
by the UA under certain conditions to be used for addressing in style
sheets. They are referred to as "classes" and "elements" since this is
a convenient way of describing their behavior. More specifically,
their behavior is defined by a <span class="index-def"
title="fictional tag sequence"><EM>fictional tag sequence</EM></span>.

<!-- Explain what a fictional tag sequence means -->


<P> Pseudo-elements are used to address sub-parts of elements, while
pseudo-classes allow style sheets to differentiate between different
element types.

<H3>Pseudo-elements in selectors</H3>

<P> In a contextual selector, pseudo-elements are only allowed at the
end of the selector. The following example illustrates this with the
<span class="index-inst" title=":first-letter">:first-letter</span>
pseudo element (defined below).

<PRE>
  BODY P:first-letter { color: purple }
</PRE>

<P> Pseudo-elements can be combined with classes in selectors:

<PRE>
  P.initial:first-letter { color: red }

  &lt;P CLASS=initial&gt;First paragraph&lt;/A&gt;
</PRE>

<P> The above example would make the first letter of all P elements
with "class=initial" red. When combined with classes or <span
class="index-inst" title="pseudo-classes">pseudo-classes</span>,
pseudo-elements must be specified at the end of the selector. 

<P>Only one pseudo-element can be specified per selector.

<H3>Multiple pseudo-elements</H3>

<P> Several pseudo elements can be combined. The following examples
use the <span class="index-inst"
title=":first-letter">:first-letter</span> and <span class="index-inst"
title=":first-line">:first-line</span> pseudo elements defined below.

<PRE>
  P { color: red; font-size: 12pt }
  P:first-letter { color: green; font-size: 200% }
  P:first-line { color: blue }

  &lt;P&gt;Some text that ends up on two lines&lt;/P&gt;
</PRE>

<P> In this example, the first letter of each P element would be
green with a font size of 24pt. The rest of the first line (as
formatted on the canvas) would be blue while the rest of the paragraph
would be red. Assuming that a line break will occur before the word
"ends", the <span class="index-inst" title="fictional tag sequence">fictional tag sequence</span> is:

<PRE>
  &lt;P&gt;
  &lt;P:first-line&gt;
  &lt;P:first-letter&gt; 
  S 
  &lt;/P:first-letter&gt;ome text that 
  &lt;/P:first-line&gt; 
  ends up on two lines 
  &lt;/P&gt;
</PRE>

 <P> Note that the :first-letter element is inside the :first-line
 element.  Properties set on :first-line will be inherited by
 :first-letter, but are overridden if the same property is set on
 :first-letter.

<P> If a pseudo-element breaks up a real element the necessary extra
tags must be regenerated in the fictional tag sequence. For example,
if a SPAN element spans over a <TT>&lt;/P:first-line&gt;</TT> tag, a
set of SPAN end and start tags must be regenerated and the fictional
tag sequence becomes:

<PRE>
  &lt;P&gt;
  &lt;P:first-line&gt;
  &lt;SPAN&gt; 
  This text is inside a long 
  &lt;/SPAN&gt;
  &lt;/P:first-line&gt;
  &lt;SPAN&gt; 
  span element 
  &lt;/SPAN&gt;
</PRE>

<H3>Typographical pseudo-elements:
<span class="index-inst" title="pseudo-elements, 
:first-line">:first-line</span> and
<span class="index-inst"
title="pseudo-elements,:first-letter">:first-letter</span> 
</H3>

<P> Some common typographical effects are associated not with
structural elements but rather with typographical items as formatted
on the canvas. In CSS2, two such typographical items can be addressed
through <span class="index-inst"
title="pseudo-elements">pseudo-elements</span>: the first line of an
element, and the first letter.

<div class="note"><P>
<em><strong>Note.</strong>
Conforming UAs may ignore all rules with :first-line or
:first-letter in the selector, or, alternatively, may only support a
subset of the properties on these pseudo-elements. See the section on
<a href="conformance.html">conformance</a> for further information.
</em>
</div>

<H4><span class="index-def" title="pseudo-elements, :first-line|:first-line">:first-line</span></H4>

<P> The :first-line pseudo-element is used to apply special styles to
the first line as formatted on the canvas:

<PRE>
  &lt;STYLE type="text/css"&gt;
    P:first-line { font-style: small-caps }
  &lt;/STYLE&gt;

  &lt;P&gt;The first line of an article in Newsweek.
</PRE>

<P> On a text-based UA, this could be formatted as:

<PRE>
  THE FIRST LINE OF AN
  article in Newsweek.
</PRE>

<P> The <span class="index-inst" title="fictional tag sequence">fictional tag sequence</span> in the above example is:

<PRE>
  &lt;P&gt;
  &lt;P:first-line&gt;
  The first line of an 
  &lt;/P:first-line&gt;
  article in Newsweek.
  &lt;/P&gt;
</PRE>

<P> The :first-line end tag is inserted at the end of the first line
as formatted on the canvas.

<P> The <span class="index-inst" title="pseudo-elements,
:first-line">:first-line</span> pseudo-element can only be attached to a 
block-level element.

<P> The :first-line pseudo-element is similar to an inline element,
but with certain restrictions. Only the following properties apply to
a :first-line element: 
<a href="fonts.html#font-properties">font properties</a>, 
<a href="colors.html#color-properties">color properties</a>, 
<a href="colors.html#background-properties">background properties</a>, 
<span class="propinst-word-spacing">'word-spacing'</span>, <span
class="propinst-letter-spacing">'letter-spacing'</span>, <span
class="propinst-text-decoration">'text-decoration'</span>, <span
class="propinst-vertical-align">'vertical-align'</span>, <span
class="propinst-text-transform">'text-transform'</span>, <span
class="propinst-line-height">'line-height'</span>, and <span
class="propinst-clear">'clear'</span>, 

<H4><span class="index-def" title="pseudo-elements,
:first-letter|:first-letter">:first-letter</span></H4>


<P> The :first-letter pseudo-element is used for <span
class="index-inst" title="initial caps">"initial caps"</span> and
<span class="index-inst" title="drop caps">"drop caps"</span>, which
are common typographical effects. It is similar to an inline element
if its <span class="propinst-float">'float'</span> property is 'none',
otherwise it is similar to a floating element. 

<P>These are the properties that apply to :first-letter pseudo-elements:
<a href="fonts.html#font-properties">font properties</a>, 
<a href="colors.html#color-properties">color properties</a>, 
<a href="colors.html#background-properties">background properties</a>, 
<span class="propinst-text-decoration">'text-decoration'</span>, <span
class="propinst-vertical-align">'vertical-align'</span>
(and only if 'float' is 'none', <A
href="#vertical-align">5.4.4</A>), <span
class="propinst-text-transform">'text-transform'</span>, <span
class="propinst-line-height">'line-height'</span>, 
<a href="flowobj.html#margin-properties">margin properties</a>, 
<a href="flowobj.html#padding-properties">padding properties</a>, 
<a href="flowobj.html#border-properties">border properties</a>, 
<span class="propinst-float">'float'</span>, and <span
class="propinst-clear">'clear'</span>. 

<P>The following CSS2 will make a dropcap initial letter span two lines:

<PRE>
&lt;HTML&gt;
 &lt;HEAD&gt;
  &lt;TITLE&gt;Title&lt;/TITLE&gt;
  &lt;STYLE type="text/css"&gt;
   P              { font-size: 12pt; line-height: 12pt }
   P:first-letter { font-size: 200%; float: left }
   SPAN           { text-transform: uppercase }
  &lt;/STYLE&gt;
 &lt;/HEAD&gt;
 &lt;BODY&gt;
  &lt;P&gt;&lt;SPAN&gt;The first&lt;/SPAN&gt; few words of an article in The Economist.&lt;/P&gt;
 &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P> If a text-based UA supports the :first-letter pseudo-element
the above could be formatted as:

<PRE>
  ___
   | HE FIRST few
   | words of an 
  article in the
  Economist.
</PRE>

<P> The <span class="index-inst" title="fictional tag
 sequence">fictional tag sequence</span> is:

<PRE>
  &lt;P&gt;
  &lt;SPAN&gt;
  &lt;P:first-letter&gt;
  T
  &lt;/P:first-letter&gt;he first
  &lt;/SPAN&gt; 
  few words of an article in the Economist.
  &lt;/P&gt;
</PRE>

<P> Note that the :first-letter pseudo-element tags abut the content
(i.e., the initial character), while the :first-line pseudo-element
start tag is inserted right after the start tag of the element to
which it is attached.

<P> The UA defines what characters are inside the :first-letter
element. Quotes that precede the first letter should be
included:

<PRE>
  ||   /\    bird in 
      /  \   the hand
     /----\  is worth
    /      \ two in
  the bush," says an 
  old proverb.
</PRE>

<P> When the paragraph starts with other punctuation (e.g., parenthesis
and ellipsis points) or other characters that are normally not
considered letters (e.g.,  digits and mathematical symbols),
:first-letter pseudo-elements are usually ignored.

<P> The :first-letter pseudo-element can only be attached to a
block-level element.

<div class="note"><P>
<em><strong>Note.</strong>
Some languages may have specific rules about how to treat certain
letter combinations. In Dutch, for example, if the letter combination
"ij" appears at the beginning of a word, they should both be
considered within the :first-letter pseudo-element.
</em>
</div>

<H2>Selectors in HTML</H2>

<P> <a rel="biblioentry" href="./refs.html#ref-HTML40">[HTML40]</a>
defines two attributes -- "class" and "id" -- that may be used as
CSS2 selectors in an HTML document. 


<H3>The class attribute</H3> 

<P>The HTML "class" attribute allows authors to group elements
together and specify style information to the entire group. For
example, we can assign style information to all elements belonging to
the class 'pastoral':

<PRE>
  .pastoral { color: green }  /* all elements with CLASS pastoral */
</PRE>

<P>or to certain types of elements belonging to the class 'pastoral'
(here, H1):

<PRE>
&lt;HTML&gt;
 &lt;HEAD&gt;
  &lt;TITLE&gt;Title&lt;/TITLE&gt;
  &lt;STYLE type="text/css"&gt;
    H1.pastoral { color: #00FF00 }
  &lt;/STYLE&gt;
 &lt;/HEAD&gt;
 &lt;BODY&gt;
  &lt;H1 class="pastoral"&gt;Very green&lt;/H1&gt;
 &lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

<P> The normal inheritance rules apply to classed elements; they
inherit values from their parent in the document structure.

<P> Only one class can be specified per selector. 'P.pastoral.marine'
is therefore an invalid selector in CSS2. 

<P> CSS gives so much power to the "class" attribute, that in many cases
it doesn't even matter what HTML element the class is set on -- you
can make any element emulate almost any other. Relying on this power
is not recommended, since it removes the level of structure that has a
universal meaning (HTML elements).  A structure based on "class" is only
useful within a restricted domain, where the meaning of a class has
been mutually agreed upon.

<H3>The id attribute</H3>
<P>The HTML "id" attribute allows authors to specify a unique
identifier to an element and specify style information for that
element only. 

<P>The "id" attribute is addressed by preceding its value with a
"#". Thus:

<PRE>
  &lt;HEAD&gt;
  &lt;STYLE&gt;
  #z98y { letter-spacing: 0.3em }
  H1#z98y { letter-spacing: 0.5em }
  &lt;/STYLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
  <em>...body...</em>
  &lt;P id=z98y&gt;Wide text&lt;/P&gt;
  <em>...body...</em>
  &lt;/BODY&gt;
</PRE>

<P> In the above example, the first selector matches the P element
due to the "id" attribute value. The second selector specifies both an
element type (H1) and an "id" value, and will therefore not match the
P element.

<div class="note"><P>
<em><strong>Note.</strong>
While style sheets have been designed to augment document
structure, this feature will allow authors to create documents that
present well on the canvas without taking advantage of the structural
elements of HTML. This use of style sheets is discouraged.
</em>
</div>

<H3>Anchor pseudo-classes:
<span class="index-def" title="pseudo-classes, :link|:link">:link</span>,
<span class="index-def" title="pseudo-classes, :visited|:visited">:visited</span>,
and 
<span class="index-def" title="pseudo-classes, :active|:active">:active</span>
</H3>

<P> User agents commonly display newly visited HTML anchors
differently from previously visited ones. In CSS2, authors may
distinguish three anchor "states" through pseudo-classes on the A
element: 

<PRE>
  A:link { color: red }       /* unvisited link */
  A:visited { color: blue }   /* visited links */
  A:active { color: lime }    /* active links */
</PRE>

<P> All A elements with an "href" attribute will be put into one and
only one of these groups (i.e., target anchors are not affected). UAs
may choose to move an element from 'visited' to 'link' after a certain
time. An 'active' link is one that is currently being selected
(e.g., by a mouse button press) by the reader.

<P> The formatting of an anchor pseudo-class is as if the class had
been inserted manually. A UA is not required to reformat a currently
displayed document due to anchor pseudo-class transitions. E.g., a
style sheet can legally specify that the <span
class="propinst-font-size">'font-size'</span> of an 'active' link should be
larger that a 'visited' link, but the UA is not required to
dynamically reformat the document when the reader selects the
'visited' link.

<P> Pseudo-class selectors do not match normal classes, and vice
versa. The style rule in the example below will therefore not have any
influence:

<PRE>
  A:link { color: red }

  &lt;A class="link" name="target5"&gt; ... &lt;/A&gt;
</PRE>

<P> In CSS2, anchor pseudo-classes have no effect on elements other
than A.  Therefore, the element type can be omitted from the
selector. The following two CSS2 declarations are equivalent and
select the same HTML elements:

<PRE>
  A:link { color: red }
  :link { color: red }
</PRE>

<P> Pseudo-class names are case-insensitive.

<P> Pseudo-classes can be used in contextual selectors:

<PRE>
  A:link IMG { border: solid blue }
</PRE>

<P> Also, pseudo-classes can be combined with normal classes:

<PRE>
  A.external:visited { color: blue }

  &lt;A class="external" href="http://out.side/"&gt;external link&lt;/A&gt;
</PRE>

<P> If the link in the above example has been visited, it will be
rendered in blue. Note that normal class names precede pseudo-classes
in the selector.
</BODY>
</html>
