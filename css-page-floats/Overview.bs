<h1>CSS Page Floats</h1>

<pre class='metadata'>
Shortname: css-page-floats
Level: 3
Group: csswg
Status: ED
ED: http://dev.w3.org/csswg/css-page-floats/
Previous Version: https://hg.csswg.org/drafts/raw-file/108d7e3ff204/css-page-floats/Overview.html
Editor: Johannes Wilm, Vivliostyle, johanneswilm@vivliostyle.com
Former Editor: H&aring;kon Wium Lie, Opera Software, howcome@opera.com
Abstract: This document describes floats that move to the top or bottom of content
Abstract: passages. This feature has traditionally been used in print
Abstract: publications in which figures and photos are moved to the top or bottom
Abstract: of columns or pages, along with their captions.
Abstract: This draft describes how to achieve this effects for floats within pages,
Abstract: columns, regions and elements.
Ignored Terms: near, 3em, intrude, top-corner, bottom-corner, left, right, both, float-reference, element, none, floats, float-stacking-order, wrap-around
</pre>


<h2 id="overview">Overview</h2>

  This specification adds new keywords on the 'float' property.

  This document allows to specify whether a float element floats within a reference
  element, column, region or page. In the case of floats with a reference column,
  region or page, placement can be deferred to a subsequent column, region or page
  with the <em>float-defer</em> properties.

  Floats with a column reference can be set to span several columns, thereby
  supporting commonly used newspaper layouts. New values on the 'clear' property
  add further ways of refining layouts.

  The way contents wrap around floats can be controlled by changing the value of
  the 'wrap-flow' property which initially is set to 'both' for floats.

  <p class="issue">
    Floats as defined here work with different types of fragmentation types
    (columns, regions, pages) as well as container elements. The specification
    is no longer specific to print or to pages.
    At the same time, inline floats and page floats differ in many ways, and it may
    (or may not) be a good idea to separate the two entirely.
    Therefore, the name <em>CSS Page Floats</em> should probably be replaced with
    a more appropriate name.


<h2 id="terms">
Terminology</h2>

  <dl export>
    <dt><dfn>Float element</dfn>
    <dd>
      An element which has float set to something else than none.
    <dt><dfn>Float block formatting context</dfn>
    <dd>
      The block formatting context which is generated by a float and which contains
      its contents.
    <dt><dfn>Float anchor</dfn>
    <dd>
      The float anchor is the point in the flow where the float had appeared had
      it not been a float.
    <dt><dfn>Float containing block formatting context</dfn>
    <dd>
      The block formatting context inside of which the float is embedded.
    <dt><dfn>Float reference</dfn>
    <dd>
      The entity to which the float is aligned.
  </dl>

<h2 id="positioning">
Difference to absolutely positioned elements</h2>

  <p>
    Floats and absolutely positioned elements are both out-of-flow elements.
    Absolutely positioned elements that are also exclusions can imitate many of
    the features of floats.

  <p>
    However, in the case of floats, the block formatting context that contains them
    (float containing block formatting context) is required to include the area
    occupied by the float, which is not a requirement for absolutely positioned
    elements.

  <div class="example">
    A float inside a float containing block formatting context given by a
    display-inline-block element.The element, which has a green border, is expanded
    to include the brown float.

<code><pre>
&lt;style>
.float {
  float: left;
  margin: 5px;
}
.border {
    border: 3px solid black;
    margin: 5px;
}
#outer {
    border: 1px solid green;
    display: inline-block;
}
canvas {
    background-color: brown;
}
p {
  margin: 5px;
}
&lt;/style>
&lt;div id="outer">
    &lt;p class="border">
        &lt;span class="float border">
            &lt;canvas width="100" height="100"/>
        &lt;/span>
        First paragraph.
    &lt;/p>
    &lt;p class="border">
        Second paragraph and some more text.
    &lt;/p>
&lt;/div>
</pre></code>

    <img alt="sample rendering" src="images/float_containing_context.png">

    In comparison, the below is the same HTML, but the float is replaced by an
    absolutely positioned element that is also an exclusion. The containing block
    formatting context is still given by a display-inline-block element. However,
    the element, which has a green border is not expanded to include the brown
    absolutely positioned element.

<code><pre>
&lt;style>
.float {
    position: absolute;
    top: 8px;
    left: 8px;
    wrap-flow: both;
}
.border {
    border: 3px solid black;
    margin: 5px;
}
#outer {
    border: 1px solid green;
    display: inline-block;
    position: relative;
}
canvas {
    background-color: brown;
}
&lt;/style>
&lt;div id="outer">
    &lt;p class="border">
        &lt;span class="float border">
            &lt;canvas width="100" height="100"/>
        &lt;/span>
        First paragraph.
    &lt;/p>
    &lt;p class="border">
        Second paragraph and some more text.
    &lt;/p>
&lt;/div>
</pre></code>

    <img alt="sample rendering" src="images/positioned_containing_context.png">

  </div>


<h2 id="floating">
Floating to the inline-start/inline-end and block-start/block-end</h2>

  <p>
    Each float has a <em>reference container element, column, region or
    page</em>, which is the container element, column, region or page to which the
    float is aligned.


  <h3 id="float-reference-property">The 'float-reference' property</h3>

    <pre class="propdef">
      Name: float-reference
      Value: inline | column | region | page
      Initial: inline
      Applies to: all elements.
      Inherited: no
      Percentages: N/A
      Media: visual
      Computed value: as specified.
      Animatable: no
    </pre>

    <dl dfn-for="float-reference" dfn-type="value">

      <dt><dfn>inline</dfn>
      <dd>
        The float reference element is the youngest ancestor block-element.

        The float containing block formatting context is the line box of the float
        anchor.

      <dt><dfn>column</dfn>
      <dd>
        The float reference element is the column in a multi column environment in
        which the element had appeared had it not been a float. If the
        element is not inside a column, the float reference element is the youngest
        ancestor block element.

        The float containing block formatting context is a new block formatting
        context so that the float behaves like an absolutely positioned element.
      <dt><dfn>region</dfn>
      <dd>
        The float reference element is the region in a region-chain in within which
        the element had appeared, had it not been a float. If the element is not
        inside a region, the float reference is the youngest ancestor block
        element.

        The float containing block formatting context is a new block formatting
        context so that the float behaves like an absolutely positioned element.

      <dt><dfn>page</dfn>
      <dd>
        The reference element of the float is the page it would be rendered on had
        it not been a float. If the element is not inside a page, the float
        reference element is the youngest ancestor block element.

        The float containing block formatting context is a new block formatting
        context so that the float behaves like an absolutely positioned element.
    </dl>

    <div class="issue">
      It is not possible to directly specify which element to use as the reference
      element. This may be of interest to have.

      Maybe something like:

      <code><pre>
&lt;style>
.float {
  float-reference: float-container;
}

#container {
  float-container: true;
}
&lt;/style>

&lt;div id="container">
&lt;p>First paragraph&lt;span class="float">FLOAT&lt;/span>&lt;/p>

&lt;p>Second paragraph
  &lt;span class="inline-block">[&lt;span class="float">FLOAT&lt;/span>] &lt;/span>
And some more text&lt;/p>
&lt;/div>
      </pre></code>

      This should float both floats with reference to the &lt;div id="container">
      element, rather than the &lt;P> and inline &lt;SPAN> elements.

    </div>

    <div class="note">
      More examples with regions and elements as float references needed.
    </div>

  <h3 id="float-property">The 'float' property</h3>


  <pre class="propdef">
    Name: float
    Value: left | right | top | bottom | block-start | block-end | inline-start | inline-end | snap-block | snap-inline | none
    Initial: none
    Applies to: all elements.
    Inherited: no
    Percentages: N/A
    Media: visual
    Computed value: as specified.
    Animatable: no
  </pre>

  <dl dfn-for="float" dfn-type="value">

    <dt><dfn>left</dfn>
    <dd>
      If the ‘float-reference' is not ‘inline' or ‘writing-mode’ is ‘tb’, the
      element generates a box that is floated to the left and content flows on the
      right side of the box (subject to the ‘clear’ property).

      If ‘float-reference’ is ‘inline’ and ‘writing-mode’ has a different value
      than ‘tb’, the element generates a box that is floated to the top and content
      flows on the bottom side of the box (subject to the ‘clear’ property).

    <dt><dfn>right</dfn>

    <dd>
      Similar to ‘left’, except the box is floated to the bottom (if
      ‘float-reference' is ‘inline' and ‘writing-mode’ is not ‘tb’) or to the right
      (otherwise) and content flows on the left or top side of the box.

    <dt><dfn>top</dfn>

    <dd>
      If ‘float-reference’ is ‘inline’, the same as ‘left’. Otherwise it generates
      a box that is floated to the top of the float reference.

    <dt><dfn>bottom</dfn>

    <dd>
      If ‘float-reference’ is ‘inline’, the same as ‘right’. Otherwise it generates
      a box that is floated to the bottom of the float reference.

    <dt><dfn>inline-start</dfn></dt>

    <dd>
      The same as 'left', 'right' or 'top', depending on the float containing
      block's ‘direction’ and ‘writing-mode’.

    <dt><dfn>inline-end</dfn></dt>

    <dd>
      The same as 'left', 'right' or 'bottom', depending on the float containing
      block's ‘direction’ and ‘writing-mode’.

    <dt><dfn>block-start</dfn></dt>

    <dd>
      The same as 'left', 'right' or 'top', depending on the float containing
      block's ‘direction’ and ‘writing-mode’.

    <dt><dfn>block-end</dfn></dt>

    <dd>
      The same as 'left', 'right' or 'bottom', depending on the float containing
      block's ‘direction’ and ‘writing-mode’.

    <dt><dfn>snap-block(&lt;length> &lt;length>? [, start | end | near ]?)</dfn>
    <dd>
        Makes the element float to the start or the end of the block if it
        naturally appears within a certain distance from either one. The length
        value(s) specifies the maximum distance from the start/end that an element
        must be within in order to be floated; one length value specifies the
        distance from both the start and the end, two length values specify the
        distance from the start and end, respectively.

        The optional keyword value specifies where the element is floated: start,
        end, or the nearest of the two. The initial value is 'near'. If 'near'
        is in effect and the element is within the specified distance both from
        the start and the end, end wins.

        An element is considered to be a float if it has a snap-block() value,
        even if the element does not appear within the specified distance. This
        way, it can be determined whether an element is float or not without
        laying out the document.

    <dt><dfn>snap-block</dfn>
    <dd>same as <tt>snap-block(2em, near)</tt>

    <dt><dfn>snap-inline(&lt;length> &lt;length>? [, left | right | near ]?)</dfn>
    <dd>
        Makes the element float to the line start or line end if it naturally
        appears within a certain distance from the start or end of the line. The
        length value(s) specifies the maximum distance from the start/end that an
        element must be within in order to be floated; one length value specifies
        the distance from both the start and the end, two length values specify the
        distance from the start and end, respectively.

        The optional keyword value specifies where the element is floated: line
        start, line end, or the nearest of the two. The initial value is 'near'.
        If 'near' is in effect and the element is within the specified distance
        both from the start and the end, end wins.

        An element is considered to be a float if it has a snap-inline() value,
        even if the element does not appear within the specified distance. This
        way, it can be determined whether an element is float or not without laying
        out the document.

    <dt><dfn>snap-inline</dfn>
    <dd>same as <tt>snap-inline(2em, near)</tt>

    <dt><dfn>none</dfn>
    <dd>The box is not floated.

  </dl>

  <div class="issue">
    There is currently no way to float into a combination of directions (top right,
    right top, left bottom, bottom left, etc.).
  </div>

  Elements with the float property set to something else than 'none' are called
  'floats'.


  <div class="example">
    Float figure to top of reference column:

<pre>
.figure { float-reference: column; float: top }
</pre>

    <img alt="sample rendering" src="images/7.png">
  </div>

  <div class="example">

<pre>
.figure { float: top; width: 50% }
</pre>

    <img alt="sample rendering" src="images/7b.png">
  </div>

  <div class="example">
    In this example, a figure naturally appears close to a column break. There is
    not enough space for the figure in the first column, and it is therefore placed
    in the second column, leaving white space at the bottom of the first column.

    <img alt="sample rendering" src="images/23.png">

    To avoid the white space, the image can be floated to the nearest edge (in the
    block direction):

<pre>
.figure { float-reference: column; float: snap-block }
</pre>

    In this example, the figure is already at the nearest edge, so it does not
    move. However, floats allow subsequent content to be displayed before the
    float and the white space can therefore be filled:

    <img alt="sample rendering" src="images/7.png">
  </div>

  <div class="example">

    In this example, two figures naturally appear in the text flow:

    <img alt="sample rendering" src="images/20.png">

    A typographer would typically try to avoid single lines of text above/below
    figures, which can be achieved with:

<pre>
div.figure { float-reference: column; float: snap-block(1.5em) }
</pre>

    The length value specifies the reach of the snap function; in this example the
    second figure is affected, but not the first.
  </div>

  <div class="example">

    In this example, two figures naturally appear in the text flow:

    <img alt="sample rendering" src="images/20.png">

    To make the figures snap to the nearest edges, this code can be applied:

<pre>
div.figure { float-reference: column; float: snap-block(2.5em) }
</pre>

    The resultant rendering is:

    <img alt="sample rendering" src="images/22.png">

  </div>


  <div class="example">
    In this example, tables will snap to the top/bottom if the top/bottom of the
    border box is closer than '3em' from the top/bottom of the float-reference
    which is a block element.

<pre>
table { float: snap }
table { float: snap-block(3em) }
table { float: snap-block(3em, bottom) }
table { float: snap-block(3em 2em, bottom) }
</pre>

  </div>

<h2 id="stacking_floats">
Stacking floats</h2>

  Floats for any given line/column/region/page are placed in the order they appear
  in the source document. This means that floats that have been deferred from
  previous columns/regions/pages will be placed first, and thereafter floats from
  the current line/column/region/page.

  Floats with the same float reference are made to never overlap. If the float
  reference is a column, region or page and the float containing context is limited
  in size, and there is not enough space to draw a particular float, that float is
  automatically deferred to the next column/region/page.

  The stacking order of the floats within a related to a particular float reference
  are determined by the block flow and inline directions.

  <p class="note">
    Examples and property definition of 'float-stacking-order' needed! Such as "The
    first float with the float property set to a particular value is floated as the
    outermost element. The second as the second outermost element, etc. ."



<h2 id="clearing_page_floats">
The 'clear' property</h2>

  <pre class="propdef">
    Name: clear
    Value: left | right | top | bottom | none
    Initial: none
    Applies to: block-level elements, floats, regions, pages
    Inherited: no
    Percentages: N/A
    Media: visual
    Computed value: as specified.
    Animatable: no
  </pre>

  To prevent stacking of floats, the 'clear' property can be used:

  <dl dfn-for="clear" dfn-type="value">

    <dt><dfn>left</dfn>
    <dd>
      If applied to a block-level element or a float with a float-reference set
      to context, requires that the top border edge of the box be below the bottom
      outer edge of any left-floats with a context-float-reference that resulted
      from elements earlier in the source document.

      If applied to a float with a float-reference set to column/region/page, it
      requires that the top border edge of the box be below the bottom outer edge
      of any left-floats with a context-float-reference that resulted from elements
      earlier in the source document. If the float-reference's height is limited
      and there is insufficient space to place this float, it requires that this
      and all further left-floats relating to the same float reference are deferred
      to the next page/column/region.

      If applied to a float with a float-reference set to block, it requires that
      the top border edge of the box be below the bottom outer edge of any
      left-floats with a context-float-reference that resulted from elements
      earlier in the source document. If the float-reference's height is limited
      and there is insufficient space to place this float, it requires not to
      display this or any further left-floats with the same float reference.

    <dt><dfn>right</dfn>
    <dd>
      If applied to a block-level element or a float with a float-reference set
      to context, requires that the top border edge of the box be below the bottom
      outer edge of any right-floats with a context-float-reference that resulted
      from elements earlier in the source document.

      If applied to a float with a float-reference set to column/region/page, it
      requires that the top border edge of the box be below the bottom outer edge
      of any right-floats with a context-float-reference that resulted from elements
      earlier in the source document. If the float-reference's height is limited
      and there is insufficient space to place this float, it requires that this
      and all further right-floats relating to the same float reference are
      deferred to the next page/column/region.

      If applied to a float with a float-reference set to block, it requires that
      the top border edge of the box be below the bottom outer edge of any
      right-floats with a context-float-reference that resulted from elements
      earlier in the source document. If the float-reference's height is limited
      and there is insufficient space to place this float, it requires not to
      display this or any further right-floats with the same float reference.

    <dt><dfn>top</dfn>
    <dd>
      If applied to a block-level element or a float with a float-reference set
      to context, do not display this or any further top-floats with the same float
      reference.

      If applied to a float with a float-reference set to column/region/page,
      requires that this and all further top-floats relating to the same float
      reference are deferred to the next page/column/region.

      If applied to a float with a float-reference set to block, do not display
      this or any further top-floats with the same float reference.

    <dt><dfn>bottom</dfn>

    <dd>
      If applied to a block-level element or a float with a float-reference set
      to context, do not display this or any further bottom-floats with the same
      float reference.

      If applied to a float with a float-reference set to column/region/page,
      requires that this and all further bottom-floats relating to the same float
      reference are deferred to the next page/column/region.

      If applied to a float with a float-reference set to block, do not display
      this or any further bottom-floats with the same float reference.

  </dl>


  <div class="example">
    In this example, the two figures may appear in the same column:

<pre>
.figure { float-reference: column; float: bottom; clear: none }

&ltdiv class=figure>&lt;/div>
&ltdiv class=figure>&lt;/div>
</pre>
    <img src="images/16.png">
  </div>

  <div class="example">
    In this example, the two figures will appear in different columns:

<pre>
.figure { float-reference: column; float: bottom; clear: bottom }

&ltdiv class=figure>&lt;/div>
&ltdiv class=figure>&lt;/div>
</pre>

    <img src="images/17.png">
  </div>


  <div class="example">
    In this example, the two figures may appear at the bottom of the same column due to clearing only at the top:

<pre>
.figure { float-reference: column; float: bottom; clear: top }

&ltdiv class=figure>&lt;/div>
&ltdiv class=figure>&lt;/div>
</pre>

    <img src="images/16.png">
  </div>

  <div class="example">
    In this example, the two figures will appear in different columns due to clearing at the bottom:

<pre>
.figure { float-reference: column; float: bottom; clear: bottom }

&ltdiv class=figure>&lt;/div>
&ltdiv class=figure>&lt;/div>
</pre>

    <img src="images/17.png">
  </div>


  <div class="example">
    In this example, the two figures end up the top corner of two different pages:

<pre>
.figure { float-reference: page; float: top; clear: top }

&ltdiv class=figure>&lt;/div>
&ltdiv class=figure>&lt;/div>
</pre>

  </div>

  <div class="example">
    In this example, the two figures request different positions, and they may
    therefore end up in the same column:

<pre>
.figure.one { float-reference: column; float: top; clear: top }
.figure.two { float-reference: column; float: bottom; clear: bottom }

&ltdiv class="figure one">&lt;/div>
&ltdiv class="figure two">&lt;/div>
</pre>

  </div>

<h2 id="deferring_floats">Deferring floats</h2>

  A float can be deferred to a following column/region/page, depending on its
  'float-reference'. Floats with a flot-reference set to 'element' cannot be
  deferred.

  This new property is introduced to control deferring floats:

  <h3 id="float_defer"> The 'float-defer' property</h3>

    <pre class="propdef">
      Name: float-defer
      Value: &ltinteger> | last | none
      Initial: none
      Applies to: floats
      Inherited: no
      Percentages: N/A
      Media: visual
      Computed value: as specified.
      Animatable: no
    </pre>


    This property specifies whether a floats should appear in their natural
    column/region/page, or in a following column/region/page. Values are:

    <dl>
      <dt>none
      <dd>the page float appears in the natural column/region/page

      <dt>&lt;integer>
      <dd>
        A positive integer value indicates that the page float should be
        displayed in a following column/region/page. A negative integer value
        indicates that the page float should be displayed in a following
        column/region/page, counted from the last column/region/page. Zero is not
        a legal value.


        <div class="example">
          Float figure to the top of the column that follows the natural column:

<pre>
.figure { float-reference: column }
.figure { float: top }
.figure { float-defer: 1 }
</pre>

        </div>

        <div class="example">
          Float figure to the top of the next-to-last column:

<pre>
.figure { float-reference: column; float: top; float-defer: -1 }
</pre>

          <img alt="sample rendering" src="images/7.png">
        </div>

        <div class="example">
          Float figure to top of the last column of the multicol element on the current page:

<pre>
.figure { float-reference: column; float: top; float-defer: last }
</pre>

          <img alt="sample rendering" src="images/6.png">
        </div>






        <div class="example">
          Float figure to the top of the first column on the next-to-last page:

<pre>
.figure { float-reference: page }
.figure { float: top }
.figure { float-defer: -1 }
</pre>
        </div>

      <dt>last
      <dd>
        The page float should be displayed in the last colum, region or page.

        <div class="example">
          Float figure to the top of the last column:

<pre>
.figure { float-reference: column }
.figure { float: top }
.figure { float-defer: last }
</pre>

        </div>

      <dt>none
      <dd>The floats should appear in their natural column/region/page, if possible.

    </dl>

    Zero is not a legal value.

<h2 id="wrapping-around-page-floats">Wrapping around floats</h2>

  Floats have their 'wrap-around' property set to 'both' initially and are treated
  like exclusions. This specification does not make any further specification about
  wrapping contents around floats.


<h2 id="the-float_offset-property">The 'float-offset' property</h2>

  <pre class="propdef">
    Name: float-offset
    Value: &lt;length> &lt;length> ?
    Initial: 0
    Applies to: floats
    Inherited: no
    Percentages: N/A
    Media: visual
    Computed value: one or two absolute lengths
    Animatable: no
  </pre>

  This property pushes a float in opposite direction of the where it has been
  floated with 'float'.

  This property can only influence a float along an axis it has been floated.

  <div class="example">

<pre>
img {
  float-reference: column;
  float: left;
  float-offset: 2em;
}
</pre>

    In this example, the image is floated to the left. Therefore, 'float-offset'
    may only push the element to the right.

  </div>


  <div class="example">

<pre>
img {
  float-reference: column;
  float: right;
  float-offset: 5px;
}
</pre>

    <img alt="sample rendering" src="images/14.png">



  </div>

  Percentage values are computed according to this formula:

<pre>
  (containing-block-width - float-width) * percentage
  (containing-block-height - float-height) * percentage
</pre>


  <div class="example">
    Pull quotes are often centered in a column. In this example, the pull quote is
    floated to the right, and then pushed back into the center.

    <img width=213 src="images/exclusion_wrap_side_left.png">

<pre>
.pullquote {
  float-reference: region;
  float: right;
  float-offset: 50%; /* 50% centers the box */
}
</pre>

  <p class="note">
    The body text in the example should wrap around both sides of the floated
    element to follow this specification.

  </div>




<h2 id="overconstrained-page-floats">Overconstrained floats</h2>

  In many cases, the specified values on these properties cannot be honored.

  <div class="example">

    The number of columns is limited, and high values therefore cannot be honored:

<pre>
.figure { float-reference: column; float: top; float-defer: 1000 }
</pre>

  </div>

  <div class="example">
    A narrow screen may only have room for one column, in which case this request
    cannot be honored:

<pre>
.figure { float-reference: column; float: top; float-defer: -5 }
</pre>

  </div>

  <div class="example">
    In long documents, all content cannot fit on the last page, and this rule
    therefore cannot be honored:

<pre>
p { float-reference: page; float: top; float-defer: last }
</pre>

  </div>

  Floats are processed in the order they appear in the source. However, the
  visual order of floats may not be the same as the source order.

  <div class="example">
    Consider this code:

<pre>
.one { float-reference: page; float: top; float-defer: last }
.two { float-reference: column; float: top; clear: column }

&lt;div class=one>&lt;/div>
&lt;div class=two>&lt;/div>
</pre>

    In this example, the first element requests to appear on the last page, while
    the second element requests to appear in the natural column. If the natural
    column of the second element appears on a page before the last page, the second
    element will appear visually before the first.

  </div>


  <div class="example">

    Consider this code:

<pre>
.one { float-reference: page; float: top; float-defer: last }
.two { float-reference: page; float: top; clear: page; }

&lt;div class=one>&lt;/div>
&lt;div class=two>&lt;/div>
</pre>

    If all content can fit on one page, the first page will also be the last page.
    The first element is processed first and is placed on top of the first page.
    Then the second element is processed. It requests a clear top, somthing which is
    not possible on the first page. Therefore, a second page is created and the
    first element is moved there. Even if the first element requests to be on the
    last page, it will not appear there.

  </div>

  When resolving over-constrained layouts, the order of importance for defined
  goals are:

  <ol>
    <li>
      honor basic multi-column layout ('columns', 'column-span: all',
      'column-gap' etc)
    <li>honor 'column-span: &lt;integer>'
    <li>honor 'clear: top/bottom/pcolumn/page'
    <li>honor 'float-defer'
    <li>honor 'float: top/bottom'
    <li>display all content (as described by other CSS properties)
    <li>keep the number of pages to a minimum
  </ol>

<h2 class="no-num" id="changes">Changes</h2>

  Changes from the
  <a href="https://hg.csswg.org/drafts/raw-file/108d7e3ff204/css-page-floats/Overview.html">
    24 September 2013 CSS Page Floats Editor's Draft
  </a>
  :

  <ol>
    <li>
      Simplified, removed advanced options that weren't defined entirely.
    <li>
      Switched to bikeshed document type
    <li>
      Changed editor
    <li>
      Removed sections on Regions and Exclusions
    <li>
      Added float-reference
    <li>
      Added possibility to float into regions
    <li>
      Removed part about numeric column-span
    <li>
      Removed possibility to defer for page and column independently for the same
      float
    <li>
      Adjusted clear to work with pages/regions/columns
    <li>
      Removed part about float inside/outside for pages
  </ol>

<h2 class="no-num" id="acks">
Acknowledgments</h2>

  This specification is made possible by input from
  Tab Atkins Jr.,
  David Baron,
  Lars Erik Bolstad,
  Bert Bos,
  Mike Bremford,
  Michael Day,
  Werner Donn&eacute;,
  Brady Duga,
  James Elmore,
  Elika Etemad,
  Michel Fortin,
  Daniel Glazman,
  Melinda Grant,
  Ian Hickson,
  Laurens Holst,
  Brad Kemper,
  Toru Kawakubo,
  Rune Lillesveen,
  Peter Linss,
  Cameron McCormack,
  Paul E. Merrell,
  Del Merritt,
  Markus Mielke,
  Kelly Miller,
  Alex Mogilevsky,
  Peter Moulder,
  Shinyu Murakami,
  Michel Onoff,
  Anton Prowse,
  Liam R E Quin,
  Jacob Grundtvig Refstrup,
  Florian Rivoal,
  Christian Roth,
  Allan Sandfeld Jensen,
  Simon Sapin,
  Morten Stenshorne,
  Philip Taylor,
  Ian Tindale,
  Ladd Van Tol,
  Tarquin (Mark) Wilton-Jones,
  Steve Zilles,
  Tantek &#xC7;elik
  and the CSS Working Group members.
