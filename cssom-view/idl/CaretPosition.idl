
[Documentation=
 "<p>A <dfn>caret position</dfn> gives the position of a text insertion point indicator. It always has an associated\
  <dfn>caret node</dfn>, <dfn>caret offset</dfn>, and <dfn>caret range</dfn>. It is represented by a {@name} {@type}.</p>"
]
interface CaretPosition {

  [Documentation=
   "<p>The {@name} {@type}  must return the <span>caret node</span>.</p>"
  ]
  readonly attribute Node offsetNode;

  [Documentation=
   "<p>The {@name} {@type}  must return the <span>caret offset</span>.</p>"
  ]
  readonly attribute unsigned long offset;
  
  [Documentation=
   "<p>The {@name} {@type} must follow these steps, aborting on the first step that\
    returns a value:</p>\
    <ol>\
     <li>\
      <p>If <span>caret range</span> is not null:\
      <ol>\
       <li><p>Let <var>list</var> be the result of invoking the\
       <code title=dom-Range-getClientRects>getClientRects()</code> method on the\
       range.
       <li><p>If <var>list</var> is empty, return null.\
       <li><p>Return the <code>ClientRect</code> object in <var>list</var> at index 0.\
      </ol>\
     <li><p>If <span>caret node</span> is a text entry widget that is a replaced element,\
     and that is in the document, return a <code>ClientRect</code> object for the caret\
     in the widget as represented by the <span>caret offset</span> value.\
     <li><p>Return null.\
    </ol>"
  ]
  ClientRect? getClientRect ();

};
