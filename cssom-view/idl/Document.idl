
partial interface Document {

  [Documentation=
   "<p>The {@name} {@type} must return the element at coordinates <var>x</var>,<var>y</var> in the <span>viewport</span>. The element to be returned is determined\
    through hit testing. If either argument is negative, <var title>x</var> is greater than the <span>viewport</span> width excluding the size of a rendered scroll\
    bar (if any), or <var title>y</var> is greater than the <span>viewport</span> height excluding the size of a rendered scroll bar (if any), the method must\
    return null. If there is no element at the given position the method must return the root element, if any, or null otherwise.</p>"
  ]
  Element? elementFromPoint(double x, double y);

  [Documentation=
   "<p>The {@name} {@type} must return the result of running these steps:</p>\
    <ol>\
     <li><p>If either argument is negative, <var title>x</var> is greater\
     than the <span>viewport</span> width excluding the size of a rendered\
     scroll bar (if any), <var title>y</var> is greather than the\
     <span>viewport</span> height excluding the size of a rendered scroll bar\
     (if any) return null.</p></li>\
     <li><p>If at the coordinates <var title>x</var>,<var title>y</var>\
     in the <span>viewport</span> no text insertion point indicator would have\
     been inserted return null.</p></li>\
     <li>\
      <p>If at the coordinates <var title>x</var>,<var title>y</var>\
      in the <span>viewport</span> a text insertion point indicator would have\
      been inserted in a text entry widget which is also a replaced element\
      return a <span>caret position</span> with its properties set as\
      follows:</p>\
      <dl>\
       <dt><span>caret node</span></dt>\
       <dd><p>The node corresponding to the text entry widget.</p></dd>\
       <dt><span>caret offset</span></dt>\
       <dd><p>The amount of 16-bit units to the left of where the\
       text insertion point indicator would have inserted.</p></dd>\
       <dt><span>caret range</span></dt>\
       <dd><p>null</p></dd>\
      </dl>\
     </li>\
     <li>\
      <p>Otherwise, return a <span>caret position</span> where the\
      <span>caret range</span> is a collapsed\
      <code data-anolis-spec=dom>Range</code> object for the position\
      where the text insertion point indicator would have been inserted and\
      the other properties are set as follows:</p>\
      <dl>\
       <dt><span>caret node</span></dt>\
       <dd><p>The <code data-anolis-spec=dom title=dom-Range-startContainer>startContainer</code>\
       of the <span>caret range</span>.</p></dd>\
       <dt><span>caret offset</span></dt>\
       <dd><p>The <code data-anolis-spec=dom title=dom-Range-startOffset>startOffset</code> of\
       the <span>caret range</span>.</p>\
      </dl>\
     </li>\
    </ol>\
    <p class='note'>The specifics of hit testing are out of scope of this\
    specification and therefore the exact details of\
    <code title=widl-Document-elementFromPoint>elementFromPoint()</code> and\
    <code title=widl-Document-caretPositionFromPoint>caretPositionFromPoint()</code>\
    are therefore too. Hit testing will hopefully be defined in a future\
    revision of CSS or HTML.</p>"
  ]
  CaretPosition? caretPositionFromPoint(double x, double y);

};
