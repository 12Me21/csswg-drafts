<pre class=metadata>
Title: CSS Snap Size
Shortname: css-snap-size
Level: 1
Group: CSSWG
Status: ED
Work Status: exploring
Editor: Koji Ishii, Google, kojiishi@gmail.com
Editor: Elika Etemad, Invited Expert, http://fantasai.inkedblade.net/contact
ED: https://drafts.csswg.org/css-snap-size/
Abstract: This module contains CSS features for aligning content size to a multiple of unit size.
</pre>

Introduction {#intro}
=====================

<div class="issue">TBD</div>

Snapping Heights: the 'snap-height' property {#snap-height}
===========================================================

<pre class='propdef'>
  Name: snap-height
  Value: none | <<length>> <<number>>?
  Initial: none
  Applies to: block, flex and grid containers
  Inherited: yes
  Animatable: no
  Percentages: N/A
  Media: visual
  Computed Value: as specified
</pre>

Values have the following meanings:

<dl dfn-for="snap-height">
  <dt><dfn>none</dfn>
  <dd>
    This value indicates that there is no snapping behavior.
  <dt><<length>>
  <dd>
    This value defines the <dfn>grid unit</dfn>.
  <dt><<number>>
  <dd>
    This value defines the <dfn>grid baseline position</dfn>
    within the <a>grid unit</a>.
</dl>

When the <a>grid unit</a> is set to a positive length,
the line box heights are rounded <i>up</i> to
the closest multiple of the unit.

[[!CSS21]] defines how to compute the line box height
after the line box was constructed from inline-level boxes.
The rounding is applied to the computed line box height.
The additional spaces created by the rounding
are added <a>over</a> and <a>under</a> the line box
by pushing down the line box to the block flow direction.
These spaces do not affect the top and the bottom of the line box,
so that the position of ''vertical-align/top'' or ''vertical-align/bottom''
of the 'vertical-align' property are not affected.

The <a>grid baseline position</a> then determines
how the additional spaces are distributed to <a>over</a> and <a>under</a>.
When it is not set,
the space is distributed to <a>over</a> and <a>under</a> equally,
so that the line box appears at the center of the
multiple of <a>grid units</a>.
When the <a>grid baseline position</a> is set,
refer to the <a href="#snap-baseline">snapping baselines</a> section below.

For block-level replaced elements,
the rounding is applied to their logical heights of the margin boxes
by increasing the used value of 'margin-block-start' and 'margin-block-end' equally.

<div class="example">
  <pre class="lang-css">
  :root {
    --my-body-font-size: 12pt;
    --my-grid: 18pt;
    font-size: var(--my-body-font-size);
    snap-height: var(--my-grid);
  }
  h1 {
    font-size: calc(1.618 * var(--my-body-font-size));
    margin-block-start: calc(2 * var(--my-grid));
  }
  .side {
    font-size: calc(0.707 * var(--my-font-size));
  }
  </pre>
  <div class="issue">needs pictures</div>
</div>

Snapping Baselines {#snap-baseline}
-----------------------------------

When the baseline position is a positive number equals to or less than 1,
the additional spaces are distributed as below:

* space-over = (GU + BP - (1em - BP)) / 2 - mod((LH + A - D) / 2, L)
* space-under = (GU - BP + (1em - BP)) / 2 - mod((LH - A + D) / 2, L)
* GU: the <a>grid unit</a>.
* BP: the specified baseline position * font-size.
* LH: the 'line-height'.
* A, D: ascent/descent of the line box.

<div class="issue">
  The math needs verifications.
</div>

<div class="example">
  <pre class="lang-css">
  :root {
    snap-height: var(--my-grid) .8;
  }
  </pre>
  <div class="issue">needs pictures</div>
</div>

Snapping Block Boxes
--------------------

<div class="issue">TBD</div>

Snapping Widths: the 'snap-width' property {#snap-width}
========================================================

<pre class='propdef'>
  Name: snap-width
  Value: none | <<length>>
  Initial: none
  Applies to: block, flex and grid containers
  Inherited: yes
  Animatable: no
  Percentages: N/A
  Media: visual
  Computed Value: as specified
</pre>
Values have the following meanings:

<dl dfn-for="snap-width">
  <dt><dfn>none</dfn>
  <dd>
    This value indicates that there is no snapping behavior.
  <dt><<length>>
  <dd>
    When this property is set to a positive <<length>>,
    the logical width of the content-box is rounded <i>down</i>
    to the closest multiple of the <<length>>
    by increasing the used value of 'margin-inline-end'.

    Setting this property improves the justification
    for Han ideograph-based scripts
    such as Chinese or Japanese.
</dl>

<div class="issue">
  It was pointed out that changing the width of content-box
  could be more complex to implement than changing the width of the line box.
  Needs further investigations.
</div>
