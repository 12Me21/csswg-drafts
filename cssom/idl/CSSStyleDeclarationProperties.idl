
[Documentation=
 "<p>If the user agent supports the 'float' CSS property, the following partial interface applies.</p>"
]
partial interface CSSStyleDeclaration {

  [Documentation=
  "<p>The <code>cssFloat</code>\
  attribute, on getting, must return the result of invoking\
  <code title=dom-CSSStyleDeclaration-getPropertyValue>getPropertyValue()</code> with\
  <code>'float'</code> as argument. On setting, the attribute must invoke\
  <code title=dom-CSSStyleDeclaration-setProperty>setProperty()</code> with\
  <code>'float'</code> as first argument, as second argument the given value, and no third argument.\
  Any exceptions thrown must be re-thrown.",
  TreatNullAs=EmptyString
  ]
  attribute DOMString cssFloat;
};


[Documentation=
 "<p>For each CSS property <var>property</var> that the user agent supports, except for\
  the 'float' property, the following partial interface applies where <var>attribute</var>\
  is obtained by running the <span>CSS property to IDL attribute</span> algorithm for\
  <var>property</var>.</p>"
]
partial interface CSSStyleDeclaration {

  [Documentation=
  "<p>Getting the <var>attribute</var> attribute must return the result of invoking\
  <code title=dom-CSSStyleDeclaration-getPropertyValue>getPropertyValue()</code> with as\
  argument the result of running the <span>IDL attribute to CSS property</span>\
  algorithm for <var>attribute</var>.</p>\
  <p>Setting the <var>attribute</var> attribute must invoke\
  <code title=dom-CSSStyleDeclaration-setProperty>setProperty()</code> with as\
  first argument the result of running the <span>IDL attribute to CSS property</span>\
  algorithm for <var>attribute</var>, as second argument the given value, and no third argument. Any\
  exceptions thrown must be re-thrown.</p>",
  TreatNullAs=EmptyString
  ]
  attribute DOMString attribute;
};
