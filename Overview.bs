<link href='web-animations.css' rel='stylesheet' type='text/css'>
<pre class='metadata'>
Title: Scroll-linked Animations
Group: CSSWG
Status: UD
Work Status: exploring
ED: https://birtles.github.io/scroll-animations/
Shortname: scroll-animations
Abstract: Defines an API and markup for creating animations that are either
          triggered by or tied to the scroll offset of a scroll container.
Editor: Dean Jackson <dino@apple.com>
Editor: Brian Birtles <bbirtles@mozilla.com>
Editor: Botond Ballo <botond@mozilla.com>
</pre>

# Introduction # {#intro}

TBD

# Use cases # {#use-cases}

TBD
 - We should add the usecase which using the scroll timeline.
 - We will need to add the picture which explaining the usecase.
 - We should write the example code.

# Triggering animations # {#triggering-animations}

## The {{AnimationTimelineTrigger}} interface ## {#animationtimelinetrigger-interface}

<pre class="idl">
interface AnimationTimelineTrigger {
};
</pre>

An <dfn>animation timeline trigger</dfn> is an object that can be in one of
two states: <dfn>active</dfn> and <dfn>inactive</dfn>. A trigger starts off
as inactive, and can subsequently be activated or deactivated by the user-agent
depending on the specific type of trigger.

A trigger cannot be explicitly activated or deactivated from script, only by
the user-agent.

## Extensions to the {{AnimationTimeline}} interface ## {#extensions-to-animationtimeline}

<pre class="idl">
partial interface AnimationTimeline {
  readonly attribute AnimationTimelineTrigger? trigger;
};
</pre>

If a timeline has a specified trigger, the timeline is only activate when its 
trigger is active.

That is, a timeline with a trigger only becomes active when its trigger becomes
active <strong>and</strong> all the other criteria for the timeline becoming
active are met. When the trigger becomes inactive, the timeline becomes inactive
as well.

## Scroll Triggers ## {#scroll-triggers}

### The {{ScrollDirection}} enumeration ### {#scrolldirection-enumeration}

<pre class="idl">
enum ScrollDirection {
  "horizontal",
  "vertical"
};
</pre>

The {{ScrollDirection}} enumeration specifies a direction of scroll of a
scrollable element.

:   <code>horizontal</code>
::  Selects the horizontal direction

:   <code>vertical</code>
::  Selects the vertical direction

ISSUE: Is this defined elsewhere?

ISSUE: Should this support logical directions, such as "block" and "inline", instead? As well?

### The {{ScrollTriggerKind}} enumeration ### {#scrolltriggerkind-enumeration}

<pre class="idl">
enum ScrollTriggerKind {
  "offset",
  "range"
};
</pre>

The {{ScrollTriggerKind}} enumeration specifies the kind of a {{ScrollTrigger}}.

:   <code>offset</code>
::  The scroll trigger is activated when a scroll offset is reached,
    and never subsequently deactivated.

:   <code>range</code>
::  The scroll trigger is active whenever the scroll offset is inside
    a particular range.

### The {{ScrollTrigger}} interface ### {#scrolltriggger-interface}

<pre class="idl">
dictionary ScrollTriggerOptions {
  Element scrollSource;
  ScrollTriggerKind kind = "offset";
  ScrollDirection orientation;
  DOMString scrollOffset = "auto";
  DOMString endScrollOffset = "auto";
};

[Constructor(ScrollTriggerOptions options)]
interface ScrollTrigger : AnimationTimelineTrigger {
  readonly attribute Element scrollSource;
  readonly attribute ScrollTriggerKind kind;
  readonly attribute ScrollDirection orientation;
  readonly attribute DOMString scrollOffset;
  readonly attribute DOMString endScrollOffset;
};
</pre>

<div link-for-hint="ScrollTrigger">
A {{ScrollTrigger}} is an {{AnimationTimelineTrigger}} associated with a scrollable
element. 

</p>

<div class="attributes">

:   <dfn attribute for=ScrollTrigger>scrollSource</dfn>
::  The scrollable element whose scrolling activates and deactivates the trigger.

:   <dfn attribute for=ScrollTrigger>kind</dfn>
::  Determines the way in which scrolling {{scrollSource}} activates and deactivates
    the trigger.

    The values have the following behaviour:

    :   offset
    ::  The trigger is activated when {{scrollSource}}'s scroll offset in {{orientation}} 
        reaches {{scrollOffset}}, and never subsequently deactivated. {{endScrollOffset}} 
        is ignored.

    :   range
    ::  The trigger is activated when {{scrollSource}}'s scroll offset in {{orientation}} 
        enters the interval [{{scrollOffset}}, {{endScrollOffset}}], and deactivated when 
        the scroll offset exits that interval.

:   <dfn attribute for=ScrollTrigger>orientation</dfn>
::  Determines the direction of scrolling which drives the activation and deactivation
    of the trigger.

    If a value for {{orientation}} is not specified, and {{scrollSource}} is only scrollable
    in one direction, that direction is used; if {{scrollSource}} is scrollable
    in both directions, an unspecified direction is used.

:   <dfn attribute for=ScrollTrigger>scrollOffset</dfn>
::  The scroll offset, in the direction specified by {{orientation}}, that triggers 
    activation of the trigger.

    Recognized values are defined by the following grammar:

    <blockquote>
      <pre class="prod">auto | <<length>> | <<percentage>></pre>
    </blockquote>

    The meaning of each value is as follows:

    :   auto
    ::  The beginning of {{scrollSource}}'s scroll range in {{orientation}}.
    :   <<length>>
    ::  An absolute distance along {{scrollSource}}'s scroll range in {{orientation}}.
    :   <<percentage>>
    ::  A percentage distance along {{scrollSource}}'s scroll range in {{orientation}}.

    The way in which the trigger's activation depends on this offset is determined by the
    trigger's {{kind}}.

:   <dfn attribute for=ScrollTrigger>endScrollOffset</dfn>
::  A scroll offset that constitutes the end of a range in which the trigger is activated.

    Recognized values are defined by the following grammar:

    <blockquote>
      <pre class="prod">auto | <<length>> | <<percentage>></pre>
    </blockquote>

    The meaning of each value is as follows:

    :   auto
    ::  The end of {{scrollSource}}'s scroll range in {{orientation}}.
    :   <<length>>
    ::  An absolute distance along {{scrollSource}}'s scroll range in {{orientation}}.
    :   <<percentage>>
    ::  A percentage distance along {{scrollSource}}'s scroll range in {{orientation}}.

    This is ignored if the trigger's {{kind}} is {{offset}}.

</div>
</div>

## The 'animation-trigger' property ## {#animation-trigger}

<pre class='propdef'>
Name: animation-trigger
Value: <<single-animation-trigger>>#
Initial: auto
Applies to: all elements, ::before and ::after pseudo-elements
Inherited: none
Animatable: no
Percentages: N/A
Media: interactive
Computed value: As specified
Canonical order: per grammar
</pre>

<dfn>&lt;single-animation-trigger></dfn> = auto | scroll(<snap point> [, <snap
point>]+)

Issue: How do we specify the scroll container? Via a separate property? Could
a separate &lsquo;animation-scroll-container&rsquo; property cover both
'animation-trigger' and 'animation-timeline'?

Issue: Do we need this, or is '@trigger' sufficient?

## '@trigger' rules ## {#trigger-rules}

## Examples ## {#trigger-examples}

# Controlling animation playback # {#controlling-animation-playback}

## The {{ScrollTimeline}} interface ## {#scrolltimeline-interface}

<pre class="idl">
enum ScrollTimelineAutoKeyword { "auto" };

dictionary ScrollTimelineOptions {
  (double or ScrollTimelineAutoKeyword) timeRange = "auto";
  FillMode fill = "none";
};

[Constructor(ScrollTimelineOptions options)]
interface ScrollTimeline : AnimationTimeline {
  attribute (double or ScrollTimelineAutoKeyword) timeRange;
  attribute FillMode fill;
};
</pre>

<div link-for-hint="ScrollTrigger">

A {{ScrollTimeline}} is an {{AnimationTimeline}} whose time values are determined
not by wall-clock time, but by the progress of scrolling in a [=scroll container=].

A {{ScrollTimeline}} must have a {{AnimationTimeline/trigger}}, it must be of type
{{ScrollTrigger}}, and the trigger's {{kind}} must be {{range}}.

The scroll container whose scrolling drives the timeline is the trigger's 
{{scrollSource}}. The direction of scroling that drives the timeline is the 
trigger's {{orientation}}.

<div class="attributes">

:   <dfn attribute for=ScrollTimeline>timeRange</dfn>
::  A time duration that allows mapping between a distance scrolled, and quantities
    specified in time units, such as 'animation-duration' and 'animation-delay'.

    Does not have a correspondence to wall-clock time.

    This is used to compute the timeline's [=effective time range=], and the mapping
    is then defined by mapping the scroll distance from 
    {{AnimationTimeline/trigger}}.{{scrollOffset}} to 
    {{AnimationTimeline/trigger}}.{{endScrollOffset}},
    to the [=effective time range=].

:   <dfn attribute for=ScrollTimeline>fill</dfn>
::  Determines whether the timeline is active even when the scroll offset is outside
    the range defined by [{{scrollOffset}}, {{endScrollOffset}}].

    Possible values are:

    :   none
    ::  The timeline is inactive when the scroll offset is less than {{scrollOffset}} 
        or greater than {{endScrollOffset}}.

    :   forwards
    ::  When the scroll offset is less than {{scrollOffset}}, the
        timeline's [[web-animations#current-time|current time]] is 0.
        When the scroll offset is greater than {{endScrollOffset}}, the
        timeline is inactive.

    :   backwards
    ::  When the scroll offset is less than {{scrollOffset}}, the
        timeline is inactive.
        When the scroll offset is greater than {{endScrollOffset}}, the
        timeline's [[web-animations#current-time|current time]] is its 
        [=effective time range=].

    :   both
    ::  When the scroll offset is less than {{scrollOffset}}, the
        timeline's [[web-animations#current-time|current time]] is 0.
        When the scroll offset is greater than {{endScrollOffset}}, the
        timeline's [[web-animations#current-time|current time]] is its 
        [=effective time range=].

    :   auto
    ::  Behaves the same as <code>none</code>.
        

</div>

### The effective time range of a {{ScrollTimeline}} ### {#efffective-time-range-algorithm}

The <dfn>effective time range</dfn> of a {{ScrollTimeline}} is calculated as follows:

<div class="switch">

:   If the {{ScrollTimeline/timeRange}} has the value <code>"auto"</code>,
::  The [=effective time range=] is the maximum value of the 
    [[web-animations#target-effect-end|target effect end]] of all animations
    directly associated with this timeline.

    If any animation directly associated with the timeline has a 
    [[web-animations#target-effect-end|target effect end]] of infinity, the
    behaviour is unspecified.

:   Otherwise,
::  The [=effective time range=] is the {{ScrollTimeline}}'s 
    {{ScrollTimeline/timeRange}}.

</div>

### The current time of a {{ScrollTimeline}} ### {#current-time-algorithm}

The [[web-animations#current-time|current time]] of a {{ScrollTimeline}} is calculated
as follows:

1.  Let <var>current scroll offset</var> be the current scroll offset of {{scrollSource}}
    in the direction specified by {{orientation}}.

2.  If <var>current scroll offset</var> is less than {{scrollOffset}}, return an unresolved
    time value if {{ScrollTimeline/fill}} is <code>none</code> or <code>backwards</code>, 
    or 0 otherwise.

3.  If <var>current scroll offset</var> is greater than or equal to {{endScrollOffset}}, 
    return an unresolved time value if {{ScrollTimeline/fill}} is <code>none</code> or
    <code>forwards</code>, or the [=effective time range=] otherwise.

4.  Return the result of evaluating the following expression:

    <blockquote>
      <code>(<var>current scroll offset</var> - {{scrollOffset}}) / ({{endScrollOffset}} - {{scrollOffset}}) &times; [=effective time range=]</code>
    </blockquote>


</div>  <!-- link-for-hint="ScrollTrigger" -->

## Extensions to the {{DocumentTimeline}} interface ## {#document-timeline-interface}

<pre class="idl">
partial dictionary DocumentTimelineOptions {
  ScrollTrigger trigger;
};
[Constructor(DocumentTimelineOptions options)]
partial interface DocumentTimeline {
  readonly attribute ScrollTrigger trigger;
};
</pre>

Issue: We should add the DocumentTimelineOptions to the [[WEB-ANIMATIONS-1]].

Issue: Do we need to repeat the attribute here? It is already listed in [[#extensions-to-animationtimeline]].

The {{DocumentTimeline}} is defined in [[WEB-ANIMATIONS-1]].

If we specified the trigger, this DocumentTimeline will perform following behaviors.
 1. If the ScrollTriggerKind of specified options is "offset":
    1. DocumentTimeline will return current document timeline time after exceed specified offset.
 1. If the ScrollTriggerKind of specified options is "range":
    1. DocumentTimeline wil lreturn current document timeline time when scroll offset is within specified range.

ISSUE: Is it necessary to specify the above, or does it fall out naturally from the definitions of 
       {{ScrollTrigger}}, {{AnimationTimeline/trigger}}, and [[web-animations#inactive-timeline]]?

## The 'animation-timeline' property ## {#animation-timeline}

<pre class='propdef'>
Name: animation-timeline
Value: <<single-animation-timeline>>#
Initial: auto
Applies to: all elements, ::before and ::after pseudo-elements
Inherited: none
Animatable: no
Percentages: N/A
Media: interactive
Computed value: As specified
Canonical order: per grammar
</pre>

<dfn>&lt;single-animation-timeline></dfn> = auto | scroll

## Examples ## {#timeline-examples}

TBD

# Avoiding cycles with layout # {#avoiding-cycles}

The ability for scrolling to drive the progress of an animation, gives rise to 
the possibility of <dfn>layout cycles</dfn>, where a change to a scroll offset
causes an animation's effect to update, which in turn causes a new change to the
scroll offset.

To avoid such cycles, animations with a {{ScrollTimeline}} are sampled once
per frame, after scrolling in response to input events has taken place, but
before {{requestAnimationFrame()}} callbacks are run. If the sampling of such an
animation causes a change to a scroll offset, the animation will not be
re-sampled to reflect the new offset until the next frame.

The implication of this is that in some situations, in a given frame, the 
rendered scroll offset of a scroll container may not be consistent with the state 
of an animation driven by scrolling that scroll container. However, this will
only occur in situations where the animation's effect changes the scroll offset
of that same scroll container (in other words, in situations where the animation's
author is asking for trobule). In normal situations, including - importantly - 
when scrolling happens in response to input events, the rendered scroll offset
and the state of scroll-driven animations will be consistent in each frame.